{"version":3,"file":"static/js/927.11b939ef.chunk.js","mappings":"yLAEAA,EAAAA,mBAAA,SACEC,GAEA,OAAO,SAAAC,GACL,IAAMC,EAAOF,IAEb,OADAE,EAAKC,OAAOF,GACLG,EAAOC,KAAKH,EAAKI,a,mFCR5B,eAEMC,EAAmBC,EAAQ,OAEpBT,EAAAA,UAAYU,EAAAA,oBAAmB,WAC1C,OAAAF,EAAiB,gBAGNR,EAAAA,UAAYU,EAAAA,oBAAmB,WAC1C,OAAAF,EAAiB,gBAGNR,EAAAA,UAAYU,EAAAA,oBAAmB,WAC1C,OAAAF,EAAiB,gBAGNR,EAAAA,UAAYU,EAAAA,oBAAmB,WAC1C,OAAAF,EAAiB,iB,mFCjBnB,IAAMG,EAAcF,EAAQ,OAE5BT,EAAAA,eAAA,SAA+BY,GAC7B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BJ,EAAYC,GAAO,SAASI,EAAUC,GAChCD,EACFD,EAAOC,GAITF,EAAQG,UAKdjB,EAAAA,mBAAA,SAAmCY,GACjC,OAAOD,EAAYC,K,o9CChBrB,eACA,UAIAZ,EAAAA,iBAAA,W,gGAEe,SAAMkB,EAAAA,eAJc,K,OAK/B,OADMC,EAAKC,EAAAA,OACPC,EAAAA,iBAAiBF,GACZ,CAAP,EAAOA,G,+BAKbnB,EAAAA,qBAAA,WACE,OAAa,CACX,IAAMmB,EAAKD,EAAAA,mBAboB,IAc/B,GAAIG,EAAAA,iBAAiBF,GACnB,OAAOA,I,4DAKbG,CAAAA,EAAAA,S,gvBCvBA,kBACA,WACA,WAMA,UACA,UACA,WACA,WACA,WACA,WASA,aAqCE,WACEC,EACAC,EACAC,EACAC,QAHA,IAAAH,IAAAA,EAAQ,IAAII,EAAAA,GAAG,SACf,IAAAH,IAAAA,EAAU,IAAIG,EAAAA,GAAG,SACjB,IAAAF,IAAAA,EAAYG,EAAAA,oBACZ,IAAAF,IAAAA,EAAWE,EAAAA,gBAEXC,KAAKN,MAAQA,EACbM,KAAKL,QAAUA,EACfK,KAAKJ,UAAYA,EACjBI,KAAKH,SAAWA,EAEhBG,KAAKC,YAoDT,OA9FSC,EAAAA,gBAAP,SAAuBC,GACb,IAAAT,EAAwCS,EAAW,MAA5CR,EAAiCQ,EAAW,QAAnCP,EAAwBO,EAAW,UAAxBN,EAAaM,EAAW,SAE3D,OAAO,IAAID,EACTR,EAAQ,IAAII,EAAAA,IAAG,IAAAM,UAASV,SAAUW,EAClCV,EAAU,IAAIG,EAAAA,IAAG,IAAAM,UAAST,SAAYU,EACtCT,GAAY,IAAAQ,UAASR,QAAaS,EAClCR,GAAW,IAAAO,UAASP,QAAYQ,IAItBH,EAAAA,yBAAd,SAAuCI,GACrC,IAAMC,EAAST,EAAAA,IAAIU,OAAOF,GAE1B,IAAKG,MAAMC,QAAQH,GACjB,MAAM,IAAII,MAAM,mDAGlB,OAAOX,KAAKY,gBAAgBL,IAGhBL,EAAAA,gBAAd,SAA8BK,GACtB,QAAwCA,EAAM,GAA7Cb,EAAK,KAAEC,EAAO,KAAEC,EAAS,KAAEC,EAAQ,KAE1C,OAAO,IAAIK,EAAQ,IAAIJ,EAAAA,GAAGJ,GAAQ,IAAII,EAAAA,GAAGH,GAAUC,EAAWC,IAqBxDK,EAAAA,UAAAA,UAAR,WACE,GAAIF,KAAKN,MAAMmB,GAAG,IAAIf,EAAAA,GAAG,IACvB,MAAM,IAAIa,MAAM,mCAElB,GAAIX,KAAKL,QAAQkB,GAAG,IAAIf,EAAAA,GAAG,IACzB,MAAM,IAAIa,MAAM,qCAElB,GAA8B,KAA1BX,KAAKJ,UAAUkB,OACjB,MAAM,IAAIH,MAAM,sCAElB,GAA6B,KAAzBX,KAAKH,SAASiB,OAChB,MAAM,IAAIH,MAAM,sCAOpBT,EAAAA,UAAAA,IAAAA,WACE,MAAO,EACL,IAAAa,oBAAmBf,KAAKN,QACxB,IAAAqB,oBAAmBf,KAAKL,SACxBK,KAAKJ,UACLI,KAAKH,WAOTK,EAAAA,UAAAA,UAAAA,WACE,OAAOJ,EAAAA,IAAIkB,OAAOhB,KAAKiB,QAMzBf,EAAAA,UAAAA,WAAAA,WACE,OAAQF,KAAKH,SAASqB,OAAOnB,EAAAA,iBAQ/BG,EAAAA,UAAAA,QAAAA,WACE,OAAOF,KAAKL,QAAQwB,UAAYnB,KAAKN,MAAMyB,UAAYnB,KAAKH,SAASqB,OAAOnB,EAAAA,iBAEhF,EApGA,GAAa5B,EAAAA,QAAAA,EAyGAA,EAAAA,eAAiB,SAAUiD,GACtC,KACE,IAAAC,gBAAeD,GACf,MAAOE,GACP,OAAO,EAGT,MAAO,sBAAsBC,KAAKH,IAevBjD,EAAAA,kBAAoB,SAAUiD,EAAoBI,IAC7D,IAAAC,mBAAkBL,GAClB,IAAMM,GAAU,IAAAC,gBAAeP,GAAYQ,cAEvCC,EAAS,GACTL,IAEFK,GADgB,IAAAC,QAAON,EAAgBO,EAAAA,WAAWC,IACjCC,WAAa,MAMhC,IAHA,IAAM3D,GAAO,IAAA4D,kBAAiBL,EAASH,GAASO,SAAS,OACrDE,EAAM,KAEDC,EAAI,EAAGA,EAAIV,EAAQZ,OAAQsB,IAC9BC,SAAS/D,EAAK8D,GAAI,KAAO,EAC3BD,GAAOT,EAAQU,GAAGE,cAElBH,GAAOT,EAAQU,GAInB,OAAOD,GAQIhE,EAAAA,uBAAyB,SACpCiD,EACAI,GAEA,OAAO,IAAAe,gBAAenB,KAAe,IAAAoB,mBAAkBpB,EAAYI,KAAoBJ,GAQ5EjD,EAAAA,gBAAkB,SAAUM,EAAciB,IACrD,IAAA+C,gBAAehE,IACf,IAAAgE,gBAAe/C,GACf,IAAMgD,EAAU,IAAI5C,EAAAA,GAAGJ,GAEvB,OAAIgD,EAAQvB,UAGH,IAAAwB,SAAQ,CAAClE,EAAM,OAAOmE,OAAO,KAI/B,IAAAD,SAAQ,CAAClE,EAAMD,EAAOC,KAAKiE,EAAQG,aAAaD,OAAO,KASnDzE,EAAAA,iBAAmB,SAAUM,EAAcqE,EAAcC,GAYpE,OAXA,IAAAN,gBAAehE,IACf,IAAAgE,gBAAeK,IACf,IAAAL,gBAAeM,IAEf,aAAuB,KAAhBtE,EAAKqC,SACZ,aAAuB,KAAhBgC,EAAKhC,SAEI,IAAAkC,WACdxE,EAAOyE,OAAO,CAACzE,EAAOC,KAAK,KAAM,OAAQA,EAAMqE,GAAM,IAAAE,WAAUD,MAGlDH,OAAO,KAMXzE,EAAAA,eAAiB,SAAU+E,GACtC,OAAO,IAAAC,kBAAiBD,IASb/E,EAAAA,cAAgB,SAAUiF,EAAmBC,GAExD,YAFwD,IAAAA,IAAAA,GAAAA,IACxD,IAAAZ,gBAAeW,GACU,KAArBA,EAAUtC,QAEL,IAAAwC,iBAAgB9E,EAAOyE,OAAO,CAACzE,EAAOC,KAAK,CAAC,IAAK2E,OAGrDC,IAIE,IAAAC,iBAAgBF,IASZjF,EAAAA,aAAe,SAAUoF,EAAgBF,GAOpD,YAPoD,IAAAA,IAAAA,GAAAA,IACpD,IAAAZ,gBAAec,GACXF,GAA8B,KAAlBE,EAAOzC,SACrByC,EAAS/E,EAAOC,MAAK,IAAA+E,kBAAiBD,GAAQ,GAAOX,MAAM,MAE7D,aAAyB,KAAlBW,EAAOzC,SAEP,IAAA2C,QAAOF,GAAQX,OAAO,KAElBzE,EAAAA,gBAAkBA,EAAAA,aAMlBA,EAAAA,gBAAkB,SAAU+E,GAGvC,OAFA,IAAAT,gBAAeS,GAER1E,EAAOC,MAAK,IAAAiF,iBAAgBR,GAAY,IAAQN,MAAM,IAOlDzE,EAAAA,iBAAmB,SAAU+E,GACxC,OAAO,IAAAS,kBAAgB,IAAAC,iBAAgBV,KAM5B/E,EAAAA,aAAe,SAAUiF,GAKpC,OAJA,IAAAX,gBAAeW,GACU,KAArBA,EAAUtC,SACZsC,EAAY5E,EAAOC,MAAK,IAAA+E,kBAAiBJ,GAAW,GAAOR,MAAM,KAE5DQ,GAMIjF,EAAAA,YAAc,WACzB,IACM0F,GAAO,IAAAC,OADS,IAEtB,OAAO,IAAAC,aAAYF,IAMR1F,EAAAA,cAAgB,SAAUiD,GACrC,KACE,IAAAC,gBAAeD,GACf,MAAOE,GACP,OAAO,EAIT,OADiB,IAAA0C,iBACG5C,I,2MC/TtB,kBACA,WACA,WACA,WAQA,aAGE,WAAY6C,IACV,aAAsB,KAAfA,EAAInD,OAAe,0BAC1Bd,KAAKiE,IAAMA,EAoGf,OA9FSC,EAAAA,KAAP,WACE,OAAO,IAAIA,GAAQ,IAAAJ,OAAM,MAOpBI,EAAAA,WAAP,SAAkBC,GAEhB,OADA,cAAO,IAAA5B,gBAAe4B,GAAM,mBACrB,IAAID,GAAQ,IAAA9D,UAAS+D,KAOvBD,EAAAA,cAAP,SAAqBX,GAGnB,OAFA,aAAO/E,EAAO4F,SAASb,GAAS,+BAEzB,IAAIW,GADC,IAAAG,cAAad,KAQpBW,EAAAA,eAAP,SAAsBhB,GAGpB,OAFA,aAAO1E,EAAO4F,SAASlB,GAAa,gCAE7B,IAAIgB,GADC,IAAAI,kBAAiBpB,KASxBgB,EAAAA,SAAP,SAAgBzF,EAAeiB,GAE7B,OADA,aAAOI,EAAAA,GAAGyE,KAAK7E,IACR,IAAIwE,GAAQ,IAAAM,iBAAgB/F,EAAKwF,IAAKvE,EAAM+E,YAAYjG,MAS1D0F,EAAAA,UAAP,SAAiBzF,EAAeqE,EAAcC,GAG5C,OAFA,aAAOvE,EAAO4F,SAAStB,KACvB,aAAOtE,EAAO4F,SAASrB,IAChB,IAAImB,GAAQ,IAAAQ,kBAAiBjG,EAAKwF,IAAKnB,EAAMC,KAMtDmB,EAAAA,UAAAA,OAAAA,SAAOxC,GACL,OAAO1B,KAAKiE,IAAI/C,OAAOQ,EAAQuC,MAMjCC,EAAAA,UAAAA,OAAAA,WACE,OAAOlE,KAAKkB,OAAOgD,EAAQS,SAO7BT,EAAAA,UAAAA,4BAAAA,WACE,IAAMU,EAAY,IAAI9E,EAAAA,GAAGE,KAAKiE,KACxBY,EAAW,IAAI/E,EAAAA,GAAG,GAClBgF,EAAW,IAAIhF,EAAAA,GAAG,OAAQ,OAEhC,OAAO8E,EAAUG,IAAIF,IAAaD,EAAUI,IAAIF,IAMlDZ,EAAAA,UAAAA,SAAAA,WACE,MAAO,KAAOlE,KAAKiE,IAAIhC,SAAS,QAMlCiC,EAAAA,UAAAA,SAAAA,WACE,OAAO1F,EAAOC,KAAKuB,KAAKiE,MAE5B,EAzGA,GAAa9F,EAAAA,QAAAA,G,0+BCXb,eACA,UAQA,WAOaA,EAAAA,SAAW,SAAUiE,GAChC,IAAK6C,OAAOC,cAAc9C,IAAMA,EAAI,EAClC,MAAM,IAAIzB,MAAM,4CAAqCyB,IAEvD,MAAO,YAAKA,EAAEH,SAAS,MAQZ9D,EAAAA,YAAc,SAAUiE,GACnC,IAAM+C,GAAM,IAAAC,UAAShD,GACrB,OAAO5D,EAAOC,MAAK,IAAA4G,WAAUF,EAAIvC,MAAM,IAAK,QAOjCzE,EAAAA,MAAQ,SAAUY,GAC7B,OAAOP,EAAO8G,YAAYvG,GAAOwG,KAAK,IAWxC,IAAMC,EAAY,SAAUnH,EAAayC,EAAgB2E,GACvD,IAAMxB,GAAM,IAAAH,OAAMhD,GAClB,OAAI2E,EACEpH,EAAIyC,OAASA,GACfzC,EAAIqH,KAAKzB,GACFA,GAEF5F,EAAIuE,MAAM,EAAG9B,GAEhBzC,EAAIyC,OAASA,GACfzC,EAAIqH,KAAKzB,EAAKnD,EAASzC,EAAIyC,QACpBmD,GAEF5F,EAAIuE,OAAO9B,IAWT3C,EAAAA,cAAgB,SAAUE,EAAayC,GAElD,OADA,IAAA2B,gBAAepE,GACRmH,EAAUnH,EAAKyC,GAAQ,IAUnB3C,EAAAA,eAAiB,SAAUE,EAAayC,GAEnD,OADA,IAAA2B,gBAAepE,GACRmH,EAAUnH,EAAKyC,GAAQ,IAQhC,IAAM6E,EAAa,SAAUC,GAE3B,IADA,IAAIC,EAAQD,EAAE,GACPA,EAAE9E,OAAS,GAA0B,MAArB+E,EAAM5D,YAE3B4D,GADAD,EAAIA,EAAEhD,MAAM,IACF,GAEZ,OAAOgD,GAQIzH,EAAAA,YAAc,SAAUyH,GAEnC,OADA,IAAAnD,gBAAemD,GACRD,EAAWC,IAQPzH,EAAAA,WAAa,SAAUyH,GAElC,OADA,IAAAE,eAAcF,GACPD,EAAWC,IAQPzH,EAAAA,eAAiB,SAAUyH,GAGtC,OAFA,IAAAnE,mBAAkBmE,GAClBA,GAAI,IAAAjE,gBAAeiE,GACZD,EAAWC,IAqBPzH,EAAAA,SAAW,SAAU4H,GAChC,GAAU,OAANA,QAAoB1F,IAAN0F,EAChB,OAAOvH,EAAO8G,YAAY,GAG5B,GAAI9G,EAAO4F,SAAS2B,GAClB,OAAOvH,EAAOC,KAAKsH,GAGrB,GAAItF,MAAMC,QAAQqF,IAAMA,aAAaC,WACnC,OAAOxH,EAAOC,KAAKsH,GAGrB,GAAiB,kBAANA,EAAgB,CACzB,KAAK,IAAAE,aAAYF,GACf,MAAM,IAAIpF,MACR,qHAA8GoF,IAGlH,OAAOvH,EAAOC,MAAK,IAAA4G,YAAU,IAAA1D,gBAAeoE,IAAK,OAGnD,GAAiB,kBAANA,EACT,OAAO,IAAAG,aAAYH,GAGrB,GAAIjG,EAAAA,GAAGyE,KAAKwB,GAAI,CACd,GAAIA,EAAEI,QACJ,MAAM,IAAIxF,MAAM,uDAAgDoF,IAElE,OAAOA,EAAEtB,YAAYjG,GAGvB,GAAIuH,EAAElD,QAEJ,OAAOrE,EAAOC,KAAKsH,EAAElD,WAGvB,GAAIkD,EAAE3F,SACJ,OAAO5B,EAAOC,KAAKsH,EAAE3F,YAGvB,MAAM,IAAIO,MAAM,iBAQLxC,EAAAA,YAAc,SAAU8F,GACnC,OAAO,IAAInE,EAAAA,IAAG,IAAAM,UAAS6D,IAAMmC,YAOlBjI,EAAAA,YAAc,SAAU8F,GAEnC,MAAO,MADPA,GAAM,IAAA7D,UAAS6D,IACGhC,SAAS,QAOhB9D,EAAAA,WAAa,SAAUkI,GAClC,OAAO,IAAIvG,EAAAA,GAAGuG,GAAKC,SAAS,MAOjBnI,EAAAA,WAAa,SAAUkI,GAClC,OAAO7H,EAAOC,KAAK4H,EAAIE,OAAO,KAAK1D,YAMxB1E,EAAAA,aAAe,SAAUgG,GACpC,MAAmB,kBAARA,IAIJ,IAAAqC,eAAcrC,GAHZA,EAGyB,KAAOA,GAoB9BhG,EAAAA,OAAS,SAAUgH,GAG9B,IADAA,GAAM,IAAAxD,gBAAewD,IACbrE,OAAS,IAAM,EACrB,MAAM,IAAIH,MAAM,2DAIlB,OAFkBnC,EAAOC,KAAK0G,EAAIsB,QALd,iBAKmC,IAAK,OAE3CxE,SAAS,SAQf9D,EAAAA,SAAW,SAAUuI,GAChC,GAAIlI,EAAO4F,SAASsC,GAClB,MAAO,YAAKA,EAAGzE,SAAS,QACnB,GAAIyE,aAAcjG,MAAO,CAE9B,IADA,IAAMkG,EAAQ,GACLvE,EAAI,EAAGA,EAAIsE,EAAG5F,OAAQsB,IAC7BuE,EAAMC,MAAK,IAAAC,UAASH,EAAGtE,KAEzB,OAAOuE,IAiBExI,EAAAA,wBAA0B,SAAUoC,G,YAC/C,IAAqB,QAAAuG,OAAOC,QAAQxG,IAAOyG,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAAlC,mBAACC,EAAC,KAAElB,EAAC,KACd,QAAU1F,IAAN0F,GAAmBA,EAAEjF,OAAS,GAAc,IAATiF,EAAE,GACvC,MAAM,IAAIpF,MAAM,UAAGsG,EAAC,2CAAAhE,OAA0C8C,EAAE9D,SAAS,U,mGAW/E9D,EAAAA,YAAA,SAAgB+I,EAAYC,GAC1B,OAAK1G,MAAMC,QAAQyG,GAGZA,EAAIC,KAAI,SAACxB,GAAM,OAAAsB,EAAYtB,MAFzBpH,EAAOC,KAAK0I,IAWvBhJ,EAAAA,YAAA,SAAgBkJ,EAAYF,GAC1B,OAAK1G,MAAMC,QAAQyG,GAGZA,EAAIC,KAAI,SAACxB,GAAM,OAAAyB,EAAYzB,MAFzBI,WAAWvH,KAAQ,OAAH0I,QAAG,IAAHA,EAAAA,EAAO,M,sPC1UlC,eACA,WAKahJ,EAAAA,WAAa,IAAI2B,EAAAA,GAAG,mBAAoB,IAKxC3B,EAAAA,YAAc,IAAI2B,EAAAA,GAC7B,mEACA,IAMW3B,EAAAA,WAAa,IAAI2B,EAAAA,GAC5B,oEACA,IAMW3B,EAAAA,iBAAmB,mEAKnBA,EAAAA,eAAiBmJ,EAAAA,OAAO7I,KAAKN,EAAAA,iBAAkB,OAK/CA,EAAAA,sBACX,mEAKWA,EAAAA,oBAAsBmJ,EAAAA,OAAO7I,KAAKN,EAAAA,sBAAuB,OAKzDA,EAAAA,gBAAkB,mEAKlBA,EAAAA,cAAgBmJ,EAAAA,OAAO7I,KAAKN,EAAAA,gBAAiB,Q,mtBC/C1D,kBAMSA,EAAAA,GANFoJ,EAAAA,QACP,kBAUSpJ,EAAAA,IAAAA,G,gTCjBT,cACMqJ,EAAa5I,EAAQ,OAC3B,WACA,WACA,WAOaT,EAAAA,OAAS,SAAUyH,EAAW6B,GAEzC,YAFyC,IAAAA,IAAAA,EAAAA,MACzC,IAAAhF,gBAAemD,GACP6B,GACN,KAAK,IACH,OAAO,IAAAC,WAAU9B,GAEnB,KAAK,IACH,OAAO,eAAKA,GAEd,KAAK,IACH,OAAO,IAAA+B,WAAU/B,GAEnB,KAAK,IACH,OAAO,IAAAgC,WAAUhC,GAEnB,QACE,MAAM,IAAIjF,MAAM,kCAA2B8G,MASpCtJ,EAAAA,UAAY,SAAUyH,GACjC,OAAO,IAAAnC,QAAOmC,IAQHzH,EAAAA,iBAAmB,SAAUyH,EAAW6B,QAAA,IAAAA,IAAAA,EAAAA,MACnD,IAAApG,gBAAeuE,GACf,IAAM3B,EAAMzF,EAAOC,KAAKmH,EAAG,QAC3B,OAAO,IAAAnC,QAAOQ,EAAKwD,IAQRtJ,EAAAA,oBAAsB,SAAUyH,EAAW6B,GAEtD,YAFsD,IAAAA,IAAAA,EAAAA,MACtD,IAAAhG,mBAAkBmE,IACX,IAAAnC,SAAO,IAAArD,UAASwF,GAAI6B,IAQhBtJ,EAAAA,gBAAkB,SAAUyH,EAAa6B,GAEpD,YAFoD,IAAAA,IAAAA,EAAAA,MACpD,IAAA3B,eAAcF,IACP,IAAAnC,SAAO,IAAArD,UAASwF,GAAI6B,IAO7B,IAAMI,EAAU,SAAUjC,GAExB,OADAA,GAAI,IAAAxF,UAASwF,GACN4B,EAAW,UAAUjJ,OAAOqH,GAAGlH,UAO3BP,EAAAA,OAAS,SAAUyH,GAE9B,OADA,IAAAnD,gBAAemD,GACRiC,EAAQjC,IAOJzH,EAAAA,iBAAmB,SAAUyH,GAExC,OADA,IAAAvE,gBAAeuE,GACRiC,EAAQjC,IAOJzH,EAAAA,gBAAkB,SAAUyH,GAEvC,OADA,IAAAE,eAAcF,GACPiC,EAAQjC,IAQjB,IAAMkC,EAAa,SAAUlC,EAAQmC,GACnCnC,GAAI,IAAAxF,UAASwF,GACb,IAAMtH,EAAOkJ,EAAW,UAAUjJ,OAAOqH,GAAGlH,SAC5C,OAAe,IAAXqJ,GACK,IAAAC,eAAc1J,EAAM,IAEpBA,GASEH,EAAAA,UAAY,SAAUyH,EAAWmC,GAE5C,OADA,IAAAtF,gBAAemD,GACRkC,EAAWlC,EAAGmC,IAQV5J,EAAAA,oBAAsB,SAAUyH,EAAWmC,GAEtD,OADA,IAAA1G,gBAAeuE,GACRkC,EAAWlC,EAAGmC,IAQV5J,EAAAA,mBAAqB,SAAUyH,EAAamC,GAEvD,OADA,IAAAjC,eAAcF,GACPkC,EAAWlC,EAAGmC,IAOV5J,EAAAA,QAAU,SAAUyH,GAC/B,OAAO,IAAAnC,QAAO3D,EAAAA,IAAIkB,OAAO4E,M,uLC7J3B,cAMazH,EAAAA,kBAAoB,SAAU8J,GACzC,KAAK,IAAAhC,aAAYgC,GAAQ,CACvB,IAAM5J,EAAM,2EAAoE4J,GAChF,MAAM,IAAItH,MAAMtC,KAQPF,EAAAA,eAAiB,SAAU8J,GACtC,IAAKzJ,EAAO4F,SAAS6D,GAAQ,CAC3B,IAAM5J,EAAM,0DAAmD4J,GAC/D,MAAM,IAAItH,MAAMtC,KAQPF,EAAAA,cAAgB,SAAU8J,GACrC,IAAKxH,MAAMC,QAAQuH,GAAQ,CACzB,IAAM5J,EAAM,iEAA0D4J,GACtE,MAAM,IAAItH,MAAMtC,KAQPF,EAAAA,eAAiB,SAAU8J,GACtC,GAAqB,kBAAVA,EAAoB,CAC7B,IAAM5J,EAAM,2DAAoD4J,GAChE,MAAM,IAAItH,MAAMtC,M,+iBCvCpB6J,EAAAA,EAAAA,MAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GAKA,cACEpB,OAAAA,eAAAA,EAAAA,gBAAAA,CAAAqB,YAAAA,EAAAC,IAAAA,WAAA,SAAA5B,iBACAM,OAAAA,eAAAA,EAAAA,iBAAAA,CAAAqB,YAAAA,EAAAC,IAAAA,WAAA,SAAAzG,kBACAmF,OAAAA,eAAAA,EAAAA,YAAAA,CAAAqB,YAAAA,EAAAC,IAAAA,WAAA,SAAA/C,aACAyB,OAAAA,eAAAA,EAAAA,gBAAAA,CAAAqB,YAAAA,EAAAC,IAAAA,WAAA,SAAAC,iBACAvB,OAAAA,eAAAA,EAAAA,qBAAAA,CAAAqB,YAAAA,EAAAC,IAAAA,WAAA,SAAAE,sBACAxB,OAAAA,eAAAA,EAAAA,UAAAA,CAAAqB,YAAAA,EAAAC,IAAAA,WAAA,SAAAG,WACAzB,OAAAA,eAAAA,EAAAA,WAAAA,CAAAqB,YAAAA,EAAAC,IAAAA,WAAA,SAAAI,YACA1B,OAAAA,eAAAA,EAAAA,YAAAA,CAAAqB,YAAAA,EAAAC,IAAAA,WAAA,SAAAK,aACA3B,OAAAA,eAAAA,EAAAA,UAAAA,CAAAqB,YAAAA,EAAAC,IAAAA,WAAA,SAAAM,WACA5B,OAAAA,eAAAA,EAAAA,cAAAA,CAAAqB,YAAAA,EAAAC,IAAAA,WAAA,SAAAnC,gB,wDC5BF,SAAgBO,EAAcrC,GAC5B,GAAmB,kBAARA,EACT,MAAM,IAAIxD,MAAM,4EAAqEwD,IAGvF,MAAkB,MAAXA,EAAI,IAAyB,MAAXA,EAAI,G,mMAL/BhG,EAAAA,cAAAA,EAyBA,SAAgBkH,EAAUsD,GACxB,IAAI/C,EAAI+C,EAER,GAAiB,kBAAN/C,EACT,MAAM,IAAIjF,MAAM,mEAA4DiF,IAK9E,OAFIA,EAAE9E,OAAS,IAAG8E,EAAI,WAAIA,IAEnBA,EArBIzH,EAAAA,eAAiB,SAACgG,GAC7B,GAAmB,kBAARA,EACT,MAAM,IAAIxD,MAAM,wEAAiEwD,IAEnF,OAAOqC,EAAcrC,GAAOA,EAAIvB,MAAM,GAAKuB,GAQ7ChG,EAAAA,UAAAA,EAiBAA,EAAAA,cAAA,SAA8BgG,GAC5B,GAAmB,kBAARA,EACT,MAAM,IAAIxD,MAAM,+EAAwEwD,IAG1F,OAAO3F,EAAOoK,WAAWzE,EAAK,SAWhChG,EAAAA,mBAAA,SACE0K,EACAC,EACAC,GAEA,IAAgC,IAA5BtI,MAAMC,QAAQmI,GAChB,MAAM,IAAIlI,MACR,iGAA0FkI,EAAQ,MAGtG,IAA8B,IAA1BpI,MAAMC,QAAQoI,GAChB,MAAM,IAAInI,MACR,+FAAwFmI,EAAM,MAIlG,OAAOA,EAAOC,EAAO,OAAS,UAAS,SAACJ,GAAU,OAAAE,EAASG,QAAQL,IAAU,MAS/ExK,EAAAA,QAAA,SAAwBgH,GACtB,IAAIhB,EAAM,GACN/B,EAAI,EACF6G,EAAI9D,EAAIrE,OAId,IAF4B,OAAxBqE,EAAI+D,UAAU,EAAG,KAAa9G,EAAI,GAE/BA,EAAI6G,EAAG7G,GAAK,EAAG,CACpB,IAAM+G,EAAO9G,SAAS8C,EAAIiE,OAAOhH,EAAG,GAAI,IACxC+B,GAAOkF,OAAOC,aAAaH,GAG7B,OAAOhF,GAUThG,EAAAA,SAAA,SAAyBoL,GACvB,IAAMpF,EAAM3F,EAAOC,KAAK8K,EAAa,QAErC,MAAO,YAAKlE,EAAUlB,EAAIlC,SAAS,QAAQwE,QAAQ,WAAY,MAUjEtI,EAAAA,UAAA,SAA0BoL,GAExB,IADA,IAAIpE,EAAM,GACD/C,EAAI,EAAGA,EAAImH,EAAYzI,OAAQsB,IAAK,CAC3C,IACMoH,EADOD,EAAYE,WAAWrH,GACrBH,SAAS,IACxBkD,GAAOqE,EAAE1I,OAAS,EAAI,WAAI0I,GAAMA,EAGlC,MAAO,YAAKrE,IAcdhH,EAAAA,QAAA,SAAwBuL,EAAkCC,EAAaC,GACrE,IAAKnJ,MAAMC,QAAQgJ,GACjB,MAAM,IAAI/I,MAAM,6EAAsE+I,IAExF,GAAmB,kBAARC,EACT,MAAM,IAAIhJ,MACR,+EAAwE+I,IAM5E,IAFA,IAAMG,EAAS,GAENzH,EAAI,EAAGA,EAAIsH,EAAO5I,OAAQsB,IAAK,CACtC,IAAIuG,EAAQe,EAAOtH,GAAGuH,GACtB,GAAIC,IAAejB,EACjBA,EAAQ,QACH,GAAqB,kBAAVA,EAChB,MAAM,IAAIhI,MAAM,gEAAyDgI,IAE3EkB,EAAOjD,KAAK+B,GAGd,OAAOkB,GAUT1L,EAAAA,YAAA,SAA4BwK,EAAe7H,GACzC,QAAqB,kBAAV6H,IAAuBA,EAAMmB,MAAM,wBAE1ChJ,GAAU6H,EAAM7H,SAAW,EAAI,EAAIA,K,oNC7MzC,kBACA,UACA,WACA,WAaa3C,EAAAA,iBAAmB,SAAU4L,EAAWC,EAAaC,GAwEhE,GAvEAF,EAAK9I,IAAM,GACX8I,EAAKG,QAAU,GAGfH,EAAKI,OAAS,SAAUC,GACtB,QADsB,IAAAA,IAAAA,GAAAA,GAClBA,EAAO,CAET,IAAMC,EAAY,GAIlB,OAHAN,EAAKG,QAAQI,SAAQ,SAACC,GACpBF,EAAIE,GAAS,YAAKR,EAAKQ,GAAOtI,SAAS,WAElCoI,EAET,OAAO,IAAAxD,UAASkD,EAAK9I,MAGvB8I,EAAKS,UAAY,WACf,OAAO1K,EAAAA,IAAIkB,OAAO+I,EAAK9I,MAGzB+I,EAAOM,SAAQ,SAACC,EAAYnI,GAE1B,SAASqI,IACP,OAAOV,EAAK9I,IAAImB,GAElB,SAASsI,EAAO3E,GAGY,QAF1BA,GAAI,IAAA3F,UAAS2F,IAEP9D,SAAS,QAAoBsI,EAAMI,YACvC5E,EAAIvH,EAAO8G,YAAY,IAGrBiF,EAAMK,WAAaL,EAAMzJ,QAC3BiF,GAAI,IAAA8E,aAAY9E,IAChB,aACEwE,EAAMzJ,QAAUiF,EAAEjF,OAClB,oBAAayJ,EAAMO,KAAI,wBAAA7H,OAAuBsH,EAAMzJ,OAAM,YAEjDyJ,EAAMI,WAA0B,IAAb5E,EAAEjF,SAAiByJ,EAAMzJ,SACvD,aACEyJ,EAAMzJ,SAAWiF,EAAEjF,OACnB,oBAAayJ,EAAMO,KAAI,8BAAA7H,OAA6BsH,EAAMzJ,SAI9DiJ,EAAK9I,IAAImB,GAAK2D,EAxBhBgE,EAAKG,QAAQtD,KAAK2D,EAAMO,MA2BxBhE,OAAOiE,eAAehB,EAAMQ,EAAMO,KAAM,CACtC3C,YAAY,EACZ6C,cAAc,EACd5C,IAAKqC,EACLQ,IAAKP,IAGHH,EAAMW,UACRnB,EAAKQ,EAAMO,MAAQP,EAAMW,SAIvBX,EAAMY,OACRrE,OAAOiE,eAAehB,EAAMQ,EAAMY,MAAO,CACvChD,YAAY,EACZ6C,cAAc,EACdC,IAAKP,EACLtC,IAAKqC,OAMPR,EASF,GARoB,kBAATA,IACTA,EAAOzL,EAAOC,MAAK,IAAAkD,gBAAesI,GAAO,QAGvCzL,EAAO4F,SAAS6F,KAClBA,EAAOnK,EAAAA,IAAIU,OAAOyJ,IAGhBxJ,MAAMC,QAAQuJ,GAAO,CACvB,GAAIA,EAAKnJ,OAASiJ,EAAKG,QAAQpJ,OAC7B,MAAM,IAAIH,MAAM,kCAIlBsJ,EAAKK,SAAQ,SAACc,EAAGhJ,GACf2H,EAAKA,EAAKG,QAAQ9H,KAAM,IAAAhC,UAASgL,UAE9B,IAAoB,kBAATnB,EAOhB,MAAM,IAAItJ,MAAM,gBANhB,IAAM0K,EAAOvE,OAAOwE,KAAKrB,GACzBD,EAAOM,SAAQ,SAACC,IACoB,IAA9Bc,EAAKrC,QAAQuB,EAAMO,QAAcf,EAAKQ,EAAMO,MAAQb,EAAKM,EAAMO,QAChC,IAA/BO,EAAKrC,QAAQuB,EAAMY,SAAepB,EAAKQ,EAAMY,OAASlB,EAAKM,EAAMY,c,sNC9G7E,eACA,WACA,WACA,WACA,WACA,WAyCA,SAASI,EAAqBxF,EAAWyF,GACvC,IAAMC,GAAM,IAAA3J,QAAOiE,EAAGhE,EAAAA,WAAWC,IACjC,IAAKwJ,EACH,OAAOC,EAAIC,KAAK,IAElB,IAAMC,GAAY,IAAA7J,QAAO0J,EAASzJ,EAAAA,WAAWC,IAC7C,OAAOyJ,EAAIG,IAAID,EAAUE,KAAK,GAAGC,KAAK,KAGxC,SAASC,EAAmBC,GAC1B,IAAMC,EAAM,IAAInM,EAAAA,GAAGkM,GACnB,OAAOC,EAAIC,IAAI,IAAMD,EAAIC,IAAI,GAjC/B/N,EAAAA,OAAA,SAAuBgO,EAAiBjJ,EAAoBsI,GACpD,OAAiC,IAAAY,WAAUD,EAASjJ,GAAlDmJ,EAAS,YAASL,EAAQ,QAE5BM,EAAI9N,EAAOC,KAAK4N,EAAUzJ,MAAM,EAAG,KACnC2J,EAAI/N,EAAOC,KAAK4N,EAAUzJ,MAAM,GAAI,KAE1C,IAAK4I,GAA8B,kBAAZA,EAAsB,CAE3C,GAAIA,IAAYvG,OAAOC,cAAcsG,GACnC,MAAM,IAAI7K,MACR,+FAIJ,MAAO,CAAE2L,EAAC,EAAEC,EAAC,EAAExG,EADLyF,EAAUQ,GAAsB,EAAVR,EAAc,IAAMQ,EAAW,IAMjE,MAAO,CAAEM,EAAC,EAAEC,EAAC,EAAExG,GAFG,IAAAjE,QAAO0J,EAAmBzJ,EAAAA,WAAWC,IACnC6J,KAAK,GAAGC,KAAK,IAAIA,KAAKE,GAAUvH,YAAYjG,KAsBrDL,EAAAA,UAAY,SACvBgO,EACApG,EACAuG,EACAC,EACAf,GAEA,IAAMa,EAAY7N,EAAOyE,OAAO,EAAC,IAAA+E,eAAcsE,EAAG,KAAK,IAAAtE,eAAcuE,EAAG,KAAM,IACxEP,EAAWT,EAAqBxF,EAAGyF,GACzC,IAAKO,EAAmBC,GACtB,MAAM,IAAIrL,MAAM,6BAElB,IAAM6L,GAAe,IAAAC,cAAaJ,EAAWL,EAAS5F,WAAY+F,GAClE,OAAO3N,EAAOC,MAAK,IAAA+E,kBAAiBgJ,GAAc,GAAO5J,MAAM,KAOpDzE,EAAAA,SAAW,SAAU4H,EAAWuG,EAAWC,EAAWf,GAEjE,IAAKO,EADYR,EAAqBxF,EAAGyF,IAEvC,MAAM,IAAI7K,MAAM,6BAIlB,OAAO,IAAAoD,aAAYvF,EAAOyE,OAAO,EAAC,IAAA+E,eAAcsE,EAAG,KAAK,IAAAtE,eAAcuE,EAAG,KAAK,IAAAnM,UAAS2F,OAO5E5H,EAAAA,aAAe,SAAU4H,EAAWuG,EAAWC,EAAWf,GAErE,IAAKO,EADYR,EAAqBxF,EAAGyF,IAEvC,MAAM,IAAI7K,MAAM,6BAGlB,IAAM+L,GAAK,IAAA5K,QAAOiE,EAAGhE,EAAAA,WAAWkD,QAC5B0H,EAAKJ,EAMT,OALKG,EAAK,IAAMA,EAAK,IAAM,GAAa,IAAPA,GAAmB,KAAPA,MAC3CC,EAAKnO,EAAOC,KAAK8N,IACd,IAAM,MAGJ,IAAAxI,aAAYvF,EAAOyE,OAAO,EAAC,IAAA+E,eAAcsE,EAAG,KAAK,IAAAtE,eAAc2E,EAAI,QAO/DxO,EAAAA,WAAa,SAAUyO,GAClC,IAEIN,EACAC,EACAxG,EAJE9B,GAAc,IAAA7D,UAASwM,GAK7B,GAAI3I,EAAInD,QAAU,GAChBwL,EAAIrI,EAAIrB,MAAM,EAAG,IACjB2J,EAAItI,EAAIrB,MAAM,GAAI,IAClBmD,GAAI,IAAA8G,aAAY5I,EAAIrB,MAAM,SACrB,IAAmB,KAAfqB,EAAInD,OAOb,MAAM,IAAIH,MAAM,4BALhB2L,EAAIrI,EAAIrB,MAAM,EAAG,IACjB2J,EAAItI,EAAIrB,MAAM,GAAI,IAClBmD,GAAI,IAAA8G,aAAY5I,EAAIrB,MAAM,GAAI,MAAQ,EACtC2J,EAAE,IAAM,IAUV,OAJIxG,EAAI,KACNA,GAAK,IAGA,CACLA,EAAC,EACDuG,EAAC,EACDC,EAAC,IAQQpO,EAAAA,iBAAmB,SAC9B4H,EACAuG,EACAC,EACAO,EACAtB,QADA,IAAAsB,IAAAA,GAAAA,GAGA,IAAMC,EAAoB,IAAIjN,EAAAA,GAC5B,mEACA,IAEIkN,EAAc,IAAIlN,EAAAA,GAAG,mEAAoE,IAE/F,GAAiB,KAAbwM,EAAExL,QAA8B,KAAbyL,EAAEzL,OACvB,OAAO,EAGT,IAAKiL,EAAmBR,EAAqBxF,EAAGyF,IAC9C,OAAO,EAGT,IAAMyB,EAAM,IAAInN,EAAAA,GAAGwM,GACbY,EAAM,IAAIpN,EAAAA,GAAGyM,GAEnB,QAAIU,EAAI9L,UAAY8L,EAAIE,GAAGH,IAAgBE,EAAI/L,UAAY+L,EAAIC,GAAGH,OAI9DF,GAAmD,IAA/BI,EAAIE,IAAIL,KAarB5O,EAAAA,oBAAsB,SAAUkP,IAC3C,IAAA5K,gBAAe4K,GACf,IAAMxL,EAASrD,EAAOC,KAAK,wCAAmC4O,EAAQvM,QAAU,SAChF,OAAO,IAAA2C,QAAOjF,EAAOyE,OAAO,CAACpB,EAAQwL,O,gLCtMvC,IAiFYC,EAjFZ,WACA,UAEA,WA6DA,SAAgBvM,EAAmB4H,GAGjC,OAAO,IAAAkC,aAAYlC,EAAMlE,YAAYjG,IAZvCL,EAAAA,QAAA,SAAwBwK,GACtB,MAAO,YAAKA,EAAM1G,SAAS,MAQ7B9D,EAAAA,mBAAAA,EAUAA,EAAAA,QAAA,SAAwBwK,GACtB,OAAO5H,EAAmB4H,IAM5B,SAAY2E,GACVA,EAAAA,EAAAA,OAAAA,GAAAA,SACAA,EAAAA,EAAAA,GAAAA,GAAAA,KACAA,EAAAA,EAAAA,OAAAA,GAAAA,SACAA,EAAAA,EAAAA,kBAAAA,GAAAA,oBAJF,CAAYA,EAAAnP,EAAAA,aAAAA,EAAAA,WAAU,KA0BtBA,EAAAA,OAAA,SACE8J,EACAsF,GAEA,GAAc,OAAVtF,EACF,OAAO,KAET,QAAc5H,IAAV4H,EAAJ,CAIA,GAAqB,kBAAVA,KAAuB,IAAAhC,aAAYgC,GAC5C,MAAM,IAAItH,MAAM,6DAAsDsH,IACjE,GAAqB,kBAAVA,IAAuBhD,OAAOC,cAAc+C,GAC5D,MAAM,IAAItH,MACR,+FAIJ,IAAM6M,GAAS,IAAApN,UAAS6H,GAExB,GAAIsF,IAAeD,EAAW9O,OAC5B,OAAOgP,EACF,GAAID,IAAeD,EAAWtL,GACnC,OAAO,IAAIlC,EAAAA,GAAG0N,GACT,GAAID,IAAeD,EAAWrI,OAAQ,CAC3C,IAAMwI,EAAK,IAAI3N,EAAAA,GAAG0N,GACZE,EAAM,IAAI5N,EAAAA,GAAGmF,OAAO0I,iBAAiB1L,YAC3C,GAAIwL,EAAGN,GAAGO,GACR,MAAM,IAAI/M,MACR,gGAGJ,OAAO8M,EAAGrH,WAGV,MAAO,YAAKoH,EAAOvL,SAAS,W,uBC/IhC,SAAW2L,EAAQzP,GACjB,aAGA,SAAS0P,EAAQC,EAAKzP,GACpB,IAAKyP,EAAK,MAAM,IAAInN,MAAMtC,GAAO,oBAKnC,SAAS0P,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,aACfA,EAASC,UAAYH,EAAUG,UAC/BJ,EAAKI,UAAY,IAAID,EACrBH,EAAKI,UAAUC,YAAcL,EAK/B,SAAShM,EAAIsM,EAAQC,EAAMC,GACzB,GAAIxM,EAAGuC,KAAK+J,GACV,OAAOA,EAGTtO,KAAKyO,SAAW,EAChBzO,KAAK0O,MAAQ,KACb1O,KAAKc,OAAS,EAGdd,KAAK2O,IAAM,KAEI,OAAXL,IACW,OAATC,GAA0B,OAATA,IACnBC,EAASD,EACTA,EAAO,IAGTvO,KAAK4O,MAAMN,GAAU,EAAGC,GAAQ,GAAIC,GAAU,OAYlD,IAAIhQ,EATkB,kBAAXoP,EACTA,EAAOzP,QAAU6D,EAEjB7D,EAAQ6D,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAG6M,SAAW,GAGd,IAEIrQ,EADoB,qBAAXsQ,QAAmD,qBAAlBA,OAAOtQ,OACxCsQ,OAAOtQ,OAEPI,EAAAA,OAAAA,OAEX,MAAO0C,IAgIT,SAASyN,EAAeC,EAAQC,GAC9B,IAAIC,EAAIF,EAAOvF,WAAWwF,GAE1B,OAAIC,GAAK,IAAMA,GAAK,GACXA,EAAI,GAEFA,GAAK,IAAMA,GAAK,GAClBA,EAAI,GAEFA,GAAK,IAAMA,GAAK,IAClBA,EAAI,QAEXrB,GAAO,EAAO,wBAA0BmB,GAI5C,SAASG,EAAcH,EAAQI,EAAYH,GACzC,IAAI3C,EAAIyC,EAAcC,EAAQC,GAI9B,OAHIA,EAAQ,GAAKG,IACf9C,GAAKyC,EAAcC,EAAQC,EAAQ,IAAM,GAEpC3C,EA8CT,SAAS+C,EAAWlL,EAAKmL,EAAOC,EAAKC,GAInC,IAHA,IAAIlD,EAAI,EACJmD,EAAI,EACJC,EAAMC,KAAKC,IAAIzL,EAAIrD,OAAQyO,GACtBnN,EAAIkN,EAAOlN,EAAIsN,EAAKtN,IAAK,CAChC,IAAI8M,EAAI/K,EAAIsF,WAAWrH,GAAK,GAE5BkK,GAAKkD,EAIHC,EADEP,GAAK,GACHA,EAAI,GAAK,GAGJA,GAAK,GACVA,EAAI,GAAK,GAITA,EAENrB,EAAOqB,GAAK,GAAKO,EAAID,EAAK,qBAC1BlD,GAAKmD,EAEP,OAAOnD,EA4DT,SAASuD,EAAMC,EAAMC,GACnBD,EAAKpB,MAAQqB,EAAIrB,MACjBoB,EAAKhP,OAASiP,EAAIjP,OAClBgP,EAAKrB,SAAWsB,EAAItB,SACpBqB,EAAKnB,IAAMoB,EAAIpB,IAsCjB,GA9TA3M,EAAGuC,KAAO,SAAe8B,GACvB,OAAIA,aAAerE,GAIJ,OAARqE,GAA+B,kBAARA,GAC5BA,EAAIgI,YAAYQ,WAAa7M,EAAG6M,UAAYpO,MAAMC,QAAQ2F,EAAIqI,QAGlE1M,EAAG0L,IAAM,SAAcsC,EAAMvK,GAC3B,OAAIuK,EAAK5C,IAAI3H,GAAS,EAAUuK,EACzBvK,GAGTzD,EAAG4N,IAAM,SAAcI,EAAMvK,GAC3B,OAAIuK,EAAK5C,IAAI3H,GAAS,EAAUuK,EACzBvK,GAGTzD,EAAGoM,UAAUQ,MAAQ,SAAeN,EAAQC,EAAMC,GAChD,GAAsB,kBAAXF,EACT,OAAOtO,KAAKiQ,YAAY3B,EAAQC,EAAMC,GAGxC,GAAsB,kBAAXF,EACT,OAAOtO,KAAKkQ,WAAW5B,EAAQC,EAAMC,GAG1B,QAATD,IACFA,EAAO,IAETV,EAAOU,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAGnD,IAAIe,EAAQ,EACM,OAFlBhB,EAASA,EAAOrM,WAAWwE,QAAQ,OAAQ,KAEhC,KACT6I,IACAtP,KAAKyO,SAAW,GAGda,EAAQhB,EAAOxN,SACJ,KAATyN,EACFvO,KAAKmQ,UAAU7B,EAAQgB,EAAOd,IAE9BxO,KAAKoQ,WAAW9B,EAAQC,EAAMe,GACf,OAAXd,GACFxO,KAAKkQ,WAAWlQ,KAAK6C,UAAW0L,EAAMC,MAM9CxM,EAAGoM,UAAU6B,YAAc,SAAsB3B,EAAQC,EAAMC,GACzDF,EAAS,IACXtO,KAAKyO,SAAW,EAChBH,GAAUA,GAERA,EAAS,UACXtO,KAAK0O,MAAQ,CAAU,SAATJ,GACdtO,KAAKc,OAAS,GACLwN,EAAS,kBAClBtO,KAAK0O,MAAQ,CACF,SAATJ,EACCA,EAAS,SAAa,UAEzBtO,KAAKc,OAAS,IAEd+M,EAAOS,EAAS,kBAChBtO,KAAK0O,MAAQ,CACF,SAATJ,EACCA,EAAS,SAAa,SACvB,GAEFtO,KAAKc,OAAS,GAGD,OAAX0N,GAGJxO,KAAKkQ,WAAWlQ,KAAK6C,UAAW0L,EAAMC,IAGxCxM,EAAGoM,UAAU8B,WAAa,SAAqB5B,EAAQC,EAAMC,GAG3D,GADAX,EAAgC,kBAAlBS,EAAOxN,QACjBwN,EAAOxN,QAAU,EAGnB,OAFAd,KAAK0O,MAAQ,CAAC,GACd1O,KAAKc,OAAS,EACPd,KAGTA,KAAKc,OAAS6O,KAAKU,KAAK/B,EAAOxN,OAAS,GACxCd,KAAK0O,MAAQ,IAAIjO,MAAMT,KAAKc,QAC5B,IAAK,IAAIsB,EAAI,EAAGA,EAAIpC,KAAKc,OAAQsB,IAC/BpC,KAAK0O,MAAMtM,GAAK,EAGlB,IAAIkO,EAAGC,EACHC,EAAM,EACV,GAAe,OAAXhC,EACF,IAAKpM,EAAIkM,EAAOxN,OAAS,EAAGwP,EAAI,EAAGlO,GAAK,EAAGA,GAAK,EAC9CmO,EAAIjC,EAAOlM,GAAMkM,EAAOlM,EAAI,IAAM,EAAMkM,EAAOlM,EAAI,IAAM,GACzDpC,KAAK0O,MAAM4B,IAAOC,GAAKC,EAAO,SAC9BxQ,KAAK0O,MAAM4B,EAAI,GAAMC,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPF,UAGC,GAAe,OAAX9B,EACT,IAAKpM,EAAI,EAAGkO,EAAI,EAAGlO,EAAIkM,EAAOxN,OAAQsB,GAAK,EACzCmO,EAAIjC,EAAOlM,GAAMkM,EAAOlM,EAAI,IAAM,EAAMkM,EAAOlM,EAAI,IAAM,GACzDpC,KAAK0O,MAAM4B,IAAOC,GAAKC,EAAO,SAC9BxQ,KAAK0O,MAAM4B,EAAI,GAAMC,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPF,KAIN,OAAOtQ,KAAKyQ,UA2BdzO,EAAGoM,UAAU+B,UAAY,SAAoB7B,EAAQgB,EAAOd,GAE1DxO,KAAKc,OAAS6O,KAAKU,MAAM/B,EAAOxN,OAASwO,GAAS,GAClDtP,KAAK0O,MAAQ,IAAIjO,MAAMT,KAAKc,QAC5B,IAAK,IAAIsB,EAAI,EAAGA,EAAIpC,KAAKc,OAAQsB,IAC/BpC,KAAK0O,MAAMtM,GAAK,EAIlB,IAGImO,EAHAC,EAAM,EACNF,EAAI,EAGR,GAAe,OAAX9B,EACF,IAAKpM,EAAIkM,EAAOxN,OAAS,EAAGsB,GAAKkN,EAAOlN,GAAK,EAC3CmO,EAAIpB,EAAab,EAAQgB,EAAOlN,IAAMoO,EACtCxQ,KAAK0O,MAAM4B,IAAU,SAAJC,EACbC,GAAO,IACTA,GAAO,GACPF,GAAK,EACLtQ,KAAK0O,MAAM4B,IAAMC,IAAM,IAEvBC,GAAO,OAKX,IAAKpO,GADakM,EAAOxN,OAASwO,GACX,IAAM,EAAIA,EAAQ,EAAIA,EAAOlN,EAAIkM,EAAOxN,OAAQsB,GAAK,EAC1EmO,EAAIpB,EAAab,EAAQgB,EAAOlN,IAAMoO,EACtCxQ,KAAK0O,MAAM4B,IAAU,SAAJC,EACbC,GAAO,IACTA,GAAO,GACPF,GAAK,EACLtQ,KAAK0O,MAAM4B,IAAMC,IAAM,IAEvBC,GAAO,EAKbxQ,KAAKyQ,UA8BPzO,EAAGoM,UAAUgC,WAAa,SAAqB9B,EAAQC,EAAMe,GAE3DtP,KAAK0O,MAAQ,CAAC,GACd1O,KAAKc,OAAS,EAGd,IAAK,IAAI4P,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAWpC,EAClEmC,IAEFA,IACAC,EAAWA,EAAUpC,EAAQ,EAO7B,IALA,IAAIqC,EAAQtC,EAAOxN,OAASwO,EACxBuB,EAAMD,EAAQF,EACdnB,EAAMI,KAAKC,IAAIgB,EAAOA,EAAQC,GAAOvB,EAErCwB,EAAO,EACF1O,EAAIkN,EAAOlN,EAAImN,EAAKnN,GAAKsO,EAChCI,EAAOzB,EAAUf,EAAQlM,EAAGA,EAAIsO,EAASnC,GAEzCvO,KAAK+Q,MAAMJ,GACP3Q,KAAK0O,MAAM,GAAKoC,EAAO,SACzB9Q,KAAK0O,MAAM,IAAMoC,EAEjB9Q,KAAKgR,OAAOF,GAIhB,GAAY,IAARD,EAAW,CACb,IAAII,EAAM,EAGV,IAFAH,EAAOzB,EAAUf,EAAQlM,EAAGkM,EAAOxN,OAAQyN,GAEtCnM,EAAI,EAAGA,EAAIyO,EAAKzO,IACnB6O,GAAO1C,EAGTvO,KAAK+Q,MAAME,GACPjR,KAAK0O,MAAM,GAAKoC,EAAO,SACzB9Q,KAAK0O,MAAM,IAAMoC,EAEjB9Q,KAAKgR,OAAOF,GAIhB9Q,KAAKyQ,UAGPzO,EAAGoM,UAAU1I,KAAO,SAAeoK,GACjCA,EAAKpB,MAAQ,IAAIjO,MAAMT,KAAKc,QAC5B,IAAK,IAAIsB,EAAI,EAAGA,EAAIpC,KAAKc,OAAQsB,IAC/B0N,EAAKpB,MAAMtM,GAAKpC,KAAK0O,MAAMtM,GAE7B0N,EAAKhP,OAASd,KAAKc,OACnBgP,EAAKrB,SAAWzO,KAAKyO,SACrBqB,EAAKnB,IAAM3O,KAAK2O,KAUlB3M,EAAGoM,UAAU8C,MAAQ,SAAgBpB,GACnCD,EAAKC,EAAM9P,OAGbgC,EAAGoM,UAAU+C,MAAQ,WACnB,IAAI7E,EAAI,IAAItK,EAAG,MAEf,OADAhC,KAAK0F,KAAK4G,GACHA,GAGTtK,EAAGoM,UAAUgD,QAAU,SAAkBC,GACvC,KAAOrR,KAAKc,OAASuQ,GACnBrR,KAAK0O,MAAM1O,KAAKc,UAAY,EAE9B,OAAOd,MAITgC,EAAGoM,UAAUqC,OAAS,WACpB,KAAOzQ,KAAKc,OAAS,GAAqC,IAAhCd,KAAK0O,MAAM1O,KAAKc,OAAS,IACjDd,KAAKc,SAEP,OAAOd,KAAKsR,aAGdtP,EAAGoM,UAAUkD,UAAY,WAKvB,OAHoB,IAAhBtR,KAAKc,QAAkC,IAAlBd,KAAK0O,MAAM,KAClC1O,KAAKyO,SAAW,GAEXzO,MAKa,qBAAXuR,QAAgD,oBAAfA,OAAOC,IACjD,IACExP,EAAGoM,UAAUmD,OAAOC,IAAI,+BAAiCC,EACzD,MAAOnQ,GACPU,EAAGoM,UAAUqD,QAAUA,OAGzBzP,EAAGoM,UAAUqD,QAAUA,EAGzB,SAASA,IACP,OAAQzR,KAAK2O,IAAM,UAAY,SAAW3O,KAAKiC,SAAS,IAAM,IAiChE,IAAI6B,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGE4N,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAG9D3P,EAAGoM,UAAUnM,SAAW,SAAmBsM,EAAMqD,GAI/C,IAAIC,EACJ,GAHAD,EAAoB,EAAVA,GAAe,EAGZ,MAJbrD,EAAOA,GAAQ,KAIa,QAATA,EAAgB,CACjCsD,EAAM,GAGN,IAFA,IAAIrB,EAAM,EACNsB,EAAQ,EACH1P,EAAI,EAAGA,EAAIpC,KAAKc,OAAQsB,IAAK,CACpC,IAAImO,EAAIvQ,KAAK0O,MAAMtM,GACf0O,GAA+B,UAArBP,GAAKC,EAAOsB,IAAmB7P,SAAS,IAGpD4P,EADY,KADdC,EAASvB,IAAO,GAAKC,EAAQ,WACVpO,IAAMpC,KAAKc,OAAS,EAC/BgD,EAAM,EAAIgN,EAAKhQ,QAAUgQ,EAAOe,EAEhCf,EAAOe,GAEfrB,GAAO,IACI,KACTA,GAAO,GACPpO,KAMJ,IAHc,IAAV0P,IACFD,EAAMC,EAAM7P,SAAS,IAAM4P,GAEtBA,EAAI/Q,OAAS8Q,IAAY,GAC9BC,EAAM,IAAMA,EAKd,OAHsB,IAAlB7R,KAAKyO,WACPoD,EAAM,IAAMA,GAEPA,EAGT,GAAItD,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAIwD,EAAYL,EAAWnD,GAEvByD,EAAYL,EAAWpD,GAC3BsD,EAAM,GACN,IAAI3C,EAAIlP,KAAKmR,QAEb,IADAjC,EAAET,SAAW,GACLS,EAAE/N,UAAU,CAClB,IAAImL,EAAI4C,EAAE+C,MAAMD,GAAW/P,SAASsM,GAMlCsD,GALF3C,EAAIA,EAAEgD,MAAMF,IAEL7Q,SAGCmL,EAAIuF,EAFJ/N,EAAMiO,EAAYzF,EAAExL,QAAUwL,EAAIuF,EAQ5C,IAHI7R,KAAKmB,WACP0Q,EAAM,IAAMA,GAEPA,EAAI/Q,OAAS8Q,IAAY,GAC9BC,EAAM,IAAMA,EAKd,OAHsB,IAAlB7R,KAAKyO,WACPoD,EAAM,IAAMA,GAEPA,EAGThE,GAAO,EAAO,oCAGhB7L,EAAGoM,UAAUhI,SAAW,WACtB,IAAIjE,EAAMnC,KAAK0O,MAAM,GASrB,OARoB,IAAhB1O,KAAKc,OACPqB,GAAuB,SAAhBnC,KAAK0O,MAAM,GACO,IAAhB1O,KAAKc,QAAkC,IAAlBd,KAAK0O,MAAM,GAEzCvM,GAAO,iBAAoC,SAAhBnC,KAAK0O,MAAM,GAC7B1O,KAAKc,OAAS,GACvB+M,GAAO,EAAO,8CAEU,IAAlB7N,KAAKyO,UAAmBtM,EAAMA,GAGxCH,EAAGoM,UAAUjE,OAAS,WACpB,OAAOnK,KAAKiC,SAAS,GAAI,IAGvBzD,IACFwD,EAAGoM,UAAUhO,SAAW,SAAmBoO,EAAQ1N,GACjD,OAAOd,KAAKyE,YAAYjG,EAAQgQ,EAAQ1N,KAI5CkB,EAAGoM,UAAUvL,QAAU,SAAkB2L,EAAQ1N,GAC/C,OAAOd,KAAKyE,YAAYhE,MAAO+N,EAAQ1N,IA4gBzC,SAASqR,EAAYpI,EAAM1D,EAAKwL,GAC9BA,EAAIpD,SAAWpI,EAAIoI,SAAW1E,EAAK0E,SACnC,IAAIiB,EAAO3F,EAAKjJ,OAASuF,EAAIvF,OAAU,EACvC+Q,EAAI/Q,OAAS4O,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAI9J,EAAoB,EAAhBmE,EAAK2E,MAAM,GACfe,EAAmB,EAAfpJ,EAAIqI,MAAM,GACdpC,EAAI1G,EAAI6J,EAER2C,EAAS,SAAJ9F,EACLwF,EAASxF,EAAI,SAAa,EAC9BuF,EAAInD,MAAM,GAAK0D,EAEf,IAAK,IAAInL,EAAI,EAAGA,EAAIyI,EAAKzI,IAAK,CAM5B,IAHA,IAAIoL,EAASP,IAAU,GACnBQ,EAAgB,SAARR,EACRS,EAAO5C,KAAKC,IAAI3I,EAAGZ,EAAIvF,OAAS,GAC3BwP,EAAIX,KAAKjC,IAAI,EAAGzG,EAAI8C,EAAKjJ,OAAS,GAAIwP,GAAKiC,EAAMjC,IAAK,CAC7D,IAAIlO,EAAK6E,EAAIqJ,EAAK,EAIlB+B,IADA/F,GAFA1G,EAAoB,EAAhBmE,EAAK2E,MAAMtM,KACfqN,EAAmB,EAAfpJ,EAAIqI,MAAM4B,IACFgC,GACG,SAAa,EAC5BA,EAAY,SAAJhG,EAEVuF,EAAInD,MAAMzH,GAAa,EAARqL,EACfR,EAAiB,EAATO,EAQV,OANc,IAAVP,EACFD,EAAInD,MAAMzH,GAAa,EAAR6K,EAEfD,EAAI/Q,SAGC+Q,EAAIpB,SAxiBbzO,EAAGoM,UAAU3J,YAAc,SAAsB+N,EAAWhE,EAAQ1N,GAClEd,KAAKyQ,SAEL,IAAI7H,EAAa5I,KAAK4I,aAClB6J,EAAY3R,GAAU6O,KAAKjC,IAAI,EAAG9E,GACtCiF,EAAOjF,GAAc6J,EAAW,yCAChC5E,EAAO4E,EAAY,EAAG,+BAEtB,IAAIC,EAfS,SAAmBF,EAAWnB,GAC3C,OAAImB,EAAUlN,YACLkN,EAAUlN,YAAY+L,GAExB,IAAImB,EAAUnB,GAWXsB,CAASH,EAAWC,GAG9B,OADAzS,KAAK,gBADoB,OAAXwO,EAAkB,KAAO,OACRkE,EAAK9J,GAC7B8J,GAGT1Q,EAAGoM,UAAUwE,eAAiB,SAAyBF,EAAK9J,GAI1D,IAHA,IAAIiK,EAAW,EACXf,EAAQ,EAEH1P,EAAI,EAAG0Q,EAAQ,EAAG1Q,EAAIpC,KAAKc,OAAQsB,IAAK,CAC/C,IAAI0O,EAAQ9Q,KAAK0O,MAAMtM,IAAM0Q,EAAShB,EAEtCY,EAAIG,KAAqB,IAAP/B,EACd+B,EAAWH,EAAI5R,SACjB4R,EAAIG,KAAe/B,GAAQ,EAAK,KAE9B+B,EAAWH,EAAI5R,SACjB4R,EAAIG,KAAe/B,GAAQ,GAAM,KAGrB,IAAVgC,GACED,EAAWH,EAAI5R,SACjB4R,EAAIG,KAAe/B,GAAQ,GAAM,KAEnCgB,EAAQ,EACRgB,EAAQ,IAERhB,EAAQhB,IAAS,GACjBgC,GAAS,GAIb,GAAID,EAAWH,EAAI5R,OAGjB,IAFA4R,EAAIG,KAAcf,EAEXe,EAAWH,EAAI5R,QACpB4R,EAAIG,KAAc,GAKxB7Q,EAAGoM,UAAU2E,eAAiB,SAAyBL,EAAK9J,GAI1D,IAHA,IAAIiK,EAAWH,EAAI5R,OAAS,EACxBgR,EAAQ,EAEH1P,EAAI,EAAG0Q,EAAQ,EAAG1Q,EAAIpC,KAAKc,OAAQsB,IAAK,CAC/C,IAAI0O,EAAQ9Q,KAAK0O,MAAMtM,IAAM0Q,EAAShB,EAEtCY,EAAIG,KAAqB,IAAP/B,EACd+B,GAAY,IACdH,EAAIG,KAAe/B,GAAQ,EAAK,KAE9B+B,GAAY,IACdH,EAAIG,KAAe/B,GAAQ,GAAM,KAGrB,IAAVgC,GACED,GAAY,IACdH,EAAIG,KAAe/B,GAAQ,GAAM,KAEnCgB,EAAQ,EACRgB,EAAQ,IAERhB,EAAQhB,IAAS,GACjBgC,GAAS,GAIb,GAAID,GAAY,EAGd,IAFAH,EAAIG,KAAcf,EAEXe,GAAY,GACjBH,EAAIG,KAAc,GAKpBlD,KAAKqD,MACPhR,EAAGoM,UAAU6E,WAAa,SAAqB1C,GAC7C,OAAO,GAAKZ,KAAKqD,MAAMzC,IAGzBvO,EAAGoM,UAAU6E,WAAa,SAAqB1C,GAC7C,IAAI2C,EAAI3C,EACJjE,EAAI,EAiBR,OAhBI4G,GAAK,OACP5G,GAAK,GACL4G,KAAO,IAELA,GAAK,KACP5G,GAAK,EACL4G,KAAO,GAELA,GAAK,IACP5G,GAAK,EACL4G,KAAO,GAELA,GAAK,IACP5G,GAAK,EACL4G,KAAO,GAEF5G,EAAI4G,GAIflR,EAAGoM,UAAU+E,UAAY,SAAoB5C,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAI2C,EAAI3C,EACJjE,EAAI,EAoBR,OAnBqB,KAAZ,KAAJ4G,KACH5G,GAAK,GACL4G,KAAO,IAEU,KAAV,IAAJA,KACH5G,GAAK,EACL4G,KAAO,GAES,KAAT,GAAJA,KACH5G,GAAK,EACL4G,KAAO,GAES,KAAT,EAAJA,KACH5G,GAAK,EACL4G,KAAO,GAES,KAAT,EAAJA,IACH5G,IAEKA,GAITtK,EAAGoM,UAAUgF,UAAY,WACvB,IAAI7C,EAAIvQ,KAAK0O,MAAM1O,KAAKc,OAAS,GAC7BuS,EAAKrT,KAAKiT,WAAW1C,GACzB,OAA2B,IAAnBvQ,KAAKc,OAAS,GAAUuS,GAiBlCrR,EAAGoM,UAAUkF,SAAW,WACtB,GAAItT,KAAKmB,SAAU,OAAO,EAG1B,IADA,IAAImL,EAAI,EACClK,EAAI,EAAGA,EAAIpC,KAAKc,OAAQsB,IAAK,CACpC,IAAIqN,EAAIzP,KAAKmT,UAAUnT,KAAK0O,MAAMtM,IAElC,GADAkK,GAAKmD,EACK,KAANA,EAAU,MAEhB,OAAOnD,GAGTtK,EAAGoM,UAAUxF,WAAa,WACxB,OAAO+G,KAAKU,KAAKrQ,KAAKoT,YAAc,IAGtCpR,EAAGoM,UAAU7H,OAAS,SAAiBgN,GACrC,OAAsB,IAAlBvT,KAAKyO,SACAzO,KAAKwT,MAAMC,MAAMF,GAAOG,MAAM,GAEhC1T,KAAKmR,SAGdnP,EAAGoM,UAAU9H,SAAW,SAAmBiN,GACzC,OAAIvT,KAAK2T,MAAMJ,EAAQ,GACdvT,KAAK4T,KAAKL,GAAOG,MAAM,GAAGG,OAE5B7T,KAAKmR,SAGdnP,EAAGoM,UAAUjI,MAAQ,WACnB,OAAyB,IAAlBnG,KAAKyO,UAIdzM,EAAGoM,UAAU0F,IAAM,WACjB,OAAO9T,KAAKmR,QAAQ0C,QAGtB7R,EAAGoM,UAAUyF,KAAO,WAKlB,OAJK7T,KAAKmB,WACRnB,KAAKyO,UAAY,GAGZzO,MAITgC,EAAGoM,UAAU2F,KAAO,SAAe1N,GACjC,KAAOrG,KAAKc,OAASuF,EAAIvF,QACvBd,KAAK0O,MAAM1O,KAAKc,UAAY,EAG9B,IAAK,IAAIsB,EAAI,EAAGA,EAAIiE,EAAIvF,OAAQsB,IAC9BpC,KAAK0O,MAAMtM,GAAKpC,KAAK0O,MAAMtM,GAAKiE,EAAIqI,MAAMtM,GAG5C,OAAOpC,KAAKyQ,UAGdzO,EAAGoM,UAAU4F,IAAM,SAAc3N,GAE/B,OADAwH,EAA0C,KAAlC7N,KAAKyO,SAAWpI,EAAIoI,WACrBzO,KAAK+T,KAAK1N,IAInBrE,EAAGoM,UAAU6F,GAAK,SAAa5N,GAC7B,OAAIrG,KAAKc,OAASuF,EAAIvF,OAAed,KAAKmR,QAAQ6C,IAAI3N,GAC/CA,EAAI8K,QAAQ6C,IAAIhU,OAGzBgC,EAAGoM,UAAU8F,IAAM,SAAc7N,GAC/B,OAAIrG,KAAKc,OAASuF,EAAIvF,OAAed,KAAKmR,QAAQ4C,KAAK1N,GAChDA,EAAI8K,QAAQ4C,KAAK/T,OAI1BgC,EAAGoM,UAAU+F,MAAQ,SAAgB9N,GAEnC,IAAIoJ,EAEFA,EADEzP,KAAKc,OAASuF,EAAIvF,OAChBuF,EAEArG,KAGN,IAAK,IAAIoC,EAAI,EAAGA,EAAIqN,EAAE3O,OAAQsB,IAC5BpC,KAAK0O,MAAMtM,GAAKpC,KAAK0O,MAAMtM,GAAKiE,EAAIqI,MAAMtM,GAK5C,OAFApC,KAAKc,OAAS2O,EAAE3O,OAETd,KAAKyQ,UAGdzO,EAAGoM,UAAUgG,KAAO,SAAe/N,GAEjC,OADAwH,EAA0C,KAAlC7N,KAAKyO,SAAWpI,EAAIoI,WACrBzO,KAAKmU,MAAM9N,IAIpBrE,EAAGoM,UAAUiG,IAAM,SAAchO,GAC/B,OAAIrG,KAAKc,OAASuF,EAAIvF,OAAed,KAAKmR,QAAQiD,KAAK/N,GAChDA,EAAI8K,QAAQiD,KAAKpU,OAG1BgC,EAAGoM,UAAUkG,KAAO,SAAejO,GACjC,OAAIrG,KAAKc,OAASuF,EAAIvF,OAAed,KAAKmR,QAAQgD,MAAM9N,GACjDA,EAAI8K,QAAQgD,MAAMnU,OAI3BgC,EAAGoM,UAAUmG,MAAQ,SAAgBlO,GAEnC,IAAIT,EACA6J,EACAzP,KAAKc,OAASuF,EAAIvF,QACpB8E,EAAI5F,KACJyP,EAAIpJ,IAEJT,EAAIS,EACJoJ,EAAIzP,MAGN,IAAK,IAAIoC,EAAI,EAAGA,EAAIqN,EAAE3O,OAAQsB,IAC5BpC,KAAK0O,MAAMtM,GAAKwD,EAAE8I,MAAMtM,GAAKqN,EAAEf,MAAMtM,GAGvC,GAAIpC,OAAS4F,EACX,KAAOxD,EAAIwD,EAAE9E,OAAQsB,IACnBpC,KAAK0O,MAAMtM,GAAKwD,EAAE8I,MAAMtM,GAM5B,OAFApC,KAAKc,OAAS8E,EAAE9E,OAETd,KAAKyQ,UAGdzO,EAAGoM,UAAUoG,KAAO,SAAenO,GAEjC,OADAwH,EAA0C,KAAlC7N,KAAKyO,SAAWpI,EAAIoI,WACrBzO,KAAKuU,MAAMlO,IAIpBrE,EAAGoM,UAAUqG,IAAM,SAAcpO,GAC/B,OAAIrG,KAAKc,OAASuF,EAAIvF,OAAed,KAAKmR,QAAQqD,KAAKnO,GAChDA,EAAI8K,QAAQqD,KAAKxU,OAG1BgC,EAAGoM,UAAUsG,KAAO,SAAerO,GACjC,OAAIrG,KAAKc,OAASuF,EAAIvF,OAAed,KAAKmR,QAAQoD,MAAMlO,GACjDA,EAAI8K,QAAQoD,MAAMvU,OAI3BgC,EAAGoM,UAAUqF,MAAQ,SAAgBF,GACnC1F,EAAwB,kBAAV0F,GAAsBA,GAAS,GAE7C,IAAIoB,EAAsC,EAAxBhF,KAAKU,KAAKkD,EAAQ,IAChCqB,EAAWrB,EAAQ,GAGvBvT,KAAKoR,QAAQuD,GAETC,EAAW,GACbD,IAIF,IAAK,IAAIvS,EAAI,EAAGA,EAAIuS,EAAavS,IAC/BpC,KAAK0O,MAAMtM,GAAsB,UAAhBpC,KAAK0O,MAAMtM,GAS9B,OALIwS,EAAW,IACb5U,KAAK0O,MAAMtM,IAAMpC,KAAK0O,MAAMtM,GAAM,UAAc,GAAKwS,GAIhD5U,KAAKyQ,UAGdzO,EAAGoM,UAAUwF,KAAO,SAAeL,GACjC,OAAOvT,KAAKmR,QAAQsC,MAAMF,IAI5BvR,EAAGoM,UAAUyG,KAAO,SAAeC,EAAKhH,GACtCD,EAAsB,kBAARiH,GAAoBA,GAAO,GAEzC,IAAItE,EAAOsE,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARA9U,KAAKoR,QAAQZ,EAAM,GAGjBxQ,KAAK0O,MAAM8B,GADT1C,EACgB9N,KAAK0O,MAAM8B,GAAQ,GAAKuE,EAExB/U,KAAK0O,MAAM8B,KAAS,GAAKuE,GAGtC/U,KAAKyQ,UAIdzO,EAAGoM,UAAU4G,KAAO,SAAe3O,GACjC,IAAIiG,EAkBA1G,EAAG6J,EAfP,GAAsB,IAAlBzP,KAAKyO,UAAmC,IAAjBpI,EAAIoI,SAI7B,OAHAzO,KAAKyO,SAAW,EAChBnC,EAAItM,KAAKiV,KAAK5O,GACdrG,KAAKyO,UAAY,EACVzO,KAAKsR,YAGP,GAAsB,IAAlBtR,KAAKyO,UAAmC,IAAjBpI,EAAIoI,SAIpC,OAHApI,EAAIoI,SAAW,EACfnC,EAAItM,KAAKiV,KAAK5O,GACdA,EAAIoI,SAAW,EACRnC,EAAEgF,YAKPtR,KAAKc,OAASuF,EAAIvF,QACpB8E,EAAI5F,KACJyP,EAAIpJ,IAEJT,EAAIS,EACJoJ,EAAIzP,MAIN,IADA,IAAI8R,EAAQ,EACH1P,EAAI,EAAGA,EAAIqN,EAAE3O,OAAQsB,IAC5BkK,GAAkB,EAAb1G,EAAE8I,MAAMtM,KAAwB,EAAbqN,EAAEf,MAAMtM,IAAU0P,EAC1C9R,KAAK0O,MAAMtM,GAAS,SAAJkK,EAChBwF,EAAQxF,IAAM,GAEhB,KAAiB,IAAVwF,GAAe1P,EAAIwD,EAAE9E,OAAQsB,IAClCkK,GAAkB,EAAb1G,EAAE8I,MAAMtM,IAAU0P,EACvB9R,KAAK0O,MAAMtM,GAAS,SAAJkK,EAChBwF,EAAQxF,IAAM,GAIhB,GADAtM,KAAKc,OAAS8E,EAAE9E,OACF,IAAVgR,EACF9R,KAAK0O,MAAM1O,KAAKc,QAAUgR,EAC1B9R,KAAKc,cAEA,GAAI8E,IAAM5F,KACf,KAAOoC,EAAIwD,EAAE9E,OAAQsB,IACnBpC,KAAK0O,MAAMtM,GAAKwD,EAAE8I,MAAMtM,GAI5B,OAAOpC,MAITgC,EAAGoM,UAAU8G,IAAM,SAAc7O,GAC/B,IAAIqM,EACJ,OAAqB,IAAjBrM,EAAIoI,UAAoC,IAAlBzO,KAAKyO,UAC7BpI,EAAIoI,SAAW,EACfiE,EAAM1S,KAAK4L,IAAIvF,GACfA,EAAIoI,UAAY,EACTiE,GACmB,IAAjBrM,EAAIoI,UAAoC,IAAlBzO,KAAKyO,UACpCzO,KAAKyO,SAAW,EAChBiE,EAAMrM,EAAIuF,IAAI5L,MACdA,KAAKyO,SAAW,EACTiE,GAGL1S,KAAKc,OAASuF,EAAIvF,OAAed,KAAKmR,QAAQ6D,KAAK3O,GAEhDA,EAAI8K,QAAQ6D,KAAKhV,OAI1BgC,EAAGoM,UAAU6G,KAAO,SAAe5O,GAEjC,GAAqB,IAAjBA,EAAIoI,SAAgB,CACtBpI,EAAIoI,SAAW,EACf,IAAInC,EAAItM,KAAKgV,KAAK3O,GAElB,OADAA,EAAIoI,SAAW,EACRnC,EAAEgF,YAGJ,GAAsB,IAAlBtR,KAAKyO,SAId,OAHAzO,KAAKyO,SAAW,EAChBzO,KAAKgV,KAAK3O,GACVrG,KAAKyO,SAAW,EACTzO,KAAKsR,YAId,IAWI1L,EAAG6J,EAXHrC,EAAMpN,KAAKoN,IAAI/G,GAGnB,GAAY,IAAR+G,EAIF,OAHApN,KAAKyO,SAAW,EAChBzO,KAAKc,OAAS,EACdd,KAAK0O,MAAM,GAAK,EACT1O,KAKLoN,EAAM,GACRxH,EAAI5F,KACJyP,EAAIpJ,IAEJT,EAAIS,EACJoJ,EAAIzP,MAIN,IADA,IAAI8R,EAAQ,EACH1P,EAAI,EAAGA,EAAIqN,EAAE3O,OAAQsB,IAE5B0P,GADAxF,GAAkB,EAAb1G,EAAE8I,MAAMtM,KAAwB,EAAbqN,EAAEf,MAAMtM,IAAU0P,IAC7B,GACb9R,KAAK0O,MAAMtM,GAAS,SAAJkK,EAElB,KAAiB,IAAVwF,GAAe1P,EAAIwD,EAAE9E,OAAQsB,IAElC0P,GADAxF,GAAkB,EAAb1G,EAAE8I,MAAMtM,IAAU0P,IACV,GACb9R,KAAK0O,MAAMtM,GAAS,SAAJkK,EAIlB,GAAc,IAAVwF,GAAe1P,EAAIwD,EAAE9E,QAAU8E,IAAM5F,KACvC,KAAOoC,EAAIwD,EAAE9E,OAAQsB,IACnBpC,KAAK0O,MAAMtM,GAAKwD,EAAE8I,MAAMtM,GAU5B,OANApC,KAAKc,OAAS6O,KAAKjC,IAAI1N,KAAKc,OAAQsB,GAEhCwD,IAAM5F,OACRA,KAAKyO,SAAW,GAGXzO,KAAKyQ,UAIdzO,EAAGoM,UAAUxC,IAAM,SAAcvF,GAC/B,OAAOrG,KAAKmR,QAAQ8D,KAAK5O,IA+C3B,IAAI8O,EAAc,SAAsBpL,EAAM1D,EAAKwL,GACjD,IAIIO,EACAgD,EACA/B,EANAzN,EAAImE,EAAK2E,MACTe,EAAIpJ,EAAIqI,MACR2G,EAAIxD,EAAInD,MACRQ,EAAI,EAIJoG,EAAY,EAAP1P,EAAE,GACP2P,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP7P,EAAE,GACP8P,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPhQ,EAAE,GACPiQ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPnQ,EAAE,GACPoQ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPtQ,EAAE,GACPuQ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPzQ,EAAE,GACP0Q,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP5Q,EAAE,GACP6Q,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP/Q,EAAE,GACPgR,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPlR,EAAE,GACPmR,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPrR,EAAE,GACPsR,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP3H,EAAE,GACP4H,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP9H,EAAE,GACP+H,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPjI,EAAE,GACPkI,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPpI,EAAE,GACPqI,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPvI,EAAE,GACPwI,EAAW,KAALD,EACNE,GAAMF,IAAO,GACbG,GAAY,EAAP1I,EAAE,GACP2I,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP7I,EAAE,GACP8I,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPhJ,EAAE,GACPiJ,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPnJ,EAAE,GACPoJ,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPtJ,EAAE,GACPuJ,GAAW,KAALD,GACNE,GAAMF,KAAO,GAEjBlH,EAAIpD,SAAW1E,EAAK0E,SAAWpI,EAAIoI,SACnCoD,EAAI/Q,OAAS,GAMb,IAAIoY,IAAQhK,GAJZkD,EAAKzC,KAAKwJ,KAAK5D,EAAK8B,IAIE,KAAa,MAFnCjC,GADAA,EAAMzF,KAAKwJ,KAAK5D,EAAK+B,IACR3H,KAAKwJ,KAAK3D,EAAK6B,GAAQ,KAEU,IAAO,EACrDnI,IAFAmE,EAAK1D,KAAKwJ,KAAK3D,EAAK8B,KAEPlC,IAAQ,IAAO,IAAM8D,KAAO,IAAO,EAChDA,IAAM,SAEN9G,EAAKzC,KAAKwJ,KAAKzD,EAAK2B,GAEpBjC,GADAA,EAAMzF,KAAKwJ,KAAKzD,EAAK4B,IACR3H,KAAKwJ,KAAKxD,EAAK0B,GAAQ,EACpChE,EAAK1D,KAAKwJ,KAAKxD,EAAK2B,GAKpB,IAAI8B,IAAQlK,GAJZkD,EAAMA,EAAKzC,KAAKwJ,KAAK5D,EAAKiC,GAAQ,GAIZ,KAAa,MAFnCpC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK5D,EAAKkC,GAAQ,GACvB9H,KAAKwJ,KAAK3D,EAAKgC,GAAQ,KAEU,IAAO,EACrDtI,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK3D,EAAKiC,GAAQ,IAErBrC,IAAQ,IAAO,IAAMgE,KAAO,IAAO,EAChDA,IAAM,SAENhH,EAAKzC,KAAKwJ,KAAKtD,EAAKwB,GAEpBjC,GADAA,EAAMzF,KAAKwJ,KAAKtD,EAAKyB,IACR3H,KAAKwJ,KAAKrD,EAAKuB,GAAQ,EACpChE,EAAK1D,KAAKwJ,KAAKrD,EAAKwB,GACpBlF,EAAMA,EAAKzC,KAAKwJ,KAAKzD,EAAK8B,GAAQ,EAElCpC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKzD,EAAK+B,GAAQ,GACvB9H,KAAKwJ,KAAKxD,EAAK6B,GAAQ,EACpCnE,EAAMA,EAAK1D,KAAKwJ,KAAKxD,EAAK8B,GAAQ,EAKlC,IAAI4B,IAAQnK,GAJZkD,EAAMA,EAAKzC,KAAKwJ,KAAK5D,EAAKoC,GAAQ,GAIZ,KAAa,MAFnCvC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK5D,EAAKqC,GAAQ,GACvBjI,KAAKwJ,KAAK3D,EAAKmC,GAAQ,KAEU,IAAO,EACrDzI,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK3D,EAAKoC,GAAQ,IAErBxC,IAAQ,IAAO,IAAMiE,KAAO,IAAO,EAChDA,IAAM,SAENjH,EAAKzC,KAAKwJ,KAAKnD,EAAKqB,GAEpBjC,GADAA,EAAMzF,KAAKwJ,KAAKnD,EAAKsB,IACR3H,KAAKwJ,KAAKlD,EAAKoB,GAAQ,EACpChE,EAAK1D,KAAKwJ,KAAKlD,EAAKqB,GACpBlF,EAAMA,EAAKzC,KAAKwJ,KAAKtD,EAAK2B,GAAQ,EAElCpC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKtD,EAAK4B,GAAQ,GACvB9H,KAAKwJ,KAAKrD,EAAK0B,GAAQ,EACpCnE,EAAMA,EAAK1D,KAAKwJ,KAAKrD,EAAK2B,GAAQ,EAClCrF,EAAMA,EAAKzC,KAAKwJ,KAAKzD,EAAKiC,GAAQ,EAElCvC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKzD,EAAKkC,GAAQ,GACvBjI,KAAKwJ,KAAKxD,EAAKgC,GAAQ,EACpCtE,EAAMA,EAAK1D,KAAKwJ,KAAKxD,EAAKiC,GAAQ,EAKlC,IAAI0B,IAAQpK,GAJZkD,EAAMA,EAAKzC,KAAKwJ,KAAK5D,EAAKuC,GAAQ,GAIZ,KAAa,MAFnC1C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK5D,EAAKwC,GAAQ,GACvBpI,KAAKwJ,KAAK3D,EAAKsC,GAAQ,KAEU,IAAO,EACrD5I,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK3D,EAAKuC,GAAQ,IAErB3C,IAAQ,IAAO,IAAMkE,KAAO,IAAO,EAChDA,IAAM,SAENlH,EAAKzC,KAAKwJ,KAAKhD,EAAKkB,GAEpBjC,GADAA,EAAMzF,KAAKwJ,KAAKhD,EAAKmB,IACR3H,KAAKwJ,KAAK/C,EAAKiB,GAAQ,EACpChE,EAAK1D,KAAKwJ,KAAK/C,EAAKkB,GACpBlF,EAAMA,EAAKzC,KAAKwJ,KAAKnD,EAAKwB,GAAQ,EAElCpC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKnD,EAAKyB,GAAQ,GACvB9H,KAAKwJ,KAAKlD,EAAKuB,GAAQ,EACpCnE,EAAMA,EAAK1D,KAAKwJ,KAAKlD,EAAKwB,GAAQ,EAClCrF,EAAMA,EAAKzC,KAAKwJ,KAAKtD,EAAK8B,GAAQ,EAElCvC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKtD,EAAK+B,GAAQ,GACvBjI,KAAKwJ,KAAKrD,EAAK6B,GAAQ,EACpCtE,EAAMA,EAAK1D,KAAKwJ,KAAKrD,EAAK8B,GAAQ,EAClCxF,EAAMA,EAAKzC,KAAKwJ,KAAKzD,EAAKoC,GAAQ,EAElC1C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKzD,EAAKqC,GAAQ,GACvBpI,KAAKwJ,KAAKxD,EAAKmC,GAAQ,EACpCzE,EAAMA,EAAK1D,KAAKwJ,KAAKxD,EAAKoC,GAAQ,EAKlC,IAAIwB,IAAQrK,GAJZkD,EAAMA,EAAKzC,KAAKwJ,KAAK5D,EAAK0C,GAAQ,GAIZ,KAAa,MAFnC7C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK5D,EAAK2C,IAAQ,GACvBvI,KAAKwJ,KAAK3D,EAAKyC,GAAQ,KAEU,IAAO,EACrD/I,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK3D,EAAK0C,IAAQ,IAErB9C,IAAQ,IAAO,IAAMmE,KAAO,IAAO,EAChDA,IAAM,SAENnH,EAAKzC,KAAKwJ,KAAK7C,EAAKe,GAEpBjC,GADAA,EAAMzF,KAAKwJ,KAAK7C,EAAKgB,IACR3H,KAAKwJ,KAAK5C,EAAKc,GAAQ,EACpChE,EAAK1D,KAAKwJ,KAAK5C,EAAKe,GACpBlF,EAAMA,EAAKzC,KAAKwJ,KAAKhD,EAAKqB,GAAQ,EAElCpC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKhD,EAAKsB,GAAQ,GACvB9H,KAAKwJ,KAAK/C,EAAKoB,GAAQ,EACpCnE,EAAMA,EAAK1D,KAAKwJ,KAAK/C,EAAKqB,GAAQ,EAClCrF,EAAMA,EAAKzC,KAAKwJ,KAAKnD,EAAK2B,GAAQ,EAElCvC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKnD,EAAK4B,GAAQ,GACvBjI,KAAKwJ,KAAKlD,EAAK0B,GAAQ,EACpCtE,EAAMA,EAAK1D,KAAKwJ,KAAKlD,EAAK2B,GAAQ,EAClCxF,EAAMA,EAAKzC,KAAKwJ,KAAKtD,EAAKiC,GAAQ,EAElC1C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKtD,EAAKkC,GAAQ,GACvBpI,KAAKwJ,KAAKrD,EAAKgC,GAAQ,EACpCzE,EAAMA,EAAK1D,KAAKwJ,KAAKrD,EAAKiC,GAAQ,EAClC3F,EAAMA,EAAKzC,KAAKwJ,KAAKzD,EAAKuC,GAAQ,EAElC7C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKzD,EAAKwC,IAAQ,GACvBvI,KAAKwJ,KAAKxD,EAAKsC,GAAQ,EACpC5E,EAAMA,EAAK1D,KAAKwJ,KAAKxD,EAAKuC,IAAQ,EAKlC,IAAIsB,IAAQtK,GAJZkD,EAAMA,EAAKzC,KAAKwJ,KAAK5D,EAAK6C,IAAQ,GAIZ,KAAa,MAFnChD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK5D,EAAK8C,IAAQ,GACvB1I,KAAKwJ,KAAK3D,EAAK4C,IAAQ,KAEU,IAAO,EACrDlJ,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK3D,EAAK6C,IAAQ,IAErBjD,IAAQ,IAAO,IAAMoE,KAAO,IAAO,EAChDA,IAAM,SAENpH,EAAKzC,KAAKwJ,KAAK1C,EAAKY,GAEpBjC,GADAA,EAAMzF,KAAKwJ,KAAK1C,EAAKa,IACR3H,KAAKwJ,KAAKzC,EAAKW,GAAQ,EACpChE,EAAK1D,KAAKwJ,KAAKzC,EAAKY,GACpBlF,EAAMA,EAAKzC,KAAKwJ,KAAK7C,EAAKkB,GAAQ,EAElCpC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK7C,EAAKmB,GAAQ,GACvB9H,KAAKwJ,KAAK5C,EAAKiB,GAAQ,EACpCnE,EAAMA,EAAK1D,KAAKwJ,KAAK5C,EAAKkB,GAAQ,EAClCrF,EAAMA,EAAKzC,KAAKwJ,KAAKhD,EAAKwB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKhD,EAAKyB,GAAQ,GACvBjI,KAAKwJ,KAAK/C,EAAKuB,GAAQ,EACpCtE,EAAMA,EAAK1D,KAAKwJ,KAAK/C,EAAKwB,GAAQ,EAClCxF,EAAMA,EAAKzC,KAAKwJ,KAAKnD,EAAK8B,GAAQ,EAElC1C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKnD,EAAK+B,GAAQ,GACvBpI,KAAKwJ,KAAKlD,EAAK6B,GAAQ,EACpCzE,EAAMA,EAAK1D,KAAKwJ,KAAKlD,EAAK8B,GAAQ,EAClC3F,EAAMA,EAAKzC,KAAKwJ,KAAKtD,EAAKoC,GAAQ,EAElC7C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKtD,EAAKqC,IAAQ,GACvBvI,KAAKwJ,KAAKrD,EAAKmC,GAAQ,EACpC5E,EAAMA,EAAK1D,KAAKwJ,KAAKrD,EAAKoC,IAAQ,EAClC9F,EAAMA,EAAKzC,KAAKwJ,KAAKzD,EAAK0C,IAAQ,EAElChD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKzD,EAAK2C,IAAQ,GACvB1I,KAAKwJ,KAAKxD,EAAKyC,IAAQ,EACpC/E,EAAMA,EAAK1D,KAAKwJ,KAAKxD,EAAK0C,IAAQ,EAKlC,IAAIoB,IAAQvK,GAJZkD,EAAMA,EAAKzC,KAAKwJ,KAAK5D,EAAKgD,IAAQ,GAIZ,KAAa,MAFnCnD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK5D,EAAKiD,IAAQ,GACvB7I,KAAKwJ,KAAK3D,EAAK+C,IAAQ,KAEU,IAAO,EACrDrJ,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK3D,EAAKgD,IAAQ,IAErBpD,IAAQ,IAAO,IAAMqE,KAAO,IAAO,EAChDA,IAAM,SAENrH,EAAKzC,KAAKwJ,KAAKvC,EAAKS,GAEpBjC,GADAA,EAAMzF,KAAKwJ,KAAKvC,EAAKU,IACR3H,KAAKwJ,KAAKtC,EAAKQ,GAAQ,EACpChE,EAAK1D,KAAKwJ,KAAKtC,EAAKS,GACpBlF,EAAMA,EAAKzC,KAAKwJ,KAAK1C,EAAKe,GAAQ,EAElCpC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK1C,EAAKgB,GAAQ,GACvB9H,KAAKwJ,KAAKzC,EAAKc,GAAQ,EACpCnE,EAAMA,EAAK1D,KAAKwJ,KAAKzC,EAAKe,GAAQ,EAClCrF,EAAMA,EAAKzC,KAAKwJ,KAAK7C,EAAKqB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK7C,EAAKsB,GAAQ,GACvBjI,KAAKwJ,KAAK5C,EAAKoB,GAAQ,EACpCtE,EAAMA,EAAK1D,KAAKwJ,KAAK5C,EAAKqB,GAAQ,EAClCxF,EAAMA,EAAKzC,KAAKwJ,KAAKhD,EAAK2B,GAAQ,EAElC1C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKhD,EAAK4B,GAAQ,GACvBpI,KAAKwJ,KAAK/C,EAAK0B,GAAQ,EACpCzE,EAAMA,EAAK1D,KAAKwJ,KAAK/C,EAAK2B,GAAQ,EAClC3F,EAAMA,EAAKzC,KAAKwJ,KAAKnD,EAAKiC,GAAQ,EAElC7C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKnD,EAAKkC,IAAQ,GACvBvI,KAAKwJ,KAAKlD,EAAKgC,GAAQ,EACpC5E,EAAMA,EAAK1D,KAAKwJ,KAAKlD,EAAKiC,IAAQ,EAClC9F,EAAMA,EAAKzC,KAAKwJ,KAAKtD,EAAKuC,IAAQ,EAElChD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKtD,EAAKwC,IAAQ,GACvB1I,KAAKwJ,KAAKrD,EAAKsC,IAAQ,EACpC/E,EAAMA,EAAK1D,KAAKwJ,KAAKrD,EAAKuC,IAAQ,EAClCjG,EAAMA,EAAKzC,KAAKwJ,KAAKzD,EAAK6C,IAAQ,EAElCnD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKzD,EAAK8C,IAAQ,GACvB7I,KAAKwJ,KAAKxD,EAAK4C,IAAQ,EACpClF,EAAMA,EAAK1D,KAAKwJ,KAAKxD,EAAK6C,IAAQ,EAKlC,IAAIkB,IAAQxK,GAJZkD,EAAMA,EAAKzC,KAAKwJ,KAAK5D,EAAKmD,IAAQ,GAIZ,KAAa,MAFnCtD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK5D,EAAKoD,IAAQ,GACvBhJ,KAAKwJ,KAAK3D,EAAKkD,IAAQ,KAEU,IAAO,EACrDxJ,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK3D,EAAKmD,IAAQ,IAErBvD,IAAQ,IAAO,IAAMsE,KAAO,IAAO,EAChDA,IAAM,SAENtH,EAAKzC,KAAKwJ,KAAKpC,EAAKM,GAEpBjC,GADAA,EAAMzF,KAAKwJ,KAAKpC,EAAKO,IACR3H,KAAKwJ,KAAKnC,EAAKK,GAAQ,EACpChE,EAAK1D,KAAKwJ,KAAKnC,EAAKM,GACpBlF,EAAMA,EAAKzC,KAAKwJ,KAAKvC,EAAKY,GAAQ,EAElCpC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKvC,EAAKa,GAAQ,GACvB9H,KAAKwJ,KAAKtC,EAAKW,GAAQ,EACpCnE,EAAMA,EAAK1D,KAAKwJ,KAAKtC,EAAKY,GAAQ,EAClCrF,EAAMA,EAAKzC,KAAKwJ,KAAK1C,EAAKkB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK1C,EAAKmB,GAAQ,GACvBjI,KAAKwJ,KAAKzC,EAAKiB,GAAQ,EACpCtE,EAAMA,EAAK1D,KAAKwJ,KAAKzC,EAAKkB,GAAQ,EAClCxF,EAAMA,EAAKzC,KAAKwJ,KAAK7C,EAAKwB,GAAQ,EAElC1C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK7C,EAAKyB,GAAQ,GACvBpI,KAAKwJ,KAAK5C,EAAKuB,GAAQ,EACpCzE,EAAMA,EAAK1D,KAAKwJ,KAAK5C,EAAKwB,GAAQ,EAClC3F,EAAMA,EAAKzC,KAAKwJ,KAAKhD,EAAK8B,GAAQ,EAElC7C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKhD,EAAK+B,IAAQ,GACvBvI,KAAKwJ,KAAK/C,EAAK6B,GAAQ,EACpC5E,EAAMA,EAAK1D,KAAKwJ,KAAK/C,EAAK8B,IAAQ,EAClC9F,EAAMA,EAAKzC,KAAKwJ,KAAKnD,EAAKoC,IAAQ,EAElChD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKnD,EAAKqC,IAAQ,GACvB1I,KAAKwJ,KAAKlD,EAAKmC,IAAQ,EACpC/E,EAAMA,EAAK1D,KAAKwJ,KAAKlD,EAAKoC,IAAQ,EAClCjG,EAAMA,EAAKzC,KAAKwJ,KAAKtD,EAAK0C,IAAQ,EAElCnD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKtD,EAAK2C,IAAQ,GACvB7I,KAAKwJ,KAAKrD,EAAKyC,IAAQ,EACpClF,EAAMA,EAAK1D,KAAKwJ,KAAKrD,EAAK0C,IAAQ,EAClCpG,EAAMA,EAAKzC,KAAKwJ,KAAKzD,EAAKgD,IAAQ,EAElCtD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKzD,EAAKiD,IAAQ,GACvBhJ,KAAKwJ,KAAKxD,EAAK+C,IAAQ,EACpCrF,EAAMA,EAAK1D,KAAKwJ,KAAKxD,EAAKgD,IAAQ,EAKlC,IAAIgB,IAAQzK,GAJZkD,EAAMA,EAAKzC,KAAKwJ,KAAK5D,EAAKsD,IAAQ,GAIZ,KAAa,MAFnCzD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK5D,EAAKuD,IAAQ,GACvBnJ,KAAKwJ,KAAK3D,EAAKqD,IAAQ,KAEU,IAAO,EACrD3J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK3D,EAAKsD,IAAQ,IAErB1D,IAAQ,IAAO,IAAMuE,KAAO,IAAO,EAChDA,IAAM,SAENvH,EAAKzC,KAAKwJ,KAAKjC,EAAKG,GAEpBjC,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAKI,IACR3H,KAAKwJ,KAAKhC,EAAKE,GAAQ,EACpChE,EAAK1D,KAAKwJ,KAAKhC,EAAKG,GACpBlF,EAAMA,EAAKzC,KAAKwJ,KAAKpC,EAAKS,GAAQ,EAElCpC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKpC,EAAKU,GAAQ,GACvB9H,KAAKwJ,KAAKnC,EAAKQ,GAAQ,EACpCnE,EAAMA,EAAK1D,KAAKwJ,KAAKnC,EAAKS,GAAQ,EAClCrF,EAAMA,EAAKzC,KAAKwJ,KAAKvC,EAAKe,GAAQ,EAElCvC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKvC,EAAKgB,GAAQ,GACvBjI,KAAKwJ,KAAKtC,EAAKc,GAAQ,EACpCtE,EAAMA,EAAK1D,KAAKwJ,KAAKtC,EAAKe,GAAQ,EAClCxF,EAAMA,EAAKzC,KAAKwJ,KAAK1C,EAAKqB,GAAQ,EAElC1C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK1C,EAAKsB,GAAQ,GACvBpI,KAAKwJ,KAAKzC,EAAKoB,GAAQ,EACpCzE,EAAMA,EAAK1D,KAAKwJ,KAAKzC,EAAKqB,GAAQ,EAClC3F,EAAMA,EAAKzC,KAAKwJ,KAAK7C,EAAK2B,GAAQ,EAElC7C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK7C,EAAK4B,IAAQ,GACvBvI,KAAKwJ,KAAK5C,EAAK0B,GAAQ,EACpC5E,EAAMA,EAAK1D,KAAKwJ,KAAK5C,EAAK2B,IAAQ,EAClC9F,EAAMA,EAAKzC,KAAKwJ,KAAKhD,EAAKiC,IAAQ,EAElChD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKhD,EAAKkC,IAAQ,GACvB1I,KAAKwJ,KAAK/C,EAAKgC,IAAQ,EACpC/E,EAAMA,EAAK1D,KAAKwJ,KAAK/C,EAAKiC,IAAQ,EAClCjG,EAAMA,EAAKzC,KAAKwJ,KAAKnD,EAAKuC,IAAQ,EAElCnD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKnD,EAAKwC,IAAQ,GACvB7I,KAAKwJ,KAAKlD,EAAKsC,IAAQ,EACpClF,EAAMA,EAAK1D,KAAKwJ,KAAKlD,EAAKuC,IAAQ,EAClCpG,EAAMA,EAAKzC,KAAKwJ,KAAKtD,EAAK6C,IAAQ,EAElCtD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKtD,EAAK8C,IAAQ,GACvBhJ,KAAKwJ,KAAKrD,EAAK4C,IAAQ,EACpCrF,EAAMA,EAAK1D,KAAKwJ,KAAKrD,EAAK6C,IAAQ,EAClCvG,EAAMA,EAAKzC,KAAKwJ,KAAKzD,EAAKmD,IAAQ,EAElCzD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKzD,EAAKoD,IAAQ,GACvBnJ,KAAKwJ,KAAKxD,EAAKkD,IAAQ,EACpCxF,EAAMA,EAAK1D,KAAKwJ,KAAKxD,EAAKmD,IAAQ,EAKlC,IAAIc,IAAQ1K,GAJZkD,EAAMA,EAAKzC,KAAKwJ,KAAK5D,EAAKyD,IAAQ,GAIZ,KAAa,MAFnC5D,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK5D,EAAK0D,IAAQ,GACvBtJ,KAAKwJ,KAAK3D,EAAKwD,IAAQ,KAEU,IAAO,EACrD9J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK3D,EAAKyD,IAAQ,IAErB7D,IAAQ,IAAO,IAAMwE,KAAO,IAAO,EAChDA,IAAM,SAENxH,EAAKzC,KAAKwJ,KAAKjC,EAAKM,GAEpBpC,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAKO,IACR9H,KAAKwJ,KAAKhC,EAAKK,GAAQ,EACpCnE,EAAK1D,KAAKwJ,KAAKhC,EAAKM,GACpBrF,EAAMA,EAAKzC,KAAKwJ,KAAKpC,EAAKY,GAAQ,EAElCvC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKpC,EAAKa,GAAQ,GACvBjI,KAAKwJ,KAAKnC,EAAKW,GAAQ,EACpCtE,EAAMA,EAAK1D,KAAKwJ,KAAKnC,EAAKY,GAAQ,EAClCxF,EAAMA,EAAKzC,KAAKwJ,KAAKvC,EAAKkB,GAAQ,EAElC1C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKvC,EAAKmB,GAAQ,GACvBpI,KAAKwJ,KAAKtC,EAAKiB,GAAQ,EACpCzE,EAAMA,EAAK1D,KAAKwJ,KAAKtC,EAAKkB,GAAQ,EAClC3F,EAAMA,EAAKzC,KAAKwJ,KAAK1C,EAAKwB,GAAQ,EAElC7C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK1C,EAAKyB,IAAQ,GACvBvI,KAAKwJ,KAAKzC,EAAKuB,GAAQ,EACpC5E,EAAMA,EAAK1D,KAAKwJ,KAAKzC,EAAKwB,IAAQ,EAClC9F,EAAMA,EAAKzC,KAAKwJ,KAAK7C,EAAK8B,IAAQ,EAElChD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK7C,EAAK+B,IAAQ,GACvB1I,KAAKwJ,KAAK5C,EAAK6B,IAAQ,EACpC/E,EAAMA,EAAK1D,KAAKwJ,KAAK5C,EAAK8B,IAAQ,EAClCjG,EAAMA,EAAKzC,KAAKwJ,KAAKhD,EAAKoC,IAAQ,EAElCnD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKhD,EAAKqC,IAAQ,GACvB7I,KAAKwJ,KAAK/C,EAAKmC,IAAQ,EACpClF,EAAMA,EAAK1D,KAAKwJ,KAAK/C,EAAKoC,IAAQ,EAClCpG,EAAMA,EAAKzC,KAAKwJ,KAAKnD,EAAK0C,IAAQ,EAElCtD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKnD,EAAK2C,IAAQ,GACvBhJ,KAAKwJ,KAAKlD,EAAKyC,IAAQ,EACpCrF,EAAMA,EAAK1D,KAAKwJ,KAAKlD,EAAK0C,IAAQ,EAClCvG,EAAMA,EAAKzC,KAAKwJ,KAAKtD,EAAKgD,IAAQ,EAElCzD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKtD,EAAKiD,IAAQ,GACvBnJ,KAAKwJ,KAAKrD,EAAK+C,IAAQ,EACpCxF,EAAMA,EAAK1D,KAAKwJ,KAAKrD,EAAKgD,IAAQ,EAKlC,IAAIe,IAAS3K,GAJbkD,EAAMA,EAAKzC,KAAKwJ,KAAKzD,EAAKsD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKzD,EAAKuD,IAAQ,GACvBtJ,KAAKwJ,KAAKxD,EAAKqD,IAAQ,KAEW,IAAO,EACtD9J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAKxD,EAAKsD,IAAQ,IAErB7D,IAAQ,IAAO,IAAMyE,KAAQ,IAAO,EACjDA,IAAO,SAEPzH,EAAKzC,KAAKwJ,KAAKjC,EAAKS,GAEpBvC,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAKU,IACRjI,KAAKwJ,KAAKhC,EAAKQ,GAAQ,EACpCtE,EAAK1D,KAAKwJ,KAAKhC,EAAKS,GACpBxF,EAAMA,EAAKzC,KAAKwJ,KAAKpC,EAAKe,GAAQ,EAElC1C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKpC,EAAKgB,GAAQ,GACvBpI,KAAKwJ,KAAKnC,EAAKc,GAAQ,EACpCzE,EAAMA,EAAK1D,KAAKwJ,KAAKnC,EAAKe,GAAQ,EAClC3F,EAAMA,EAAKzC,KAAKwJ,KAAKvC,EAAKqB,GAAQ,EAElC7C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKvC,EAAKsB,IAAQ,GACvBvI,KAAKwJ,KAAKtC,EAAKoB,GAAQ,EACpC5E,EAAMA,EAAK1D,KAAKwJ,KAAKtC,EAAKqB,IAAQ,EAClC9F,EAAMA,EAAKzC,KAAKwJ,KAAK1C,EAAK2B,IAAQ,EAElChD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK1C,EAAK4B,IAAQ,GACvB1I,KAAKwJ,KAAKzC,EAAK0B,IAAQ,EACpC/E,EAAMA,EAAK1D,KAAKwJ,KAAKzC,EAAK2B,IAAQ,EAClCjG,EAAMA,EAAKzC,KAAKwJ,KAAK7C,EAAKiC,IAAQ,EAElCnD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK7C,EAAKkC,IAAQ,GACvB7I,KAAKwJ,KAAK5C,EAAKgC,IAAQ,EACpClF,EAAMA,EAAK1D,KAAKwJ,KAAK5C,EAAKiC,IAAQ,EAClCpG,EAAMA,EAAKzC,KAAKwJ,KAAKhD,EAAKuC,IAAQ,EAElCtD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKhD,EAAKwC,IAAQ,GACvBhJ,KAAKwJ,KAAK/C,EAAKsC,IAAQ,EACpCrF,EAAMA,EAAK1D,KAAKwJ,KAAK/C,EAAKuC,IAAQ,EAClCvG,EAAMA,EAAKzC,KAAKwJ,KAAKnD,EAAK6C,IAAQ,EAElCzD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKnD,EAAK8C,IAAQ,GACvBnJ,KAAKwJ,KAAKlD,EAAK4C,IAAQ,EACpCxF,EAAMA,EAAK1D,KAAKwJ,KAAKlD,EAAK6C,IAAQ,EAKlC,IAAIgB,IAAS5K,GAJbkD,EAAMA,EAAKzC,KAAKwJ,KAAKtD,EAAKmD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKtD,EAAKoD,IAAQ,GACvBtJ,KAAKwJ,KAAKrD,EAAKkD,IAAQ,KAEW,IAAO,EACtD9J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAKrD,EAAKmD,IAAQ,IAErB7D,IAAQ,IAAO,IAAM0E,KAAQ,IAAO,EACjDA,IAAO,SAEP1H,EAAKzC,KAAKwJ,KAAKjC,EAAKY,GAEpB1C,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAKa,IACRpI,KAAKwJ,KAAKhC,EAAKW,GAAQ,EACpCzE,EAAK1D,KAAKwJ,KAAKhC,EAAKY,GACpB3F,EAAMA,EAAKzC,KAAKwJ,KAAKpC,EAAKkB,GAAQ,EAElC7C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKpC,EAAKmB,IAAQ,GACvBvI,KAAKwJ,KAAKnC,EAAKiB,GAAQ,EACpC5E,EAAMA,EAAK1D,KAAKwJ,KAAKnC,EAAKkB,IAAQ,EAClC9F,EAAMA,EAAKzC,KAAKwJ,KAAKvC,EAAKwB,IAAQ,EAElChD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKvC,EAAKyB,IAAQ,GACvB1I,KAAKwJ,KAAKtC,EAAKuB,IAAQ,EACpC/E,EAAMA,EAAK1D,KAAKwJ,KAAKtC,EAAKwB,IAAQ,EAClCjG,EAAMA,EAAKzC,KAAKwJ,KAAK1C,EAAK8B,IAAQ,EAElCnD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK1C,EAAK+B,IAAQ,GACvB7I,KAAKwJ,KAAKzC,EAAK6B,IAAQ,EACpClF,EAAMA,EAAK1D,KAAKwJ,KAAKzC,EAAK8B,IAAQ,EAClCpG,EAAMA,EAAKzC,KAAKwJ,KAAK7C,EAAKoC,IAAQ,EAElCtD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK7C,EAAKqC,IAAQ,GACvBhJ,KAAKwJ,KAAK5C,EAAKmC,IAAQ,EACpCrF,EAAMA,EAAK1D,KAAKwJ,KAAK5C,EAAKoC,IAAQ,EAClCvG,EAAMA,EAAKzC,KAAKwJ,KAAKhD,EAAK0C,IAAQ,EAElCzD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKhD,EAAK2C,IAAQ,GACvBnJ,KAAKwJ,KAAK/C,EAAKyC,IAAQ,EACpCxF,EAAMA,EAAK1D,KAAKwJ,KAAK/C,EAAK0C,IAAQ,EAKlC,IAAIiB,IAAS7K,GAJbkD,EAAMA,EAAKzC,KAAKwJ,KAAKnD,EAAKgD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKnD,EAAKiD,IAAQ,GACvBtJ,KAAKwJ,KAAKlD,EAAK+C,IAAQ,KAEW,IAAO,EACtD9J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAKlD,EAAKgD,IAAQ,IAErB7D,IAAQ,IAAO,IAAM2E,KAAQ,IAAO,EACjDA,IAAO,SAEP3H,EAAKzC,KAAKwJ,KAAKjC,EAAKe,GAEpB7C,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAKgB,KACRvI,KAAKwJ,KAAKhC,EAAKc,GAAQ,EACpC5E,EAAK1D,KAAKwJ,KAAKhC,EAAKe,IACpB9F,EAAMA,EAAKzC,KAAKwJ,KAAKpC,EAAKqB,IAAQ,EAElChD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKpC,EAAKsB,IAAQ,GACvB1I,KAAKwJ,KAAKnC,EAAKoB,IAAQ,EACpC/E,EAAMA,EAAK1D,KAAKwJ,KAAKnC,EAAKqB,IAAQ,EAClCjG,EAAMA,EAAKzC,KAAKwJ,KAAKvC,EAAK2B,IAAQ,EAElCnD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKvC,EAAK4B,IAAQ,GACvB7I,KAAKwJ,KAAKtC,EAAK0B,IAAQ,EACpClF,EAAMA,EAAK1D,KAAKwJ,KAAKtC,EAAK2B,IAAQ,EAClCpG,EAAMA,EAAKzC,KAAKwJ,KAAK1C,EAAKiC,IAAQ,EAElCtD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK1C,EAAKkC,IAAQ,GACvBhJ,KAAKwJ,KAAKzC,EAAKgC,IAAQ,EACpCrF,EAAMA,EAAK1D,KAAKwJ,KAAKzC,EAAKiC,IAAQ,EAClCvG,EAAMA,EAAKzC,KAAKwJ,KAAK7C,EAAKuC,IAAQ,EAElCzD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK7C,EAAKwC,IAAQ,GACvBnJ,KAAKwJ,KAAK5C,EAAKsC,IAAQ,EACpCxF,EAAMA,EAAK1D,KAAKwJ,KAAK5C,EAAKuC,IAAQ,EAKlC,IAAIkB,IAAS9K,GAJbkD,EAAMA,EAAKzC,KAAKwJ,KAAKhD,EAAK6C,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKhD,EAAK8C,IAAQ,GACvBtJ,KAAKwJ,KAAK/C,EAAK4C,IAAQ,KAEW,IAAO,EACtD9J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK/C,EAAK6C,IAAQ,IAErB7D,IAAQ,IAAO,IAAM4E,KAAQ,IAAO,EACjDA,IAAO,SAEP5H,EAAKzC,KAAKwJ,KAAKjC,EAAKkB,IAEpBhD,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAKmB,KACR1I,KAAKwJ,KAAKhC,EAAKiB,IAAQ,EACpC/E,EAAK1D,KAAKwJ,KAAKhC,EAAKkB,IACpBjG,EAAMA,EAAKzC,KAAKwJ,KAAKpC,EAAKwB,IAAQ,EAElCnD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKpC,EAAKyB,IAAQ,GACvB7I,KAAKwJ,KAAKnC,EAAKuB,IAAQ,EACpClF,EAAMA,EAAK1D,KAAKwJ,KAAKnC,EAAKwB,IAAQ,EAClCpG,EAAMA,EAAKzC,KAAKwJ,KAAKvC,EAAK8B,IAAQ,EAElCtD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKvC,EAAK+B,IAAQ,GACvBhJ,KAAKwJ,KAAKtC,EAAK6B,IAAQ,EACpCrF,EAAMA,EAAK1D,KAAKwJ,KAAKtC,EAAK8B,IAAQ,EAClCvG,EAAMA,EAAKzC,KAAKwJ,KAAK1C,EAAKoC,IAAQ,EAElCzD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK1C,EAAKqC,IAAQ,GACvBnJ,KAAKwJ,KAAKzC,EAAKmC,IAAQ,EACpCxF,EAAMA,EAAK1D,KAAKwJ,KAAKzC,EAAKoC,IAAQ,EAKlC,IAAImB,IAAS/K,GAJbkD,EAAMA,EAAKzC,KAAKwJ,KAAK7C,EAAK0C,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK7C,EAAK2C,IAAQ,GACvBtJ,KAAKwJ,KAAK5C,EAAKyC,IAAQ,KAEW,IAAO,EACtD9J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK5C,EAAK0C,IAAQ,IAErB7D,IAAQ,IAAO,IAAM6E,KAAQ,IAAO,EACjDA,IAAO,SAEP7H,EAAKzC,KAAKwJ,KAAKjC,EAAKqB,IAEpBnD,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAKsB,KACR7I,KAAKwJ,KAAKhC,EAAKoB,IAAQ,EACpClF,EAAK1D,KAAKwJ,KAAKhC,EAAKqB,IACpBpG,EAAMA,EAAKzC,KAAKwJ,KAAKpC,EAAK2B,IAAQ,EAElCtD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKpC,EAAK4B,IAAQ,GACvBhJ,KAAKwJ,KAAKnC,EAAK0B,IAAQ,EACpCrF,EAAMA,EAAK1D,KAAKwJ,KAAKnC,EAAK2B,IAAQ,EAClCvG,EAAMA,EAAKzC,KAAKwJ,KAAKvC,EAAKiC,IAAQ,EAElCzD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKvC,EAAKkC,IAAQ,GACvBnJ,KAAKwJ,KAAKtC,EAAKgC,IAAQ,EACpCxF,EAAMA,EAAK1D,KAAKwJ,KAAKtC,EAAKiC,IAAQ,EAKlC,IAAIoB,IAAShL,GAJbkD,EAAMA,EAAKzC,KAAKwJ,KAAK1C,EAAKuC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK1C,EAAKwC,IAAQ,GACvBtJ,KAAKwJ,KAAKzC,EAAKsC,IAAQ,KAEW,IAAO,EACtD9J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAKzC,EAAKuC,IAAQ,IAErB7D,IAAQ,IAAO,IAAM8E,KAAQ,IAAO,EACjDA,IAAO,SAEP9H,EAAKzC,KAAKwJ,KAAKjC,EAAKwB,IAEpBtD,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAKyB,KACRhJ,KAAKwJ,KAAKhC,EAAKuB,IAAQ,EACpCrF,EAAK1D,KAAKwJ,KAAKhC,EAAKwB,IACpBvG,EAAMA,EAAKzC,KAAKwJ,KAAKpC,EAAK8B,IAAQ,EAElCzD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKpC,EAAK+B,IAAQ,GACvBnJ,KAAKwJ,KAAKnC,EAAK6B,IAAQ,EACpCxF,EAAMA,EAAK1D,KAAKwJ,KAAKnC,EAAK8B,IAAQ,EAKlC,IAAIqB,IAASjL,GAJbkD,EAAMA,EAAKzC,KAAKwJ,KAAKvC,EAAKoC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKvC,EAAKqC,IAAQ,GACvBtJ,KAAKwJ,KAAKtC,EAAKmC,IAAQ,KAEW,IAAO,EACtD9J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAKtC,EAAKoC,IAAQ,IAErB7D,IAAQ,IAAO,IAAM+E,KAAQ,IAAO,EACjDA,IAAO,SAEP/H,EAAKzC,KAAKwJ,KAAKjC,EAAK2B,IAEpBzD,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAK4B,KACRnJ,KAAKwJ,KAAKhC,EAAK0B,IAAQ,EACpCxF,EAAK1D,KAAKwJ,KAAKhC,EAAK2B,IAKpB,IAAIsB,IAASlL,GAJbkD,EAAMA,EAAKzC,KAAKwJ,KAAKpC,EAAKiC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKpC,EAAKkC,IAAQ,GACvBtJ,KAAKwJ,KAAKnC,EAAKgC,IAAQ,KAEW,IAAO,EACtD9J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAKnC,EAAKiC,IAAQ,IAErB7D,IAAQ,IAAO,IAAMgF,KAAQ,IAAO,EACjDA,IAAO,SAMP,IAAIC,IAASnL,GAJbkD,EAAKzC,KAAKwJ,KAAKjC,EAAK8B,KAIG,KAAa,MAFpC5D,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAK+B,KACRtJ,KAAKwJ,KAAKhC,EAAK6B,IAAQ,KAEW,IAAO,EA0BtD,OAzBA9J,IAFAmE,EAAK1D,KAAKwJ,KAAKhC,EAAK8B,MAEP7D,IAAQ,IAAO,IAAMiF,KAAQ,IAAO,EACjDA,IAAO,SACPhF,EAAE,GAAK6D,GACP7D,EAAE,GAAK+D,GACP/D,EAAE,GAAKgE,GACPhE,EAAE,GAAKiE,GACPjE,EAAE,GAAKkE,GACPlE,EAAE,GAAKmE,GACPnE,EAAE,GAAKoE,GACPpE,EAAE,GAAKqE,GACPrE,EAAE,GAAKsE,GACPtE,EAAE,GAAKuE,GACPvE,EAAE,IAAMwE,GACRxE,EAAE,IAAMyE,GACRzE,EAAE,IAAM0E,GACR1E,EAAE,IAAM2E,GACR3E,EAAE,IAAM4E,GACR5E,EAAE,IAAM6E,GACR7E,EAAE,IAAM8E,GACR9E,EAAE,IAAM+E,GACR/E,EAAE,IAAMgF,GACE,IAANnL,IACFmG,EAAE,IAAMnG,EACR2C,EAAI/Q,UAEC+Q,GAQT,SAASyI,EAAUvQ,EAAM1D,EAAKwL,GAC5BA,EAAIpD,SAAWpI,EAAIoI,SAAW1E,EAAK0E,SACnCoD,EAAI/Q,OAASiJ,EAAKjJ,OAASuF,EAAIvF,OAI/B,IAFA,IAAIgR,EAAQ,EACRyI,EAAU,EACLtT,EAAI,EAAGA,EAAI4K,EAAI/Q,OAAS,EAAGmG,IAAK,CAGvC,IAAIoL,EAASkI,EACbA,EAAU,EAGV,IAFA,IAAIjI,EAAgB,SAARR,EACRS,EAAO5C,KAAKC,IAAI3I,EAAGZ,EAAIvF,OAAS,GAC3BwP,EAAIX,KAAKjC,IAAI,EAAGzG,EAAI8C,EAAKjJ,OAAS,GAAIwP,GAAKiC,EAAMjC,IAAK,CAC7D,IAAIlO,EAAI6E,EAAIqJ,EAGRhE,GAFoB,EAAhBvC,EAAK2E,MAAMtM,KACI,EAAfiE,EAAIqI,MAAM4B,IAGd8B,EAAS,SAAJ9F,EAGTgG,EAAa,UADbF,EAAMA,EAAKE,EAAS,GAIpBiI,IAFAlI,GAHAA,EAAUA,GAAW/F,EAAI,SAAa,GAAM,IAGxB8F,IAAO,IAAO,KAEZ,GACtBC,GAAU,SAEZR,EAAInD,MAAMzH,GAAKqL,EACfR,EAAQO,EACRA,EAASkI,EAQX,OANc,IAAVzI,EACFD,EAAInD,MAAMzH,GAAK6K,EAEfD,EAAI/Q,SAGC+Q,EAAIpB,SAGb,SAAS+J,EAAYzQ,EAAM1D,EAAKwL,GAI9B,OAAOyI,EAASvQ,EAAM1D,EAAKwL,GAsB7B,SAAS4I,EAAMC,EAAGC,GAChB3a,KAAK0a,EAAIA,EACT1a,KAAK2a,EAAIA,EAzENhL,KAAKwJ,OACRhE,EAAchD,GAmDhBnQ,EAAGoM,UAAUwM,MAAQ,SAAgBvU,EAAKwL,GACxC,IACInC,EAAM1P,KAAKc,OAASuF,EAAIvF,OAW5B,OAVoB,KAAhBd,KAAKc,QAAgC,KAAfuF,EAAIvF,OACtBqU,EAAYnV,KAAMqG,EAAKwL,GACpBnC,EAAM,GACTyC,EAAWnS,KAAMqG,EAAKwL,GACnBnC,EAAM,KACT4K,EAASta,KAAMqG,EAAKwL,GAEpB2I,EAAWxa,KAAMqG,EAAKwL,IAchC4I,EAAKrM,UAAUyM,QAAU,SAAkBC,GAGzC,IAFA,IAAI5H,EAAI,IAAIzS,MAAMqa,GACd7R,EAAIjH,EAAGoM,UAAU6E,WAAW6H,GAAK,EAC5B1Y,EAAI,EAAGA,EAAI0Y,EAAG1Y,IACrB8Q,EAAE9Q,GAAKpC,KAAK+a,OAAO3Y,EAAG6G,EAAG6R,GAG3B,OAAO5H,GAITuH,EAAKrM,UAAU2M,OAAS,SAAiBL,EAAGzR,EAAG6R,GAC7C,GAAU,IAANJ,GAAWA,IAAMI,EAAI,EAAG,OAAOJ,EAGnC,IADA,IAAIM,EAAK,EACA5Y,EAAI,EAAGA,EAAI6G,EAAG7G,IACrB4Y,IAAW,EAAJN,IAAWzR,EAAI7G,EAAI,EAC1BsY,IAAM,EAGR,OAAOM,GAKTP,EAAKrM,UAAU6M,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GACpE,IAAK,IAAI1Y,EAAI,EAAGA,EAAI0Y,EAAG1Y,IACrBiZ,EAAKjZ,GAAK+Y,EAAID,EAAI9Y,IAClBkZ,EAAKlZ,GAAKgZ,EAAIF,EAAI9Y,KAItBqY,EAAKrM,UAAUmN,UAAY,SAAoBJ,EAAKC,EAAKC,EAAMC,EAAMR,EAAGI,GACtElb,KAAKib,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GAExC,IAAK,IAAIvO,EAAI,EAAGA,EAAIuO,EAAGvO,IAAM,EAM3B,IALA,IAAItD,EAAIsD,GAAK,EAETiP,EAAQ7L,KAAK8L,IAAI,EAAI9L,KAAK+L,GAAKzS,GAC/B0S,EAAQhM,KAAKiM,IAAI,EAAIjM,KAAK+L,GAAKzS,GAE1B4S,EAAI,EAAGA,EAAIf,EAAGe,GAAK5S,EAI1B,IAHA,IAAI6S,EAASN,EACTO,EAASJ,EAEJrL,EAAI,EAAGA,EAAI/D,EAAG+D,IAAK,CAC1B,IAAI0L,EAAKX,EAAKQ,EAAIvL,GACd2L,EAAKX,EAAKO,EAAIvL,GAEd4L,EAAKb,EAAKQ,EAAIvL,EAAI/D,GAClB4P,EAAKb,EAAKO,EAAIvL,EAAI/D,GAElB6P,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELf,EAAKQ,EAAIvL,GAAK0L,EAAKE,EACnBZ,EAAKO,EAAIvL,GAAK2L,EAAKE,EAEnBd,EAAKQ,EAAIvL,EAAI/D,GAAKyP,EAAKE,EACvBZ,EAAKO,EAAIvL,EAAI/D,GAAK0P,EAAKE,EAGnB7L,IAAMrH,IACRmT,EAAKZ,EAAQM,EAASH,EAAQI,EAE9BA,EAASP,EAAQO,EAASJ,EAAQG,EAClCA,EAASM,KAOnB3B,EAAKrM,UAAUiO,YAAc,SAAsB7S,EAAG8S,GACpD,IAAIxB,EAAqB,EAAjBnL,KAAKjC,IAAI4O,EAAG9S,GAChB+S,EAAU,EAAJzB,EACN1Y,EAAI,EACR,IAAK0Y,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/B1Y,IAGF,OAAO,GAAKA,EAAI,EAAIma,GAGtB9B,EAAKrM,UAAUoO,UAAY,SAAoBrB,EAAKC,EAAKN,GACvD,KAAIA,GAAK,GAET,IAAK,IAAI1Y,EAAI,EAAGA,EAAI0Y,EAAI,EAAG1Y,IAAK,CAC9B,IAAI8Q,EAAIiI,EAAI/Y,GAEZ+Y,EAAI/Y,GAAK+Y,EAAIL,EAAI1Y,EAAI,GACrB+Y,EAAIL,EAAI1Y,EAAI,GAAK8Q,EAEjBA,EAAIkI,EAAIhZ,GAERgZ,EAAIhZ,IAAMgZ,EAAIN,EAAI1Y,EAAI,GACtBgZ,EAAIN,EAAI1Y,EAAI,IAAM8Q,IAItBuH,EAAKrM,UAAUqO,aAAe,SAAuBC,EAAI5B,GAEvD,IADA,IAAIhJ,EAAQ,EACH1P,EAAI,EAAGA,EAAI0Y,EAAI,EAAG1Y,IAAK,CAC9B,IAAImO,EAAoC,KAAhCZ,KAAKgN,MAAMD,EAAG,EAAIta,EAAI,GAAK0Y,GACjCnL,KAAKgN,MAAMD,EAAG,EAAIta,GAAK0Y,GACvBhJ,EAEF4K,EAAGta,GAAS,SAAJmO,EAGNuB,EADEvB,EAAI,SACE,EAEAA,EAAI,SAAY,EAI5B,OAAOmM,GAGTjC,EAAKrM,UAAUwO,WAAa,SAAqBF,EAAIhN,EAAKyL,EAAKL,GAE7D,IADA,IAAIhJ,EAAQ,EACH1P,EAAI,EAAGA,EAAIsN,EAAKtN,IACvB0P,GAAyB,EAAR4K,EAAGta,GAEpB+Y,EAAI,EAAI/Y,GAAa,KAAR0P,EAAgBA,KAAkB,GAC/CqJ,EAAI,EAAI/Y,EAAI,GAAa,KAAR0P,EAAgBA,KAAkB,GAIrD,IAAK1P,EAAI,EAAIsN,EAAKtN,EAAI0Y,IAAK1Y,EACzB+Y,EAAI/Y,GAAK,EAGXyL,EAAiB,IAAViE,GACPjE,EAA6B,MAAb,KAARiE,KAGV2I,EAAKrM,UAAUyO,KAAO,SAAe/B,GAEnC,IADA,IAAIgC,EAAK,IAAIrc,MAAMqa,GACV1Y,EAAI,EAAGA,EAAI0Y,EAAG1Y,IACrB0a,EAAG1a,GAAK,EAGV,OAAO0a,GAGTrC,EAAKrM,UAAU2O,KAAO,SAAerC,EAAGC,EAAG9I,GACzC,IAAIiJ,EAAI,EAAI9a,KAAKqc,YAAY3B,EAAE5Z,OAAQ6Z,EAAE7Z,QAErCoa,EAAMlb,KAAK6a,QAAQC,GAEnBkC,EAAIhd,KAAK6c,KAAK/B,GAEdK,EAAM,IAAI1a,MAAMqa,GAChBmC,EAAO,IAAIxc,MAAMqa,GACjBoC,EAAO,IAAIzc,MAAMqa,GAEjBqC,EAAO,IAAI1c,MAAMqa,GACjBsC,EAAQ,IAAI3c,MAAMqa,GAClBuC,EAAQ,IAAI5c,MAAMqa,GAElBwC,EAAOzL,EAAInD,MACf4O,EAAKxc,OAASga,EAEd9a,KAAK4c,WAAWlC,EAAEhM,MAAOgM,EAAE5Z,OAAQqa,EAAKL,GACxC9a,KAAK4c,WAAWjC,EAAEjM,MAAOiM,EAAE7Z,OAAQqc,EAAMrC,GAEzC9a,KAAKub,UAAUJ,EAAK6B,EAAGC,EAAMC,EAAMpC,EAAGI,GACtClb,KAAKub,UAAU4B,EAAMH,EAAGI,EAAOC,EAAOvC,EAAGI,GAEzC,IAAK,IAAI9Y,EAAI,EAAGA,EAAI0Y,EAAG1Y,IAAK,CAC1B,IAAIga,EAAKa,EAAK7a,GAAKgb,EAAMhb,GAAK8a,EAAK9a,GAAKib,EAAMjb,GAC9C8a,EAAK9a,GAAK6a,EAAK7a,GAAKib,EAAMjb,GAAK8a,EAAK9a,GAAKgb,EAAMhb,GAC/C6a,EAAK7a,GAAKga,EAUZ,OAPApc,KAAKwc,UAAUS,EAAMC,EAAMpC,GAC3B9a,KAAKub,UAAU0B,EAAMC,EAAMI,EAAMN,EAAGlC,EAAGI,GACvClb,KAAKwc,UAAUc,EAAMN,EAAGlC,GACxB9a,KAAKyc,aAAaa,EAAMxC,GAExBjJ,EAAIpD,SAAWiM,EAAEjM,SAAWkM,EAAElM,SAC9BoD,EAAI/Q,OAAS4Z,EAAE5Z,OAAS6Z,EAAE7Z,OACnB+Q,EAAIpB,UAIbzO,EAAGoM,UAAUoB,IAAM,SAAcnJ,GAC/B,IAAIwL,EAAM,IAAI7P,EAAG,MAEjB,OADA6P,EAAInD,MAAQ,IAAIjO,MAAMT,KAAKc,OAASuF,EAAIvF,QACjCd,KAAK4a,MAAMvU,EAAKwL,IAIzB7P,EAAGoM,UAAUmP,KAAO,SAAelX,GACjC,IAAIwL,EAAM,IAAI7P,EAAG,MAEjB,OADA6P,EAAInD,MAAQ,IAAIjO,MAAMT,KAAKc,OAASuF,EAAIvF,QACjC0Z,EAAWxa,KAAMqG,EAAKwL,IAI/B7P,EAAGoM,UAAU+K,KAAO,SAAe9S,GACjC,OAAOrG,KAAKmR,QAAQyJ,MAAMvU,EAAKrG,OAGjCgC,EAAGoM,UAAU2C,MAAQ,SAAgB1K,GACnC,IAAImX,EAAWnX,EAAM,EACjBmX,IAAUnX,GAAOA,GAErBwH,EAAsB,kBAARxH,GACdwH,EAAOxH,EAAM,UAIb,IADA,IAAIyL,EAAQ,EACH1P,EAAI,EAAGA,EAAIpC,KAAKc,OAAQsB,IAAK,CACpC,IAAImO,GAAqB,EAAhBvQ,KAAK0O,MAAMtM,IAAUiE,EAC1B+L,GAAU,SAAJ7B,IAA0B,SAARuB,GAC5BA,IAAU,GACVA,GAAUvB,EAAI,SAAa,EAE3BuB,GAASM,IAAO,GAChBpS,KAAK0O,MAAMtM,GAAU,SAALgQ,EAQlB,OALc,IAAVN,IACF9R,KAAK0O,MAAMtM,GAAK0P,EAChB9R,KAAKc,UAGA0c,EAAWxd,KAAK6T,OAAS7T,MAGlCgC,EAAGoM,UAAUvC,KAAO,SAAexF,GACjC,OAAOrG,KAAKmR,QAAQJ,MAAM1K,IAI5BrE,EAAGoM,UAAUqP,IAAM,WACjB,OAAOzd,KAAKwP,IAAIxP,OAIlBgC,EAAGoM,UAAUsP,KAAO,WAClB,OAAO1d,KAAKmZ,KAAKnZ,KAAKmR,UAIxBnP,EAAGoM,UAAU6C,IAAM,SAAc5K,GAC/B,IAAIkK,EA7xCN,SAAqBlK,GAGnB,IAFA,IAAIkK,EAAI,IAAI9P,MAAM4F,EAAI+M,aAEb0B,EAAM,EAAGA,EAAMvE,EAAEzP,OAAQgU,IAAO,CACvC,IAAItE,EAAOsE,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjBvE,EAAEuE,GAAQzO,EAAIqI,MAAM8B,KAASuE,EAAQ,EAGvC,OAAOxE,EAmxCCoN,CAAWtX,GACnB,GAAiB,IAAbkK,EAAEzP,OAAc,OAAO,IAAIkB,EAAG,GAIlC,IADA,IAAI0Q,EAAM1S,KACDoC,EAAI,EAAGA,EAAImO,EAAEzP,QACP,IAATyP,EAAEnO,GADsBA,IAAKsQ,EAAMA,EAAI+K,OAI7C,KAAMrb,EAAImO,EAAEzP,OACV,IAAK,IAAI8c,EAAIlL,EAAI+K,MAAOrb,EAAImO,EAAEzP,OAAQsB,IAAKwb,EAAIA,EAAEH,MAClC,IAATlN,EAAEnO,KAENsQ,EAAMA,EAAIlD,IAAIoO,IAIlB,OAAOlL,GAIT1Q,EAAGoM,UAAUyP,OAAS,SAAiBpW,GACrCoG,EAAuB,kBAATpG,GAAqBA,GAAQ,GAC3C,IAGIrF,EAHAkK,EAAI7E,EAAO,GACX8E,GAAK9E,EAAO6E,GAAK,GACjBwR,EAAa,WAAe,GAAKxR,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAIwF,EAAQ,EAEZ,IAAK1P,EAAI,EAAGA,EAAIpC,KAAKc,OAAQsB,IAAK,CAChC,IAAI2b,EAAW/d,KAAK0O,MAAMtM,GAAK0b,EAC3B5O,GAAsB,EAAhBlP,KAAK0O,MAAMtM,IAAU2b,GAAazR,EAC5CtM,KAAK0O,MAAMtM,GAAK8M,EAAI4C,EACpBA,EAAQiM,IAAc,GAAKzR,EAGzBwF,IACF9R,KAAK0O,MAAMtM,GAAK0P,EAChB9R,KAAKc,UAIT,GAAU,IAANyL,EAAS,CACX,IAAKnK,EAAIpC,KAAKc,OAAS,EAAGsB,GAAK,EAAGA,IAChCpC,KAAK0O,MAAMtM,EAAImK,GAAKvM,KAAK0O,MAAMtM,GAGjC,IAAKA,EAAI,EAAGA,EAAImK,EAAGnK,IACjBpC,KAAK0O,MAAMtM,GAAK,EAGlBpC,KAAKc,QAAUyL,EAGjB,OAAOvM,KAAKyQ,UAGdzO,EAAGoM,UAAU4P,MAAQ,SAAgBvW,GAGnC,OADAoG,EAAyB,IAAlB7N,KAAKyO,UACLzO,KAAK6d,OAAOpW,IAMrBzF,EAAGoM,UAAU6P,OAAS,SAAiBxW,EAAMyW,EAAMC,GAEjD,IAAIC,EADJvQ,EAAuB,kBAATpG,GAAqBA,GAAQ,GAGzC2W,EADEF,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAI5R,EAAI7E,EAAO,GACX8E,EAAIoD,KAAKC,KAAKnI,EAAO6E,GAAK,GAAItM,KAAKc,QACnCud,EAAO,SAAc,WAAc/R,GAAMA,EACzCgS,EAAcH,EAMlB,GAJAC,GAAK7R,EACL6R,EAAIzO,KAAKjC,IAAI,EAAG0Q,GAGZE,EAAa,CACf,IAAK,IAAIlc,EAAI,EAAGA,EAAImK,EAAGnK,IACrBkc,EAAY5P,MAAMtM,GAAKpC,KAAK0O,MAAMtM,GAEpCkc,EAAYxd,OAASyL,EAGvB,GAAU,IAANA,QAEG,GAAIvM,KAAKc,OAASyL,EAEvB,IADAvM,KAAKc,QAAUyL,EACVnK,EAAI,EAAGA,EAAIpC,KAAKc,OAAQsB,IAC3BpC,KAAK0O,MAAMtM,GAAKpC,KAAK0O,MAAMtM,EAAImK,QAGjCvM,KAAK0O,MAAM,GAAK,EAChB1O,KAAKc,OAAS,EAGhB,IAAIgR,EAAQ,EACZ,IAAK1P,EAAIpC,KAAKc,OAAS,EAAGsB,GAAK,IAAgB,IAAV0P,GAAe1P,GAAKgc,GAAIhc,IAAK,CAChE,IAAI0O,EAAuB,EAAhB9Q,KAAK0O,MAAMtM,GACtBpC,KAAK0O,MAAMtM,GAAM0P,GAAU,GAAKxF,EAAOwE,IAASxE,EAChDwF,EAAQhB,EAAOuN,EAajB,OATIC,GAAyB,IAAVxM,IACjBwM,EAAY5P,MAAM4P,EAAYxd,UAAYgR,GAGxB,IAAhB9R,KAAKc,SACPd,KAAK0O,MAAM,GAAK,EAChB1O,KAAKc,OAAS,GAGTd,KAAKyQ,UAGdzO,EAAGoM,UAAUmQ,MAAQ,SAAgB9W,EAAMyW,EAAMC,GAG/C,OADAtQ,EAAyB,IAAlB7N,KAAKyO,UACLzO,KAAKie,OAAOxW,EAAMyW,EAAMC,IAIjCnc,EAAGoM,UAAUoQ,KAAO,SAAe/W,GACjC,OAAOzH,KAAKmR,QAAQ6M,MAAMvW,IAG5BzF,EAAGoM,UAAUqQ,MAAQ,SAAgBhX,GACnC,OAAOzH,KAAKmR,QAAQ0M,OAAOpW,IAI7BzF,EAAGoM,UAAUsQ,KAAO,SAAejX,GACjC,OAAOzH,KAAKmR,QAAQoN,MAAM9W,IAG5BzF,EAAGoM,UAAUuQ,MAAQ,SAAgBlX,GACnC,OAAOzH,KAAKmR,QAAQ8M,OAAOxW,IAI7BzF,EAAGoM,UAAUuF,MAAQ,SAAgBmB,GACnCjH,EAAsB,kBAARiH,GAAoBA,GAAO,GACzC,IAAIxI,EAAIwI,EAAM,GACVvI,GAAKuI,EAAMxI,GAAK,GAChBsR,EAAI,GAAKtR,EAGb,QAAItM,KAAKc,QAAUyL,OAGXvM,KAAK0O,MAAMnC,GAELqR,IAIhB5b,EAAGoM,UAAUwQ,OAAS,SAAiBnX,GACrCoG,EAAuB,kBAATpG,GAAqBA,GAAQ,GAC3C,IAAI6E,EAAI7E,EAAO,GACX8E,GAAK9E,EAAO6E,GAAK,GAIrB,GAFAuB,EAAyB,IAAlB7N,KAAKyO,SAAgB,2CAExBzO,KAAKc,QAAUyL,EACjB,OAAOvM,KAQT,GALU,IAANsM,GACFC,IAEFvM,KAAKc,OAAS6O,KAAKC,IAAIrD,EAAGvM,KAAKc,QAErB,IAANwL,EAAS,CACX,IAAI+R,EAAO,SAAc,WAAc/R,GAAMA,EAC7CtM,KAAK0O,MAAM1O,KAAKc,OAAS,IAAMud,EAGjC,OAAOre,KAAKyQ,UAIdzO,EAAGoM,UAAUyQ,MAAQ,SAAgBpX,GACnC,OAAOzH,KAAKmR,QAAQyN,OAAOnX,IAI7BzF,EAAGoM,UAAUsF,MAAQ,SAAgBrN,GAGnC,OAFAwH,EAAsB,kBAARxH,GACdwH,EAAOxH,EAAM,UACTA,EAAM,EAAUrG,KAAK8e,OAAOzY,GAGV,IAAlBrG,KAAKyO,SACa,IAAhBzO,KAAKc,SAAiC,EAAhBd,KAAK0O,MAAM,KAAWrI,GAC9CrG,KAAK0O,MAAM,GAAKrI,GAAuB,EAAhBrG,KAAK0O,MAAM,IAClC1O,KAAKyO,SAAW,EACTzO,OAGTA,KAAKyO,SAAW,EAChBzO,KAAK8e,MAAMzY,GACXrG,KAAKyO,SAAW,EACTzO,MAIFA,KAAKgR,OAAO3K,IAGrBrE,EAAGoM,UAAU4C,OAAS,SAAiB3K,GACrCrG,KAAK0O,MAAM,IAAMrI,EAGjB,IAAK,IAAIjE,EAAI,EAAGA,EAAIpC,KAAKc,QAAUd,KAAK0O,MAAMtM,IAAM,SAAWA,IAC7DpC,KAAK0O,MAAMtM,IAAM,SACbA,IAAMpC,KAAKc,OAAS,EACtBd,KAAK0O,MAAMtM,EAAI,GAAK,EAEpBpC,KAAK0O,MAAMtM,EAAI,KAKnB,OAFApC,KAAKc,OAAS6O,KAAKjC,IAAI1N,KAAKc,OAAQsB,EAAI,GAEjCpC,MAITgC,EAAGoM,UAAU0Q,MAAQ,SAAgBzY,GAGnC,GAFAwH,EAAsB,kBAARxH,GACdwH,EAAOxH,EAAM,UACTA,EAAM,EAAG,OAAOrG,KAAK0T,OAAOrN,GAEhC,GAAsB,IAAlBrG,KAAKyO,SAIP,OAHAzO,KAAKyO,SAAW,EAChBzO,KAAK0T,MAAMrN,GACXrG,KAAKyO,SAAW,EACTzO,KAKT,GAFAA,KAAK0O,MAAM,IAAMrI,EAEG,IAAhBrG,KAAKc,QAAgBd,KAAK0O,MAAM,GAAK,EACvC1O,KAAK0O,MAAM,IAAM1O,KAAK0O,MAAM,GAC5B1O,KAAKyO,SAAW,OAGhB,IAAK,IAAIrM,EAAI,EAAGA,EAAIpC,KAAKc,QAAUd,KAAK0O,MAAMtM,GAAK,EAAGA,IACpDpC,KAAK0O,MAAMtM,IAAM,SACjBpC,KAAK0O,MAAMtM,EAAI,IAAM,EAIzB,OAAOpC,KAAKyQ,UAGdzO,EAAGoM,UAAUtC,KAAO,SAAezF,GACjC,OAAOrG,KAAKmR,QAAQuC,MAAMrN,IAG5BrE,EAAGoM,UAAU1C,KAAO,SAAerF,GACjC,OAAOrG,KAAKmR,QAAQ2N,MAAMzY,IAG5BrE,EAAGoM,UAAU2Q,KAAO,WAGlB,OAFA/e,KAAKyO,SAAW,EAETzO,MAGTgC,EAAGoM,UAAUoF,IAAM,WACjB,OAAOxT,KAAKmR,QAAQ4N,QAGtB/c,EAAGoM,UAAU4Q,aAAe,SAAuB3Y,EAAKmJ,EAAKsD,GAC3D,IACI1Q,EAIAmO,EALAb,EAAMrJ,EAAIvF,OAASgS,EAGvB9S,KAAKoR,QAAQ1B,GAGb,IAAIoC,EAAQ,EACZ,IAAK1P,EAAI,EAAGA,EAAIiE,EAAIvF,OAAQsB,IAAK,CAC/BmO,GAA6B,EAAxBvQ,KAAK0O,MAAMtM,EAAI0Q,IAAchB,EAClC,IAAIrM,GAAwB,EAAfY,EAAIqI,MAAMtM,IAAUoN,EAEjCsC,IADAvB,GAAa,SAAR9K,IACS,KAAQA,EAAQ,SAAa,GAC3CzF,KAAK0O,MAAMtM,EAAI0Q,GAAa,SAAJvC,EAE1B,KAAOnO,EAAIpC,KAAKc,OAASgS,EAAO1Q,IAE9B0P,GADAvB,GAA6B,EAAxBvQ,KAAK0O,MAAMtM,EAAI0Q,IAAchB,IACrB,GACb9R,KAAK0O,MAAMtM,EAAI0Q,GAAa,SAAJvC,EAG1B,GAAc,IAAVuB,EAAa,OAAO9R,KAAKyQ,SAK7B,IAFA5C,GAAkB,IAAXiE,GACPA,EAAQ,EACH1P,EAAI,EAAGA,EAAIpC,KAAKc,OAAQsB,IAE3B0P,GADAvB,IAAsB,EAAhBvQ,KAAK0O,MAAMtM,IAAU0P,IACd,GACb9R,KAAK0O,MAAMtM,GAAS,SAAJmO,EAIlB,OAFAvQ,KAAKyO,SAAW,EAETzO,KAAKyQ,UAGdzO,EAAGoM,UAAU6Q,SAAW,SAAmB5Y,EAAK6Y,GAC9C,IAAIpM,GAAQ9S,KAAKc,OAASuF,EAAIvF,QAE1B8E,EAAI5F,KAAKmR,QACT1B,EAAIpJ,EAGJ8Y,EAA8B,EAAxB1P,EAAEf,MAAMe,EAAE3O,OAAS,GAGf,KADdgS,EAAQ,GADM9S,KAAKiT,WAAWkM,MAG5B1P,EAAIA,EAAEgP,MAAM3L,GACZlN,EAAEiY,OAAO/K,GACTqM,EAA8B,EAAxB1P,EAAEf,MAAMe,EAAE3O,OAAS,IAI3B,IACI8c,EADAtB,EAAI1W,EAAE9E,OAAS2O,EAAE3O,OAGrB,GAAa,QAAToe,EAAgB,EAClBtB,EAAI,IAAI5b,EAAG,OACTlB,OAASwb,EAAI,EACfsB,EAAElP,MAAQ,IAAIjO,MAAMmd,EAAE9c,QACtB,IAAK,IAAIsB,EAAI,EAAGA,EAAIwb,EAAE9c,OAAQsB,IAC5Bwb,EAAElP,MAAMtM,GAAK,EAIjB,IAAIgd,EAAOxZ,EAAEuL,QAAQ6N,aAAavP,EAAG,EAAG6M,GAClB,IAAlB8C,EAAK3Q,WACP7I,EAAIwZ,EACAxB,IACFA,EAAElP,MAAM4N,GAAK,IAIjB,IAAK,IAAIhM,EAAIgM,EAAI,EAAGhM,GAAK,EAAGA,IAAK,CAC/B,IAAI+O,EAAmC,UAAL,EAAxBzZ,EAAE8I,MAAMe,EAAE3O,OAASwP,KACE,EAA5B1K,EAAE8I,MAAMe,EAAE3O,OAASwP,EAAI,IAO1B,IAHA+O,EAAK1P,KAAKC,IAAKyP,EAAKF,EAAO,EAAG,UAE9BvZ,EAAEoZ,aAAavP,EAAG4P,EAAI/O,GACA,IAAf1K,EAAE6I,UACP4Q,IACAzZ,EAAE6I,SAAW,EACb7I,EAAEoZ,aAAavP,EAAG,EAAGa,GAChB1K,EAAEzE,WACLyE,EAAE6I,UAAY,GAGdmP,IACFA,EAAElP,MAAM4B,GAAK+O,GAajB,OAVIzB,GACFA,EAAEnN,SAEJ7K,EAAE6K,SAGW,QAATyO,GAA4B,IAAVpM,GACpBlN,EAAEqY,OAAOnL,GAGJ,CACLwM,IAAK1B,GAAK,KACV/M,IAAKjL,IAQT5D,EAAGoM,UAAUmR,OAAS,SAAiBlZ,EAAK6Y,EAAMM,GAGhD,OAFA3R,GAAQxH,EAAIlF,UAERnB,KAAKmB,SACA,CACLme,IAAK,IAAItd,EAAG,GACZ6O,IAAK,IAAI7O,EAAG,IAKM,IAAlBhC,KAAKyO,UAAmC,IAAjBpI,EAAIoI,UAC7BiE,EAAM1S,KAAK8T,MAAMyL,OAAOlZ,EAAK6Y,GAEhB,QAATA,IACFI,EAAM5M,EAAI4M,IAAIxL,OAGH,QAAToL,IACFrO,EAAM6B,EAAI7B,IAAIiD,MACV0L,GAA6B,IAAjB3O,EAAIpC,UAClBoC,EAAImE,KAAK3O,IAIN,CACLiZ,IAAKA,EACLzO,IAAKA,IAIa,IAAlB7Q,KAAKyO,UAAmC,IAAjBpI,EAAIoI,UAC7BiE,EAAM1S,KAAKuf,OAAOlZ,EAAIyN,MAAOoL,GAEhB,QAATA,IACFI,EAAM5M,EAAI4M,IAAIxL,OAGT,CACLwL,IAAKA,EACLzO,IAAK6B,EAAI7B,MAI0B,KAAlC7Q,KAAKyO,SAAWpI,EAAIoI,WACvBiE,EAAM1S,KAAK8T,MAAMyL,OAAOlZ,EAAIyN,MAAOoL,GAEtB,QAATA,IACFrO,EAAM6B,EAAI7B,IAAIiD,MACV0L,GAA6B,IAAjB3O,EAAIpC,UAClBoC,EAAIoE,KAAK5O,IAIN,CACLiZ,IAAK5M,EAAI4M,IACTzO,IAAKA,IAOLxK,EAAIvF,OAASd,KAAKc,QAAUd,KAAKoN,IAAI/G,GAAO,EACvC,CACLiZ,IAAK,IAAItd,EAAG,GACZ6O,IAAK7Q,MAKU,IAAfqG,EAAIvF,OACO,QAAToe,EACK,CACLI,IAAKtf,KAAKyf,KAAKpZ,EAAIqI,MAAM,IACzBmC,IAAK,MAII,QAATqO,EACK,CACLI,IAAK,KACLzO,IAAK,IAAI7O,EAAGhC,KAAKiS,MAAM5L,EAAIqI,MAAM,MAI9B,CACL4Q,IAAKtf,KAAKyf,KAAKpZ,EAAIqI,MAAM,IACzBmC,IAAK,IAAI7O,EAAGhC,KAAKiS,MAAM5L,EAAIqI,MAAM,MAI9B1O,KAAKif,SAAS5Y,EAAK6Y,GAlF1B,IAAII,EAAKzO,EAAK6B,GAsFhB1Q,EAAGoM,UAAUkR,IAAM,SAAcjZ,GAC/B,OAAOrG,KAAKuf,OAAOlZ,EAAK,OAAO,GAAOiZ,KAIxCtd,EAAGoM,UAAUyC,IAAM,SAAcxK,GAC/B,OAAOrG,KAAKuf,OAAOlZ,EAAK,OAAO,GAAOwK,KAGxC7O,EAAGoM,UAAUsR,KAAO,SAAerZ,GACjC,OAAOrG,KAAKuf,OAAOlZ,EAAK,OAAO,GAAMwK,KAIvC7O,EAAGoM,UAAUuR,SAAW,SAAmBtZ,GACzC,IAAIuZ,EAAK5f,KAAKuf,OAAOlZ,GAGrB,GAAIuZ,EAAG/O,IAAI1P,SAAU,OAAOye,EAAGN,IAE/B,IAAIzO,EAA0B,IAApB+O,EAAGN,IAAI7Q,SAAiBmR,EAAG/O,IAAIoE,KAAK5O,GAAOuZ,EAAG/O,IAEpDgP,EAAOxZ,EAAIsY,MAAM,GACjBmB,EAAKzZ,EAAI0Z,MAAM,GACf3S,EAAMyD,EAAIzD,IAAIyS,GAGlB,OAAIzS,EAAM,GAAa,IAAP0S,GAAoB,IAAR1S,EAAmBwS,EAAGN,IAGvB,IAApBM,EAAGN,IAAI7Q,SAAiBmR,EAAGN,IAAIR,MAAM,GAAKc,EAAGN,IAAI5L,MAAM,IAGhE1R,EAAGoM,UAAU6D,MAAQ,SAAgB5L,GACnC,IAAImX,EAAWnX,EAAM,EACjBmX,IAAUnX,GAAOA,GAErBwH,EAAOxH,GAAO,UAId,IAHA,IAAIwV,GAAK,GAAK,IAAMxV,EAEhB2Z,EAAM,EACD5d,EAAIpC,KAAKc,OAAS,EAAGsB,GAAK,EAAGA,IACpC4d,GAAOnE,EAAImE,GAAuB,EAAhBhgB,KAAK0O,MAAMtM,KAAWiE,EAG1C,OAAOmX,GAAYwC,EAAMA,GAI3Bhe,EAAGoM,UAAU6R,KAAO,SAAe5Z,GACjC,OAAOrG,KAAKiS,MAAM5L,IAIpBrE,EAAGoM,UAAU8D,MAAQ,SAAgB7L,GACnC,IAAImX,EAAWnX,EAAM,EACjBmX,IAAUnX,GAAOA,GAErBwH,EAAOxH,GAAO,UAGd,IADA,IAAIyL,EAAQ,EACH1P,EAAIpC,KAAKc,OAAS,EAAGsB,GAAK,EAAGA,IAAK,CACzC,IAAImO,GAAqB,EAAhBvQ,KAAK0O,MAAMtM,IAAkB,SAAR0P,EAC9B9R,KAAK0O,MAAMtM,GAAMmO,EAAIlK,EAAO,EAC5ByL,EAAQvB,EAAIlK,EAId,OADArG,KAAKyQ,SACE+M,EAAWxd,KAAK6T,OAAS7T,MAGlCgC,EAAGoM,UAAUqR,KAAO,SAAepZ,GACjC,OAAOrG,KAAKmR,QAAQe,MAAM7L,IAG5BrE,EAAGoM,UAAU8R,KAAO,SAAerE,GACjChO,EAAsB,IAAfgO,EAAEpN,UACTZ,GAAQgO,EAAE1a,UAEV,IAAIuZ,EAAI1a,KACJ2a,EAAIkB,EAAE1K,QAGRuJ,EADiB,IAAfA,EAAEjM,SACAiM,EAAEgF,KAAK7D,GAEPnB,EAAEvJ,QAaR,IATA,IAAIgP,EAAI,IAAIne,EAAG,GACXoe,EAAI,IAAIpe,EAAG,GAGXqe,EAAI,IAAIre,EAAG,GACXse,EAAI,IAAIte,EAAG,GAEXue,EAAI,EAED7F,EAAE8F,UAAY7F,EAAE6F,UACrB9F,EAAEuD,OAAO,GACTtD,EAAEsD,OAAO,KACPsC,EAMJ,IAHA,IAAIE,EAAK9F,EAAExJ,QACPuP,EAAKhG,EAAEvJ,SAEHuJ,EAAEvZ,UAAU,CAClB,IAAK,IAAIiB,EAAI,EAAGue,EAAK,EAAyB,KAArBjG,EAAEhM,MAAM,GAAKiS,IAAave,EAAI,KAAMA,EAAGue,IAAO,GACvE,GAAIve,EAAI,EAEN,IADAsY,EAAEuD,OAAO7b,GACFA,KAAM,IACP+d,EAAES,SAAWR,EAAEQ,WACjBT,EAAEnL,KAAKyL,GACPL,EAAEnL,KAAKyL,IAGTP,EAAElC,OAAO,GACTmC,EAAEnC,OAAO,GAIb,IAAK,IAAI3N,EAAI,EAAGuQ,EAAK,EAAyB,KAArBlG,EAAEjM,MAAM,GAAKmS,IAAavQ,EAAI,KAAMA,EAAGuQ,IAAO,GACvE,GAAIvQ,EAAI,EAEN,IADAqK,EAAEsD,OAAO3N,GACFA,KAAM,IACP+P,EAAEO,SAAWN,EAAEM,WACjBP,EAAErL,KAAKyL,GACPH,EAAErL,KAAKyL,IAGTL,EAAEpC,OAAO,GACTqC,EAAErC,OAAO,GAITvD,EAAEtN,IAAIuN,IAAM,GACdD,EAAEzF,KAAK0F,GACPwF,EAAElL,KAAKoL,GACPD,EAAEnL,KAAKqL,KAEP3F,EAAE1F,KAAKyF,GACP2F,EAAEpL,KAAKkL,GACPG,EAAErL,KAAKmL,IAIX,MAAO,CACLxa,EAAGya,EACH5Q,EAAG6Q,EACHQ,IAAKnG,EAAEkD,OAAO0C,KAOlBve,EAAGoM,UAAU2S,OAAS,SAAiBlF,GACrChO,EAAsB,IAAfgO,EAAEpN,UACTZ,GAAQgO,EAAE1a,UAEV,IAAIyE,EAAI5F,KACJyP,EAAIoM,EAAE1K,QAGRvL,EADiB,IAAfA,EAAE6I,SACA7I,EAAE8Z,KAAK7D,GAEPjW,EAAEuL,QAQR,IALA,IAuCIuB,EAvCAsO,EAAK,IAAIhf,EAAG,GACZif,EAAK,IAAIjf,EAAG,GAEZkf,EAAQzR,EAAE0B,QAEPvL,EAAEub,KAAK,GAAK,GAAK1R,EAAE0R,KAAK,GAAK,GAAG,CACrC,IAAK,IAAI/e,EAAI,EAAGue,EAAK,EAAyB,KAArB/a,EAAE8I,MAAM,GAAKiS,IAAave,EAAI,KAAMA,EAAGue,IAAO,GACvE,GAAIve,EAAI,EAEN,IADAwD,EAAEqY,OAAO7b,GACFA,KAAM,GACP4e,EAAGJ,SACLI,EAAGhM,KAAKkM,GAGVF,EAAG/C,OAAO,GAId,IAAK,IAAI3N,EAAI,EAAGuQ,EAAK,EAAyB,KAArBpR,EAAEf,MAAM,GAAKmS,IAAavQ,EAAI,KAAMA,EAAGuQ,IAAO,GACvE,GAAIvQ,EAAI,EAEN,IADAb,EAAEwO,OAAO3N,GACFA,KAAM,GACP2Q,EAAGL,SACLK,EAAGjM,KAAKkM,GAGVD,EAAGhD,OAAO,GAIVrY,EAAEwH,IAAIqC,IAAM,GACd7J,EAAEqP,KAAKxF,GACPuR,EAAG/L,KAAKgM,KAERxR,EAAEwF,KAAKrP,GACPqb,EAAGhM,KAAK+L,IAeZ,OATEtO,EADgB,IAAd9M,EAAEub,KAAK,GACHH,EAEAC,GAGAE,KAAK,GAAK,GAChBzO,EAAIsC,KAAK6G,GAGJnJ,GAGT1Q,EAAGoM,UAAU0S,IAAM,SAAcza,GAC/B,GAAIrG,KAAKmB,SAAU,OAAOkF,EAAImN,MAC9B,GAAInN,EAAIlF,SAAU,OAAOnB,KAAKwT,MAE9B,IAAI5N,EAAI5F,KAAKmR,QACT1B,EAAIpJ,EAAI8K,QACZvL,EAAE6I,SAAW,EACbgB,EAAEhB,SAAW,EAGb,IAAK,IAAIqE,EAAQ,EAAGlN,EAAE4a,UAAY/Q,EAAE+Q,SAAU1N,IAC5ClN,EAAEqY,OAAO,GACTxO,EAAEwO,OAAO,GAGX,OAAG,CACD,KAAOrY,EAAE4a,UACP5a,EAAEqY,OAAO,GAEX,KAAOxO,EAAE+Q,UACP/Q,EAAEwO,OAAO,GAGX,IAAI3R,EAAI1G,EAAEwH,IAAIqC,GACd,GAAInD,EAAI,EAAG,CAET,IAAI4G,EAAItN,EACRA,EAAI6J,EACJA,EAAIyD,OACC,GAAU,IAAN5G,GAAyB,IAAdmD,EAAE0R,KAAK,GAC3B,MAGFvb,EAAEqP,KAAKxF,GAGT,OAAOA,EAAEoO,OAAO/K,IAIlB9Q,EAAGoM,UAAUgT,KAAO,SAAe/a,GACjC,OAAOrG,KAAKkgB,KAAK7Z,GAAKT,EAAE8Z,KAAKrZ,IAG/BrE,EAAGoM,UAAUoS,OAAS,WACpB,OAA+B,KAAP,EAAhBxgB,KAAK0O,MAAM,KAGrB1M,EAAGoM,UAAUwS,MAAQ,WACnB,OAA+B,KAAP,EAAhB5gB,KAAK0O,MAAM,KAIrB1M,EAAGoM,UAAU2R,MAAQ,SAAgB1Z,GACnC,OAAOrG,KAAK0O,MAAM,GAAKrI,GAIzBrE,EAAGoM,UAAUiT,MAAQ,SAAgBvM,GACnCjH,EAAsB,kBAARiH,GACd,IAAIxI,EAAIwI,EAAM,GACVvI,GAAKuI,EAAMxI,GAAK,GAChBsR,EAAI,GAAKtR,EAGb,GAAItM,KAAKc,QAAUyL,EAGjB,OAFAvM,KAAKoR,QAAQ7E,EAAI,GACjBvM,KAAK0O,MAAMnC,IAAMqR,EACV5d,KAKT,IADA,IAAI8R,EAAQ8L,EACHxb,EAAImK,EAAa,IAAVuF,GAAe1P,EAAIpC,KAAKc,OAAQsB,IAAK,CACnD,IAAImO,EAAoB,EAAhBvQ,KAAK0O,MAAMtM,GAEnB0P,GADAvB,GAAKuB,KACS,GACdvB,GAAK,SACLvQ,KAAK0O,MAAMtM,GAAKmO,EAMlB,OAJc,IAAVuB,IACF9R,KAAK0O,MAAMtM,GAAK0P,EAChB9R,KAAKc,UAEAd,MAGTgC,EAAGoM,UAAUjN,OAAS,WACpB,OAAuB,IAAhBnB,KAAKc,QAAkC,IAAlBd,KAAK0O,MAAM,IAGzC1M,EAAGoM,UAAU+S,KAAO,SAAe9a,GACjC,IAOIqM,EAPAjE,EAAWpI,EAAM,EAErB,GAAsB,IAAlBrG,KAAKyO,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlBzO,KAAKyO,UAAkBA,EAAU,OAAO,EAK5C,GAHAzO,KAAKyQ,SAGDzQ,KAAKc,OAAS,EAChB4R,EAAM,MACD,CACDjE,IACFpI,GAAOA,GAGTwH,EAAOxH,GAAO,SAAW,qBAEzB,IAAIkK,EAAoB,EAAhBvQ,KAAK0O,MAAM,GACnBgE,EAAMnC,IAAMlK,EAAM,EAAIkK,EAAIlK,GAAO,EAAI,EAEvC,OAAsB,IAAlBrG,KAAKyO,SAA8B,GAANiE,EAC1BA,GAOT1Q,EAAGoM,UAAUhB,IAAM,SAAc/G,GAC/B,GAAsB,IAAlBrG,KAAKyO,UAAmC,IAAjBpI,EAAIoI,SAAgB,OAAQ,EACvD,GAAsB,IAAlBzO,KAAKyO,UAAmC,IAAjBpI,EAAIoI,SAAgB,OAAO,EAEtD,IAAIiE,EAAM1S,KAAKshB,KAAKjb,GACpB,OAAsB,IAAlBrG,KAAKyO,SAA8B,GAANiE,EAC1BA,GAIT1Q,EAAGoM,UAAUkT,KAAO,SAAejb,GAEjC,GAAIrG,KAAKc,OAASuF,EAAIvF,OAAQ,OAAO,EACrC,GAAId,KAAKc,OAASuF,EAAIvF,OAAQ,OAAQ,EAGtC,IADA,IAAI4R,EAAM,EACDtQ,EAAIpC,KAAKc,OAAS,EAAGsB,GAAK,EAAGA,IAAK,CACzC,IAAIwD,EAAoB,EAAhB5F,KAAK0O,MAAMtM,GACfqN,EAAmB,EAAfpJ,EAAIqI,MAAMtM,GAElB,GAAIwD,IAAM6J,EAAV,CACI7J,EAAI6J,EACNiD,GAAO,EACE9M,EAAI6J,IACbiD,EAAM,GAER,OAEF,OAAOA,GAGT1Q,EAAGoM,UAAUmT,IAAM,SAAclb,GAC/B,OAA0B,IAAnBrG,KAAKmhB,KAAK9a,IAGnBrE,EAAGoM,UAAUjB,GAAK,SAAa9G,GAC7B,OAAyB,IAAlBrG,KAAKoN,IAAI/G,IAGlBrE,EAAGoM,UAAUoT,KAAO,SAAenb,GACjC,OAAOrG,KAAKmhB,KAAK9a,IAAQ,GAG3BrE,EAAGoM,UAAUrJ,IAAM,SAAcsB,GAC/B,OAAOrG,KAAKoN,IAAI/G,IAAQ,GAG1BrE,EAAGoM,UAAUqT,IAAM,SAAcpb,GAC/B,OAA2B,IAApBrG,KAAKmhB,KAAK9a,IAGnBrE,EAAGoM,UAAUvN,GAAK,SAAawF,GAC7B,OAA0B,IAAnBrG,KAAKoN,IAAI/G,IAGlBrE,EAAGoM,UAAUsT,KAAO,SAAerb,GACjC,OAAOrG,KAAKmhB,KAAK9a,IAAQ,GAG3BrE,EAAGoM,UAAUpJ,IAAM,SAAcqB,GAC/B,OAAOrG,KAAKoN,IAAI/G,IAAQ,GAG1BrE,EAAGoM,UAAUlC,IAAM,SAAc7F,GAC/B,OAA0B,IAAnBrG,KAAKmhB,KAAK9a,IAGnBrE,EAAGoM,UAAUuT,GAAK,SAAatb,GAC7B,OAAyB,IAAlBrG,KAAKoN,IAAI/G,IAOlBrE,EAAG2M,IAAM,SAActI,GACrB,OAAO,IAAIub,EAAIvb,IAGjBrE,EAAGoM,UAAUyT,MAAQ,SAAgBC,GAGnC,OAFAjU,GAAQ7N,KAAK2O,IAAK,yCAClBd,EAAyB,IAAlB7N,KAAKyO,SAAgB,iCACrBqT,EAAIC,UAAU/hB,MAAMgiB,UAAUF,IAGvC9f,EAAGoM,UAAU6T,QAAU,WAErB,OADApU,EAAO7N,KAAK2O,IAAK,wDACV3O,KAAK2O,IAAIuT,YAAYliB,OAG9BgC,EAAGoM,UAAU4T,UAAY,SAAoBF,GAE3C,OADA9hB,KAAK2O,IAAMmT,EACJ9hB,MAGTgC,EAAGoM,UAAU+T,SAAW,SAAmBL,GAEzC,OADAjU,GAAQ7N,KAAK2O,IAAK,yCACX3O,KAAKgiB,UAAUF,IAGxB9f,EAAGoM,UAAUgU,OAAS,SAAiB/b,GAErC,OADAwH,EAAO7N,KAAK2O,IAAK,sCACV3O,KAAK2O,IAAIuG,IAAIlV,KAAMqG,IAG5BrE,EAAGoM,UAAUiU,QAAU,SAAkBhc,GAEvC,OADAwH,EAAO7N,KAAK2O,IAAK,uCACV3O,KAAK2O,IAAIqG,KAAKhV,KAAMqG,IAG7BrE,EAAGoM,UAAUkU,OAAS,SAAiBjc,GAErC,OADAwH,EAAO7N,KAAK2O,IAAK,sCACV3O,KAAK2O,IAAI/C,IAAI5L,KAAMqG,IAG5BrE,EAAGoM,UAAUmU,QAAU,SAAkBlc,GAEvC,OADAwH,EAAO7N,KAAK2O,IAAK,uCACV3O,KAAK2O,IAAIsG,KAAKjV,KAAMqG,IAG7BrE,EAAGoM,UAAUoU,OAAS,SAAiBnc,GAErC,OADAwH,EAAO7N,KAAK2O,IAAK,sCACV3O,KAAK2O,IAAI8T,IAAIziB,KAAMqG,IAG5BrE,EAAGoM,UAAUsU,OAAS,SAAiBrc,GAGrC,OAFAwH,EAAO7N,KAAK2O,IAAK,sCACjB3O,KAAK2O,IAAIgU,SAAS3iB,KAAMqG,GACjBrG,KAAK2O,IAAIa,IAAIxP,KAAMqG,IAG5BrE,EAAGoM,UAAUwU,QAAU,SAAkBvc,GAGvC,OAFAwH,EAAO7N,KAAK2O,IAAK,sCACjB3O,KAAK2O,IAAIgU,SAAS3iB,KAAMqG,GACjBrG,KAAK2O,IAAIwK,KAAKnZ,KAAMqG,IAG7BrE,EAAGoM,UAAUyU,OAAS,WAGpB,OAFAhV,EAAO7N,KAAK2O,IAAK,sCACjB3O,KAAK2O,IAAImU,SAAS9iB,MACXA,KAAK2O,IAAI8O,IAAIzd,OAGtBgC,EAAGoM,UAAU2U,QAAU,WAGrB,OAFAlV,EAAO7N,KAAK2O,IAAK,uCACjB3O,KAAK2O,IAAImU,SAAS9iB,MACXA,KAAK2O,IAAI+O,KAAK1d,OAIvBgC,EAAGoM,UAAU4U,QAAU,WAGrB,OAFAnV,EAAO7N,KAAK2O,IAAK,uCACjB3O,KAAK2O,IAAImU,SAAS9iB,MACXA,KAAK2O,IAAIsU,KAAKjjB,OAGvBgC,EAAGoM,UAAU8U,QAAU,WAGrB,OAFArV,EAAO7N,KAAK2O,IAAK,uCACjB3O,KAAK2O,IAAImU,SAAS9iB,MACXA,KAAK2O,IAAIyS,KAAKphB,OAIvBgC,EAAGoM,UAAU+U,OAAS,WAGpB,OAFAtV,EAAO7N,KAAK2O,IAAK,sCACjB3O,KAAK2O,IAAImU,SAAS9iB,MACXA,KAAK2O,IAAImF,IAAI9T,OAGtBgC,EAAGoM,UAAUgV,OAAS,SAAiB/c,GAGrC,OAFAwH,EAAO7N,KAAK2O,MAAQtI,EAAIsI,IAAK,qBAC7B3O,KAAK2O,IAAImU,SAAS9iB,MACXA,KAAK2O,IAAIsC,IAAIjR,KAAMqG,IAI5B,IAAIgd,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQ5Y,EAAM+Q,GAErB7b,KAAK8K,KAAOA,EACZ9K,KAAK6b,EAAI,IAAI7Z,EAAG6Z,EAAG,IACnB7b,KAAKwJ,EAAIxJ,KAAK6b,EAAEzI,YAChBpT,KAAKiH,EAAI,IAAIjF,EAAG,GAAG6b,OAAO7d,KAAKwJ,GAAGyL,KAAKjV,KAAK6b,GAE5C7b,KAAK2jB,IAAM3jB,KAAK4jB,OAiDlB,SAASC,IACPH,EAAOI,KACL9jB,KACA,OACA,2EA+DJ,SAAS+jB,IACPL,EAAOI,KACL9jB,KACA,OACA,kEAIJ,SAASgkB,IACPN,EAAOI,KACL9jB,KACA,OACA,yDAIJ,SAASikB,IAEPP,EAAOI,KACL9jB,KACA,QACA,uEA8CJ,SAAS4hB,EAAKtF,GACZ,GAAiB,kBAANA,EAAgB,CACzB,IAAI4H,EAAQliB,EAAGmiB,OAAO7H,GACtBtc,KAAKsc,EAAI4H,EAAMrI,EACf7b,KAAKkkB,MAAQA,OAEbrW,EAAOyO,EAAEiF,IAAI,GAAI,kCACjBvhB,KAAKsc,EAAIA,EACTtc,KAAKkkB,MAAQ,KAoOjB,SAASE,EAAM9H,GACbsF,EAAIkC,KAAK9jB,KAAMsc,GAEftc,KAAK8S,MAAQ9S,KAAKsc,EAAElJ,YAChBpT,KAAK8S,MAAQ,KAAO,IACtB9S,KAAK8S,OAAS,GAAM9S,KAAK8S,MAAQ,IAGnC9S,KAAKsM,EAAI,IAAItK,EAAG,GAAG6b,OAAO7d,KAAK8S,OAC/B9S,KAAK8f,GAAK9f,KAAKqkB,KAAKrkB,KAAKsM,EAAEmR,OAC3Bzd,KAAKskB,KAAOtkB,KAAKsM,EAAEyU,OAAO/gB,KAAKsc,GAE/Btc,KAAKukB,KAAOvkB,KAAKskB,KAAK9U,IAAIxP,KAAKsM,GAAGwS,MAAM,GAAGQ,IAAItf,KAAKsc,GACpDtc,KAAKukB,KAAOvkB,KAAKukB,KAAK7E,KAAK1f,KAAKsM,GAChCtM,KAAKukB,KAAOvkB,KAAKsM,EAAEV,IAAI5L,KAAKukB,MA9a9Bb,EAAOtV,UAAUwV,KAAO,WACtB,IAAID,EAAM,IAAI3hB,EAAG,MAEjB,OADA2hB,EAAIjV,MAAQ,IAAIjO,MAAMkP,KAAKU,KAAKrQ,KAAKwJ,EAAI,KAClCma,GAGTD,EAAOtV,UAAUoW,QAAU,SAAkBne,GAG3C,IACIoe,EADAnY,EAAIjG,EAGR,GACErG,KAAK0kB,MAAMpY,EAAGtM,KAAK2jB,KAGnBc,GADAnY,GADAA,EAAItM,KAAK2kB,MAAMrY,IACT0I,KAAKhV,KAAK2jB,MACPvQ,kBACFqR,EAAOzkB,KAAKwJ,GAErB,IAAI4D,EAAMqX,EAAOzkB,KAAKwJ,GAAK,EAAI8C,EAAEgV,KAAKthB,KAAK6b,GAgB3C,OAfY,IAARzO,GACFd,EAAEoC,MAAM,GAAK,EACbpC,EAAExL,OAAS,GACFsM,EAAM,EACfd,EAAE2I,KAAKjV,KAAK6b,QAEIxb,IAAZiM,EAAEsY,MAEJtY,EAAEsY,QAGFtY,EAAEmE,SAICnE,GAGToX,EAAOtV,UAAUsW,MAAQ,SAAgBzc,EAAO4J,GAC9C5J,EAAMgW,OAAOje,KAAKwJ,EAAG,EAAGqI,IAG1B6R,EAAOtV,UAAUuW,MAAQ,SAAgBte,GACvC,OAAOA,EAAI8S,KAAKnZ,KAAKiH,IASvB8G,EAAS8V,EAAMH,GAEfG,EAAKzV,UAAUsW,MAAQ,SAAgBzc,EAAOuF,GAK5C,IAHA,IAAI6Q,EAAO,QAEPwG,EAASlV,KAAKC,IAAI3H,EAAMnH,OAAQ,GAC3BsB,EAAI,EAAGA,EAAIyiB,EAAQziB,IAC1BoL,EAAOkB,MAAMtM,GAAK6F,EAAMyG,MAAMtM,GAIhC,GAFAoL,EAAO1M,OAAS+jB,EAEZ5c,EAAMnH,QAAU,EAGlB,OAFAmH,EAAMyG,MAAM,GAAK,OACjBzG,EAAMnH,OAAS,GAKjB,IAAIgkB,EAAO7c,EAAMyG,MAAM,GAGvB,IAFAlB,EAAOkB,MAAMlB,EAAO1M,UAAYgkB,EAAOzG,EAElCjc,EAAI,GAAIA,EAAI6F,EAAMnH,OAAQsB,IAAK,CAClC,IAAI2iB,EAAwB,EAAjB9c,EAAMyG,MAAMtM,GACvB6F,EAAMyG,MAAMtM,EAAI,KAAQ2iB,EAAO1G,IAAS,EAAMyG,IAAS,GACvDA,EAAOC,EAETD,KAAU,GACV7c,EAAMyG,MAAMtM,EAAI,IAAM0iB,EACT,IAATA,GAAc7c,EAAMnH,OAAS,GAC/BmH,EAAMnH,QAAU,GAEhBmH,EAAMnH,QAAU,GAIpB+iB,EAAKzV,UAAUuW,MAAQ,SAAgBte,GAErCA,EAAIqI,MAAMrI,EAAIvF,QAAU,EACxBuF,EAAIqI,MAAMrI,EAAIvF,OAAS,GAAK,EAC5BuF,EAAIvF,QAAU,EAId,IADA,IAAIsR,EAAK,EACAhQ,EAAI,EAAGA,EAAIiE,EAAIvF,OAAQsB,IAAK,CACnC,IAAImO,EAAmB,EAAflK,EAAIqI,MAAMtM,GAClBgQ,GAAU,IAAJ7B,EACNlK,EAAIqI,MAAMtM,GAAU,SAALgQ,EACfA,EAAS,GAAJ7B,GAAa6B,EAAK,SAAa,GAUtC,OANkC,IAA9B/L,EAAIqI,MAAMrI,EAAIvF,OAAS,KACzBuF,EAAIvF,SAC8B,IAA9BuF,EAAIqI,MAAMrI,EAAIvF,OAAS,IACzBuF,EAAIvF,UAGDuF,GAST0H,EAASgW,EAAML,GAQf3V,EAASiW,EAAMN,GASf3V,EAASkW,EAAQP,GAEjBO,EAAO7V,UAAUuW,MAAQ,SAAgBte,GAGvC,IADA,IAAIyL,EAAQ,EACH1P,EAAI,EAAGA,EAAIiE,EAAIvF,OAAQsB,IAAK,CACnC,IAAIiR,EAA0B,IAAL,EAAfhN,EAAIqI,MAAMtM,IAAiB0P,EACjCM,EAAU,SAALiB,EACTA,KAAQ,GAERhN,EAAIqI,MAAMtM,GAAKgQ,EACfN,EAAQuB,EAKV,OAHc,IAAVvB,IACFzL,EAAIqI,MAAMrI,EAAIvF,UAAYgR,GAErBzL,GAITrE,EAAGmiB,OAAS,SAAgBrZ,GAE1B,GAAIuY,EAAOvY,GAAO,OAAOuY,EAAOvY,GAEhC,IAAIoZ,EACJ,GAAa,SAATpZ,EACFoZ,EAAQ,IAAIL,OACP,GAAa,SAAT/Y,EACToZ,EAAQ,IAAIH,OACP,GAAa,SAATjZ,EACToZ,EAAQ,IAAIF,MACP,IAAa,WAATlZ,EAGT,MAAM,IAAInK,MAAM,iBAAmBmK,GAFnCoZ,EAAQ,IAAID,EAMd,OAFAZ,EAAOvY,GAAQoZ,EAERA,GAkBTtC,EAAIxT,UAAU0U,SAAW,SAAmBld,GAC1CiI,EAAsB,IAAfjI,EAAE6I,SAAgB,iCACzBZ,EAAOjI,EAAE+I,IAAK,oCAGhBiT,EAAIxT,UAAUuU,SAAW,SAAmB/c,EAAG6J,GAC7C5B,EAAqC,KAA7BjI,EAAE6I,SAAWgB,EAAEhB,UAAiB,iCACxCZ,EAAOjI,EAAE+I,KAAO/I,EAAE+I,MAAQc,EAAEd,IAC1B,oCAGJiT,EAAIxT,UAAUiW,KAAO,SAAeze,GAClC,OAAI5F,KAAKkkB,MAAclkB,KAAKkkB,MAAMM,QAAQ5e,GAAGoc,UAAUhiB,OAEvD6P,EAAKjK,EAAGA,EAAE8Z,KAAK1f,KAAKsc,GAAG0F,UAAUhiB,OAC1B4F,IAGTgc,EAAIxT,UAAU0F,IAAM,SAAclO,GAChC,OAAIA,EAAEzE,SACGyE,EAAEuL,QAGJnR,KAAKsc,EAAE1Q,IAAIhG,GAAGoc,UAAUhiB,OAGjC4hB,EAAIxT,UAAU8G,IAAM,SAActP,EAAG6J,GACnCzP,KAAK2iB,SAAS/c,EAAG6J,GAEjB,IAAIiD,EAAM9M,EAAEsP,IAAIzF,GAIhB,OAHIiD,EAAItF,IAAIpN,KAAKsc,IAAM,GACrB5J,EAAIuC,KAAKjV,KAAKsc,GAET5J,EAAIsP,UAAUhiB,OAGvB4hB,EAAIxT,UAAU4G,KAAO,SAAepP,EAAG6J,GACrCzP,KAAK2iB,SAAS/c,EAAG6J,GAEjB,IAAIiD,EAAM9M,EAAEoP,KAAKvF,GAIjB,OAHIiD,EAAItF,IAAIpN,KAAKsc,IAAM,GACrB5J,EAAIuC,KAAKjV,KAAKsc,GAET5J,GAGTkP,EAAIxT,UAAUxC,IAAM,SAAchG,EAAG6J,GACnCzP,KAAK2iB,SAAS/c,EAAG6J,GAEjB,IAAIiD,EAAM9M,EAAEgG,IAAI6D,GAIhB,OAHIiD,EAAIyO,KAAK,GAAK,GAChBzO,EAAIsC,KAAKhV,KAAKsc,GAET5J,EAAIsP,UAAUhiB,OAGvB4hB,EAAIxT,UAAU6G,KAAO,SAAerP,EAAG6J,GACrCzP,KAAK2iB,SAAS/c,EAAG6J,GAEjB,IAAIiD,EAAM9M,EAAEqP,KAAKxF,GAIjB,OAHIiD,EAAIyO,KAAK,GAAK,GAChBzO,EAAIsC,KAAKhV,KAAKsc,GAET5J,GAGTkP,EAAIxT,UAAUqU,IAAM,SAAc7c,EAAGS,GAEnC,OADArG,KAAK8iB,SAASld,GACP5F,KAAKqkB,KAAKze,EAAE6Y,MAAMpY,KAG3Bub,EAAIxT,UAAU+K,KAAO,SAAevT,EAAG6J,GAErC,OADAzP,KAAK2iB,SAAS/c,EAAG6J,GACVzP,KAAKqkB,KAAKze,EAAEuT,KAAK1J,KAG1BmS,EAAIxT,UAAUoB,IAAM,SAAc5J,EAAG6J,GAEnC,OADAzP,KAAK2iB,SAAS/c,EAAG6J,GACVzP,KAAKqkB,KAAKze,EAAE4J,IAAIC,KAGzBmS,EAAIxT,UAAUsP,KAAO,SAAe9X,GAClC,OAAO5F,KAAKmZ,KAAKvT,EAAGA,EAAEuL,UAGxByQ,EAAIxT,UAAUqP,IAAM,SAAc7X,GAChC,OAAO5F,KAAKwP,IAAI5J,EAAGA,IAGrBgc,EAAIxT,UAAU6U,KAAO,SAAerd,GAClC,GAAIA,EAAEzE,SAAU,OAAOyE,EAAEuL,QAEzB,IAAI6T,EAAOhlB,KAAKsc,EAAEyD,MAAM,GAIxB,GAHAlS,EAAOmX,EAAO,IAAM,GAGP,IAATA,EAAY,CACd,IAAI/T,EAAMjR,KAAKsc,EAAEpH,IAAI,IAAIlT,EAAG,IAAIic,OAAO,GACvC,OAAOje,KAAKiR,IAAIrL,EAAGqL,GAQrB,IAFA,IAAI2M,EAAI5d,KAAKsc,EAAE5Q,KAAK,GAChBa,EAAI,GACAqR,EAAEzc,UAA2B,IAAfyc,EAAEmC,MAAM,IAC5BxT,IACAqR,EAAEK,OAAO,GAEXpQ,GAAQ+P,EAAEzc,UAEV,IAAI8jB,EAAM,IAAIjjB,EAAG,GAAG6f,MAAM7hB,MACtBklB,EAAOD,EAAI9B,SAIXgC,EAAOnlB,KAAKsc,EAAE5Q,KAAK,GAAGuS,OAAO,GAC7BmH,EAAIplB,KAAKsc,EAAElJ,YAGf,IAFAgS,EAAI,IAAIpjB,EAAG,EAAIojB,EAAIA,GAAGvD,MAAM7hB,MAEW,IAAhCA,KAAKiR,IAAImU,EAAGD,GAAM/X,IAAI8X,IAC3BE,EAAE/C,QAAQ6C,GAOZ,IAJA,IAAIhW,EAAIlP,KAAKiR,IAAImU,EAAGxH,GAChBtR,EAAItM,KAAKiR,IAAIrL,EAAGgY,EAAE9R,KAAK,GAAGmS,OAAO,IACjC/K,EAAIlT,KAAKiR,IAAIrL,EAAGgY,GAChBtB,EAAI/P,EACc,IAAf2G,EAAE9F,IAAI6X,IAAY,CAEvB,IADA,IAAItB,EAAMzQ,EACD9Q,EAAI,EAAoB,IAAjBuhB,EAAIvW,IAAI6X,GAAY7iB,IAClCuhB,EAAMA,EAAId,SAEZhV,EAAOzL,EAAIka,GACX,IAAI7M,EAAIzP,KAAKiR,IAAI/B,EAAG,IAAIlN,EAAG,GAAG6b,OAAOvB,EAAIla,EAAI,IAE7CkK,EAAIA,EAAEoW,OAAOjT,GACbP,EAAIO,EAAEoT,SACN3P,EAAIA,EAAEwP,OAAOxT,GACboN,EAAIla,EAGN,OAAOkK,GAGTsV,EAAIxT,UAAUgT,KAAO,SAAexb,GAClC,IAAIyf,EAAMzf,EAAEmb,OAAO/gB,KAAKsc,GACxB,OAAqB,IAAjB+I,EAAI5W,UACN4W,EAAI5W,SAAW,EACRzO,KAAKqkB,KAAKgB,GAAKlC,UAEfnjB,KAAKqkB,KAAKgB,IAIrBzD,EAAIxT,UAAU6C,IAAM,SAAcrL,EAAGS,GACnC,GAAIA,EAAIlF,SAAU,OAAO,IAAIa,EAAG,GAAG6f,MAAM7hB,MACzC,GAAoB,IAAhBqG,EAAI8a,KAAK,GAAU,OAAOvb,EAAEuL,QAEhC,IACImU,EAAM,IAAI7kB,MAAM,IACpB6kB,EAAI,GAAK,IAAItjB,EAAG,GAAG6f,MAAM7hB,MACzBslB,EAAI,GAAK1f,EACT,IAAK,IAAIxD,EAAI,EAAGA,EAAIkjB,EAAIxkB,OAAQsB,IAC9BkjB,EAAIljB,GAAKpC,KAAKwP,IAAI8V,EAAIljB,EAAI,GAAIwD,GAGhC,IAAI8M,EAAM4S,EAAI,GACVC,EAAU,EACVC,EAAa,EACblW,EAAQjJ,EAAI+M,YAAc,GAK9B,IAJc,IAAV9D,IACFA,EAAQ,IAGLlN,EAAIiE,EAAIvF,OAAS,EAAGsB,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAI0O,EAAOzK,EAAIqI,MAAMtM,GACZkO,EAAIhB,EAAQ,EAAGgB,GAAK,EAAGA,IAAK,CACnC,IAAIwE,EAAOhE,GAAQR,EAAK,EACpBoC,IAAQ4S,EAAI,KACd5S,EAAM1S,KAAKyd,IAAI/K,IAGL,IAARoC,GAAyB,IAAZyQ,GAKjBA,IAAY,EACZA,GAAWzQ,GA9BE,MA+Bb0Q,GACwC,IAANpjB,GAAiB,IAANkO,KAE7CoC,EAAM1S,KAAKwP,IAAIkD,EAAK4S,EAAIC,IACxBC,EAAa,EACbD,EAAU,IAXRC,EAAa,EAajBlW,EAAQ,GAGV,OAAOoD,GAGTkP,EAAIxT,UAAU2T,UAAY,SAAoB1b,GAC5C,IAAIiG,EAAIjG,EAAIqZ,KAAK1f,KAAKsc,GAEtB,OAAOhQ,IAAMjG,EAAMiG,EAAE6E,QAAU7E,GAGjCsV,EAAIxT,UAAU8T,YAAc,SAAsB7b,GAChD,IAAIqM,EAAMrM,EAAI8K,QAEd,OADAuB,EAAI/D,IAAM,KACH+D,GAOT1Q,EAAGyjB,KAAO,SAAepf,GACvB,OAAO,IAAI+d,EAAK/d,IAmBlB0H,EAASqW,EAAMxC,GAEfwC,EAAKhW,UAAU2T,UAAY,SAAoB1b,GAC7C,OAAOrG,KAAKqkB,KAAKhe,EAAIoY,MAAMze,KAAK8S,SAGlCsR,EAAKhW,UAAU8T,YAAc,SAAsB7b,GACjD,IAAIiG,EAAItM,KAAKqkB,KAAKhe,EAAImJ,IAAIxP,KAAKskB,OAE/B,OADAhY,EAAEqC,IAAM,KACDrC,GAGT8X,EAAKhW,UAAU+K,KAAO,SAAevT,EAAG6J,GACtC,GAAI7J,EAAEzE,UAAYsO,EAAEtO,SAGlB,OAFAyE,EAAE8I,MAAM,GAAK,EACb9I,EAAE9E,OAAS,EACJ8E,EAGT,IAAIsN,EAAItN,EAAEuT,KAAK1J,GACXP,EAAIgE,EAAE2L,MAAM7e,KAAK8S,OAAOtD,IAAIxP,KAAKukB,MAAM3F,OAAO5e,KAAK8S,OAAOtD,IAAIxP,KAAKsc,GACnEoJ,EAAIxS,EAAE+B,KAAK/F,GAAG+O,OAAOje,KAAK8S,OAC1BJ,EAAMgT,EAQV,OANIA,EAAEtY,IAAIpN,KAAKsc,IAAM,EACnB5J,EAAMgT,EAAEzQ,KAAKjV,KAAKsc,GACToJ,EAAEvE,KAAK,GAAK,IACrBzO,EAAMgT,EAAE1Q,KAAKhV,KAAKsc,IAGb5J,EAAIsP,UAAUhiB,OAGvBokB,EAAKhW,UAAUoB,IAAM,SAAc5J,EAAG6J,GACpC,GAAI7J,EAAEzE,UAAYsO,EAAEtO,SAAU,OAAO,IAAIa,EAAG,GAAGggB,UAAUhiB,MAEzD,IAAIkT,EAAItN,EAAE4J,IAAIC,GACVP,EAAIgE,EAAE2L,MAAM7e,KAAK8S,OAAOtD,IAAIxP,KAAKukB,MAAM3F,OAAO5e,KAAK8S,OAAOtD,IAAIxP,KAAKsc,GACnEoJ,EAAIxS,EAAE+B,KAAK/F,GAAG+O,OAAOje,KAAK8S,OAC1BJ,EAAMgT,EAOV,OANIA,EAAEtY,IAAIpN,KAAKsc,IAAM,EACnB5J,EAAMgT,EAAEzQ,KAAKjV,KAAKsc,GACToJ,EAAEvE,KAAK,GAAK,IACrBzO,EAAMgT,EAAE1Q,KAAKhV,KAAKsc,IAGb5J,EAAIsP,UAAUhiB,OAGvBokB,EAAKhW,UAAUgT,KAAO,SAAexb,GAGnC,OADU5F,KAAKqkB,KAAKze,EAAEmb,OAAO/gB,KAAKsc,GAAG9M,IAAIxP,KAAK8f,KACnCkC,UAAUhiB,OAx9GzB,C,WA09G4CA,O,sBC19G5C4N,EAAOzP,QAAUS,EAAQ,MAARA,CAAqBA,EAAQ,S,sBCA9C,IAAM+mB,EAAe/mB,EAAQ,MACvBgnB,EAAchnB,EAAQ,OAE5BgP,EAAOzP,QAAU,SAAU0nB,GACzB,IAAMC,EAASH,EAAaE,GACtBE,EAAQH,EAAYC,GAE1B,OAAO,SAAUG,EAAWC,GAE1B,OADkC,kBAAdD,EAAyBA,EAAUpkB,cAAgBokB,GAErE,IAAK,YAAa,OAAO,IAAIF,EAAO,KAAM,IAAK,KAAM,IAAKG,GAC1D,IAAK,YAAa,OAAO,IAAIH,EAAO,KAAM,IAAK,KAAM,IAAKG,GAC1D,IAAK,YAAa,OAAO,IAAIH,EAAO,IAAK,IAAK,KAAM,IAAKG,GACzD,IAAK,YAAa,OAAO,IAAIH,EAAO,IAAK,KAAM,KAAM,IAAKG,GAE1D,IAAK,WAAY,OAAO,IAAIH,EAAO,KAAM,IAAK,EAAM,IAAKG,GACzD,IAAK,WAAY,OAAO,IAAIH,EAAO,KAAM,IAAK,EAAM,IAAKG,GACzD,IAAK,WAAY,OAAO,IAAIH,EAAO,IAAK,IAAK,EAAM,IAAKG,GACxD,IAAK,WAAY,OAAO,IAAIH,EAAO,IAAK,KAAM,EAAM,IAAKG,GAEzD,IAAK,WAAY,OAAO,IAAIF,EAAM,KAAM,IAAK,GAAME,GACnD,IAAK,WAAY,OAAO,IAAIF,EAAM,KAAM,IAAK,GAAME,GAEnD,QAAS,MAAM,IAAItlB,MAAM,qBAAuBqlB,O,sHCvB9CE,EAActnB,EAAQ,OAAtBsnB,UAERtY,EAAOzP,QAAU,SAAC0nB,GAAD,kDACf,WAAaM,EAAMC,EAAUC,EAAiBC,EAAeL,GAAS,wBACpE,cAAMA,IAEDM,MAAQJ,EACb,EAAKK,UAAYJ,EACjB,EAAKK,iBAAmBJ,EACxB,EAAKK,eAAiBJ,EACtB,EAAKK,SAAWV,EAEhB,EAAKW,OAAS,IAAIf,EAClB,EAAKe,OAAOC,WAAWV,EAAMC,GAC7B,EAAKU,YAAa,EAXkD,EADvD,oCAef,SAAYC,EAAOC,EAAUC,GAC3B,IAAIC,EAAQ,KACZ,IACElnB,KAAKzB,OAAOwoB,EAAOC,GACnB,MAAO7nB,GACP+nB,EAAQ/nB,EAGV8nB,EAASC,KAvBI,oBA0Bf,SAAQD,GACN,IAAIC,EAAQ,KACZ,IACElnB,KAAK4G,KAAK5G,KAAKtB,UACf,MAAOS,GACP+nB,EAAQ/nB,EAGV8nB,EAASC,KAlCI,oBAqCf,SAAQjd,EAAM+c,GACZ,IAAKxoB,EAAO4F,SAAS6F,IAAyB,kBAATA,EAAmB,MAAM,IAAIkd,UAAU,qCAC5E,GAAInnB,KAAK8mB,WAAY,MAAM,IAAInmB,MAAM,yBAKrC,OAJKnC,EAAO4F,SAAS6F,KAAOA,EAAOzL,EAAOC,KAAKwL,EAAM+c,IAErDhnB,KAAK4mB,OAAOQ,OAAOnd,GAEZjK,OA5CM,oBA+Cf,SAAQgnB,GACN,GAAIhnB,KAAK8mB,WAAY,MAAM,IAAInmB,MAAM,yBACrCX,KAAK8mB,YAAa,EAEd9mB,KAAKymB,kBAAkBzmB,KAAK4mB,OAAOS,kBAAkBrnB,KAAKymB,kBAC9D,IAAI/nB,EAASsB,KAAK4mB,OAAOU,QAAQtnB,KAAK0mB,eAAiB,GAKvD,YAJiBrmB,IAAb2mB,IAAwBtoB,EAASA,EAAOuD,SAAS+kB,IAErDhnB,KAAKunB,cAEE7oB,IAzDM,yBA6Df,WAEE,OADAsB,KAAK4mB,OAAOC,WAAW7mB,KAAKumB,MAAOvmB,KAAKwmB,WACjCxmB,OA/DM,oBAmEf,WACE,IAAMmR,EAAQ,IAAI2U,EAAO9lB,KAAKumB,MAAOvmB,KAAKwmB,UAAWxmB,KAAKymB,iBAAkBzmB,KAAK0mB,eAAgB1mB,KAAK2mB,UAItG,OAHA3mB,KAAK4mB,OAAOlhB,KAAKyL,EAAMyV,QACvBzV,EAAM2V,WAAa9mB,KAAK8mB,WAEjB3V,MAxEM,GAAsC+U,K,uHCF/CA,EAActnB,EAAQ,OAAtBsnB,UAERtY,EAAOzP,QAAU,SAAC0nB,GAAD,kDACf,WAAaM,EAAMC,EAAUC,EAAiBJ,GAAS,wBACrD,cAAMA,IAEDM,MAAQJ,EACb,EAAKK,UAAYJ,EACjB,EAAKK,iBAAmBJ,EACxB,EAAKM,SAAWV,EAEhB,EAAKW,OAAS,IAAIf,EAClB,EAAKe,OAAOC,WAAWV,EAAMC,GAC7B,EAAKU,YAAa,EAVmC,EADxC,oCAcf,SAAYC,EAAOC,EAAUC,GAC3B,IAAIC,EAAQ,KACZ,IACElnB,KAAKzB,OAAOwoB,EAAOC,GACnB,MAAO7nB,GACP+nB,EAAQ/nB,EAGV8nB,EAASC,KAtBI,oBAyBf,cAzBe,mBA2Bf,SAAO7V,GACLrR,KAAK4G,KAAK5G,KAAKsnB,QAAQjW,MA5BV,oBA+Bf,SAAQpH,EAAM+c,GACZ,IAAKxoB,EAAO4F,SAAS6F,IAAyB,kBAATA,EAAmB,MAAM,IAAIkd,UAAU,qCAC5E,GAAInnB,KAAK8mB,WAAY,MAAM,IAAInmB,MAAM,0BAKrC,OAJKnC,EAAO4F,SAAS6F,KAAOA,EAAOzL,EAAOC,KAAKwL,EAAM+c,IAErDhnB,KAAK4mB,OAAOQ,OAAOnd,GAEZjK,OAtCM,qBAyCf,SAASwnB,EAAgBR,GAClBhnB,KAAK8mB,aACR9mB,KAAK8mB,YAAa,EAClB9mB,KAAK4mB,OAAOS,kBAAkBrnB,KAAKymB,mBAGrC,IAAIxc,EAAOjK,KAAK4mB,OAAOU,QAAQE,GAG/B,YAFiBnnB,IAAb2mB,IAAwB/c,EAAOA,EAAKhI,SAAS+kB,IAE1C/c,IAlDM,yBAqDf,WAEE,OADAjK,KAAK4mB,OAAOC,WAAW7mB,KAAKumB,MAAOvmB,KAAKwmB,WACjCxmB,OAvDM,oBA0Df,WACE,IAAMmR,EAAQ,IAAI4U,EAAM/lB,KAAKumB,MAAOvmB,KAAKwmB,UAAWxmB,KAAKymB,iBAAkBzmB,KAAK2mB,UAIhF,OAHA3mB,KAAK4mB,OAAOlhB,KAAKyL,EAAMyV,QACvBzV,EAAM2V,WAAa9mB,KAAK8mB,WAEjB3V,MA/DM,GAAqC+U,K,oBCFtD,IAAMuB,EAAwB,CAAC,EAAG,EAAG,MAAO,EAAG,MAAO,WAAY,WAAY,WAAY,MAAO,EAAG,WAAY,EAAG,WAAY,WAAY,MAAO,WAAY,IAAK,EAAG,IAAK,EAAG,WAAY,EAAG,WAAY,EAAG,WAAY,EAAG,IAAK,WAAY,MAAO,WAAY,MAAO,WAAY,MAAO,WAAY,IAAK,WAAY,MAAO,EAAG,WAAY,WAAY,WAAY,WAAY,MAAO,WAAY,WAAY,EAAG,WAAY,YAE9ZtpB,EAAQupB,MAAQ,SAAUnb,GACxB,IAAK,IAAIoQ,EAAQ,EAAGA,EAAQ,KAAMA,EAAO,CAEvC,IAAMgL,EAAMpb,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvCqb,EAAMrb,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvCsb,EAAMtb,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvCub,EAAMvb,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvCwb,EAAMxb,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvCyb,EAAMzb,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvC0b,EAAM1b,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvC2b,EAAM3b,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvC4b,EAAM5b,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvC6b,EAAM7b,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAEzC6F,EAAK+V,GAAON,GAAO,EAAIC,IAAQ,IAC/BzU,EAAK+U,GAAON,GAAO,EAAID,IAAQ,IAC7BQ,EAAS9b,EAAE,GAAK6F,EAChBkW,EAAS/b,EAAE,GAAK8G,EAChBkV,EAAShc,EAAE,IAAM6F,EACjBoW,EAASjc,EAAE,IAAM8G,EACjBoV,EAAUlc,EAAE,IAAM6F,EAClBsW,EAAUnc,EAAE,IAAM8G,EAClBsV,EAAUpc,EAAE,IAAM6F,EAClBwW,EAAUrc,EAAE,IAAM8G,EAClBwV,EAAUtc,EAAE,IAAM6F,EAClB0W,EAAUvc,EAAE,IAAM8G,EACxBjB,EAAKuV,GAAOI,GAAO,EAAIC,IAAQ,IAC/B3U,EAAKuU,GAAOI,GAAO,EAAID,IAAQ,IAC/B,IAAMgB,EAASxc,EAAE,GAAK6F,EAChB4W,EAASzc,EAAE,GAAK8G,EAChB4V,EAAS1c,EAAE,IAAM6F,EACjB8W,EAAS3c,EAAE,IAAM8G,EACjB8V,EAAU5c,EAAE,IAAM6F,EAClBgX,EAAU7c,EAAE,IAAM8G,EAClBgW,EAAU9c,EAAE,IAAM6F,EAClBkX,EAAU/c,EAAE,IAAM8G,EAClBkW,EAAUhd,EAAE,IAAM6F,EAClBoX,EAAUjd,EAAE,IAAM8G,EACxBjB,EAAKyV,GAAOI,GAAO,EAAIC,IAAQ,IAC/B7U,EAAKyU,GAAOI,GAAO,EAAID,IAAQ,IAC/B,IAAMwB,EAASld,EAAE,GAAK6F,EAChBsX,EAASnd,EAAE,GAAK8G,EAChBsW,EAASpd,EAAE,IAAM6F,EACjBwX,EAASrd,EAAE,IAAM8G,EACjBwW,EAAUtd,EAAE,IAAM6F,EAClB0X,EAAUvd,EAAE,IAAM8G,EAClB0W,EAAUxd,EAAE,IAAM6F,EAClB4X,EAAUzd,EAAE,IAAM8G,EAClB4W,EAAU1d,EAAE,IAAM6F,EAClB8X,EAAU3d,EAAE,IAAM8G,EACxBjB,EAAK2V,GAAOI,GAAO,EAAIC,IAAQ,IAC/B/U,EAAK2U,GAAOI,GAAO,EAAID,IAAQ,IAC/B,IAAMgC,EAAS5d,EAAE,GAAK6F,EAChBgY,EAAS7d,EAAE,GAAK8G,EAChBgX,EAAS9d,EAAE,IAAM6F,EACjBkY,EAAS/d,EAAE,IAAM8G,EACjBkX,EAAUhe,EAAE,IAAM6F,EAClBoY,EAAUje,EAAE,IAAM8G,EAClBoX,EAAUle,EAAE,IAAM6F,EAClBsY,EAAUne,EAAE,IAAM8G,EAClBsX,EAAUpe,EAAE,IAAM6F,EAClBwY,GAAUre,EAAE,IAAM8G,EACxBjB,EAAK6V,GAAON,GAAO,EAAIC,IAAQ,IAC/BvU,EAAK6U,GAAON,GAAO,EAAID,IAAQ,IAC/B,IAAMkD,GAASte,EAAE,GAAK6F,EAChB0Y,GAASve,EAAE,GAAK8G,EAChB0X,GAASxe,EAAE,IAAM6F,EACjB4Y,GAASze,EAAE,IAAM8G,EACjB4X,GAAU1e,EAAE,IAAM6F,EAClB8Y,GAAU3e,EAAE,IAAM8G,EAClB8X,GAAU5e,EAAE,IAAM6F,EAClBgZ,GAAU7e,EAAE,IAAM8G,EAClBgY,GAAU9e,EAAE,IAAM6F,EAClBkZ,GAAU/e,EAAE,IAAM8G,EAGlBkY,GAASlD,EACTmD,GAASlD,EACTmD,GAAWjD,GAAU,EAAID,IAAW,GACpCmD,GAAWnD,GAAU,EAAIC,IAAW,GACpCmD,GAAUlD,GAAW,EAAIC,IAAY,GACrCkD,GAAUlD,GAAW,EAAID,IAAY,GACrCoD,GAAWjD,GAAW,EAAID,IAAY,GACtCmD,GAAWnD,GAAW,EAAIC,IAAY,GACtCmD,GAAWlD,GAAW,GAAKC,IAAY,GACvCkD,GAAWlD,GAAW,GAAKD,IAAY,GACvCoD,GAAWlD,GAAU,EAAIC,IAAW,GACpCkD,GAAWlD,GAAU,EAAID,IAAW,GACpCoD,GAAUjD,GAAU,GAAKD,IAAW,GACpCmD,GAAUnD,GAAU,GAAKC,IAAW,GACpCmD,GAAWlD,GAAW,GAAKC,IAAY,GACvCkD,GAAWlD,GAAW,GAAKD,IAAY,GACvCoD,GAAUjD,GAAW,GAAKD,IAAY,GACtCmD,GAAUnD,GAAW,GAAKC,IAAY,GACtCmD,GAAWlD,GAAW,EAAIC,IAAY,GACtCkD,GAAWlD,GAAW,EAAID,IAAY,GACtCoD,GAAWjD,GAAU,GAAKD,IAAW,EACrCmD,GAAWnD,GAAU,GAAKC,IAAW,EACrCmD,GAAWlD,GAAU,EAAIC,IAAW,GACpCkD,GAAWlD,GAAU,EAAID,IAAW,GACpCoD,GAAUjD,GAAW,GAAKD,IAAY,GACtCmD,GAAUnD,GAAW,GAAKC,IAAY,GACtCmD,GAAWlD,GAAW,GAAKC,IAAY,GACvCkD,GAAWlD,GAAW,GAAKD,IAAY,GACvCoD,GAAUjD,GAAW,GAAKD,IAAY,EACtCmD,GAAUnD,GAAW,GAAKC,IAAY,EACtCmD,GAAUlD,GAAU,GAAKC,IAAW,EACpCkD,GAAUlD,GAAU,GAAKD,IAAW,EACpCoD,GAAWjD,GAAU,GAAKD,IAAW,EACrCmD,GAAWnD,GAAU,GAAKC,IAAW,EACrCmD,GAAWlD,GAAW,GAAKC,IAAY,EACvCkD,GAAWlD,GAAW,GAAKD,IAAY,EACvCoD,GAAUlD,GAAW,GAAKC,IAAY,GACtCkD,GAAUlD,GAAW,GAAKD,IAAY,GACtCoD,GAAWjD,IAAW,GAAKD,IAAY,EACvCmD,GAAWnD,GAAW,GAAKC,KAAY,EACvCmD,GAAWlD,IAAU,GAAKC,KAAW,EACrCkD,GAAWlD,IAAU,GAAKD,KAAW,EACrCoD,GAAUlD,IAAU,GAAKC,KAAW,GACpCkD,GAAUlD,IAAU,GAAKD,KAAW,GACpCoD,GAAWjD,IAAW,EAAID,KAAY,GACtCmD,GAAWnD,IAAW,EAAIC,KAAY,GACtCmD,GAAWlD,IAAW,EAAIC,KAAY,GACtCkD,GAAWlD,IAAW,EAAID,KAAY,GACtCoD,GAAUlD,IAAW,GAAKC,KAAY,GACtCkD,GAAUlD,IAAW,GAAKD,KAAY,GAG5C9e,EAAE,GAAKgf,IAAWY,GAASY,GAC3BxgB,EAAE,GAAKif,IAAWY,GAASY,GAC3BzgB,EAAE,IAAM8gB,IAAWY,GAAStC,GAC5Bpf,EAAE,IAAM+gB,IAAWY,GAAStC,GAC5Brf,EAAE,IAAM0f,IAAYY,GAAUY,GAC9BlhB,EAAE,IAAM2f,IAAYY,GAAUY,GAC9BnhB,EAAE,IAAMwhB,IAAYtC,GAAUY,GAC9B9f,EAAE,IAAMyhB,IAAYtC,GAAUY,GAC9B/f,EAAE,IAAMogB,IAAYY,GAAUY,GAC9B5hB,EAAE,IAAMqgB,IAAYY,GAAUY,GAC9B7hB,EAAE,GAAK4f,IAAWY,GAASY,GAC3BphB,EAAE,GAAK6f,IAAWY,GAASY,GAC3BrhB,EAAE,IAAM0hB,IAAWtC,GAASY,GAC5BhgB,EAAE,IAAM2hB,IAAWtC,GAASY,GAC5BjgB,EAAE,IAAMsgB,IAAYY,GAAUY,GAC9B9hB,EAAE,IAAMugB,IAAYY,GAAUY,GAC9B/hB,EAAE,IAAMkf,IAAYY,GAAUY,GAC9B1gB,EAAE,IAAMmf,IAAYY,GAAUY,GAC9B3gB,EAAE,IAAMghB,IAAYY,GAAUtC,GAC9Btf,EAAE,IAAMihB,IAAYY,GAAUtC,GAC9Bvf,EAAE,GAAKwgB,IAAWY,GAASY,GAC3BhiB,EAAE,GAAKygB,IAAWY,GAASY,GAC3BjiB,EAAE,IAAMof,IAAWY,GAASY,GAC5B5gB,EAAE,IAAMqf,IAAWY,GAASY,GAC5B7gB,EAAE,IAAMkhB,IAAYY,GAAUtC,GAC9Bxf,EAAE,IAAMmhB,IAAYY,GAAUtC,GAC9Bzf,EAAE,IAAM8f,IAAYY,GAAUY,GAC9BthB,EAAE,IAAM+f,IAAYY,GAAUY,GAC9BvhB,EAAE,IAAM4hB,IAAYtC,GAAUY,GAC9BlgB,EAAE,IAAM6hB,IAAYtC,GAAUY,GAC9BngB,EAAE,GAAKohB,IAAWY,GAAShD,GAC3Bhf,EAAE,GAAKqhB,IAAWY,GAAShD,GAC3Bjf,EAAE,IAAMggB,IAAWY,GAASE,GAC5B9gB,EAAE,IAAMigB,IAAWY,GAASE,GAC5B/gB,EAAE,IAAM8hB,IAAYtC,GAAUE,GAC9B1f,EAAE,IAAM+hB,IAAYtC,GAAUE,GAC9B3f,EAAE,IAAM0gB,IAAYY,GAAUE,GAC9BxhB,EAAE,IAAM2gB,IAAYY,GAAUE,GAC9BzhB,EAAE,IAAMsf,IAAYY,GAAUE,GAC9BpgB,EAAE,IAAMuf,IAAYY,GAAUE,GAC9BrgB,EAAE,GAAKgiB,IAAWhD,GAASY,GAC3B5f,EAAE,GAAKiiB,IAAWhD,GAASY,GAC3B7f,EAAE,IAAM4gB,IAAWE,GAASY,GAC5B1hB,EAAE,IAAM6gB,IAAWE,GAASY,GAC5B3hB,EAAE,IAAMwf,IAAYE,GAAUY,GAC9BtgB,EAAE,IAAMyf,IAAYE,GAAUY,GAC9BvgB,EAAE,IAAMshB,IAAYE,GAAUtC,GAC9Blf,EAAE,IAAMuhB,IAAYE,GAAUtC,GAC9Bnf,EAAE,IAAMkgB,IAAYE,GAAUY,GAC9BhhB,EAAE,IAAMmgB,IAAYE,GAAUY,GAG9BjhB,EAAE,IAAMkb,EAA8B,EAAR9K,GAC9BpQ,EAAE,IAAMkb,EAA8B,EAAR9K,EAAY,M,4CCvLxC8R,EAAc7vB,EAAQ,OAE5B,SAASknB,IAEP9lB,KAAK0uB,MAAQ,CACX,EAAG,EAAG,EAAG,EAAG,EACZ,EAAG,EAAG,EAAG,EAAG,EACZ,EAAG,EAAG,EAAG,EAAG,EACZ,EAAG,EAAG,EAAG,EAAG,EACZ,EAAG,EAAG,EAAG,EAAG,GAGd1uB,KAAK2uB,UAAY,KACjB3uB,KAAK4uB,MAAQ,EACb5uB,KAAK6uB,WAAY,EAGnB/I,EAAO1X,UAAUyY,WAAa,SAAUV,EAAMC,GAC5C,IAAK,IAAIhkB,EAAI,EAAGA,EAAI,KAAMA,EAAGpC,KAAK0uB,MAAMtsB,GAAK,EAC7CpC,KAAK2uB,UAAYxI,EAAO,EACxBnmB,KAAK4uB,MAAQ,EACb5uB,KAAK6uB,WAAY,GAGnB/I,EAAO1X,UAAUgZ,OAAS,SAAUnd,GAClC,IAAK,IAAI7H,EAAI,EAAGA,EAAI6H,EAAKnJ,SAAUsB,EACjCpC,KAAK0uB,SAAS1uB,KAAK4uB,MAAQ,KAAO3kB,EAAK7H,IAAYpC,KAAK4uB,MAAQ,EAAlB,EAC9C5uB,KAAK4uB,OAAS,EACV5uB,KAAK4uB,QAAU5uB,KAAK2uB,YACtBF,EAAY/G,MAAM1nB,KAAK0uB,OACvB1uB,KAAK4uB,MAAQ,IAKnB9I,EAAO1X,UAAUiZ,kBAAoB,SAAU5f,GAC7CzH,KAAK0uB,SAAS1uB,KAAK4uB,MAAQ,KAAOnnB,GAAczH,KAAK4uB,MAAQ,EAAlB,EACrB,KAAV,IAAPnnB,IAAsBzH,KAAK4uB,QAAW5uB,KAAK2uB,UAAY,GAAIF,EAAY/G,MAAM1nB,KAAK0uB,OACvF1uB,KAAK0uB,UAAU1uB,KAAK2uB,UAAY,GAAK,KAAO,MAAe3uB,KAAK2uB,UAAY,GAAK,EAA5B,EACrDF,EAAY/G,MAAM1nB,KAAK0uB,OACvB1uB,KAAK4uB,MAAQ,EACb5uB,KAAK6uB,WAAY,GAGnB/I,EAAO1X,UAAUkZ,QAAU,SAAUxmB,GAC9Bd,KAAK6uB,WAAW7uB,KAAKqnB,kBAAkB,GAG5C,IADA,IAAM7Z,EAAShP,EAAOswB,MAAMhuB,GACnBsB,EAAI,EAAGA,EAAItB,IAAUsB,EAC5BoL,EAAOpL,GAAMpC,KAAK0uB,SAAS1uB,KAAK4uB,MAAQ,MAAc5uB,KAAK4uB,MAAQ,EAAlB,EAAyB,IAC1E5uB,KAAK4uB,OAAS,EACV5uB,KAAK4uB,QAAU5uB,KAAK2uB,YACtBF,EAAY/G,MAAM1nB,KAAK0uB,OACvB1uB,KAAK4uB,MAAQ,GAIjB,OAAOphB,GAGTsY,EAAO1X,UAAU1I,KAAO,SAAUoK,GAChC,IAAK,IAAI1N,EAAI,EAAGA,EAAI,KAAMA,EAAG0N,EAAK4e,MAAMtsB,GAAKpC,KAAK0uB,MAAMtsB,GACxD0N,EAAK6e,UAAY3uB,KAAK2uB,UACtB7e,EAAK8e,MAAQ5uB,KAAK4uB,MAClB9e,EAAK+e,UAAY7uB,KAAK6uB,WAGxBjhB,EAAOzP,QAAU2nB,G,+NCnEjB,kBAkCA,SAASiJ,EAAahpB,EAAWwI,GAC/B,GAAa,MAATxI,EAAE,IAAuB,MAATA,EAAE,GACpB,MAAM,IAAIpF,MAAM,4BAGlB,OAAO0B,SAAS0D,EAAGwI,GAGrB,SAASygB,EAAatf,EAAauf,GACjC,GAAIvf,EAAM,GACR,OAAOlR,EAAOC,KAAK,CAACiR,EAAMuf,IAE1B,IAAMC,EAAY9pB,EAASsK,GAErByf,EAAY/pB,EAAS6pB,EAAS,GADpBC,EAAUpuB,OAAS,GAEnC,OAAOtC,EAAOC,KAAK0wB,EAAYD,EAAW,OA8D9C,SAASE,EAAQnnB,GACf,IAAInH,EAAQuuB,EAASplB,EAAMqlB,EAAgBlkB,EACrCmkB,EAAU,GACVJ,EAAYlnB,EAAM,GAExB,GAAIknB,GAAa,IAEf,MAAO,CACLllB,KAAMhC,EAAMrF,MAAM,EAAG,GACrB4sB,UAAWvnB,EAAMrF,MAAM,IAEpB,GAAIusB,GAAa,IAAM,CAY5B,GATAruB,EAASquB,EAAY,IAInBllB,EADgB,MAAdklB,EACK3wB,EAAOC,KAAK,IAEZwJ,EAAMrF,MAAM,EAAG9B,GAGT,IAAXA,GAAgBmJ,EAAK,GAAK,IAC5B,MAAM,IAAItJ,MAAM,gDAGlB,MAAO,CACLsJ,KAAMA,EACNulB,UAAWvnB,EAAMrF,MAAM9B,IAEpB,GAAIquB,GAAa,IAAM,CAI5B,GADAE,EAAUF,EAAY,IAClBlnB,EAAMnH,OAAS,EAAIuuB,EACrB,MAAM,IAAI1uB,MAAM,mDAGlB,IADAG,EAASiuB,EAAa9mB,EAAMrF,MAAM,EAAGysB,GAASptB,SAAS,OAAQ,MACjD,GACZ,MAAM,IAAItB,MAAM,6DAGlB,IADAsJ,EAAOhC,EAAMrF,MAAMysB,EAASvuB,EAASuuB,IAC5BvuB,OAASA,EAChB,MAAM,IAAIH,MAAM,4CAGlB,MAAO,CACLsJ,KAAMA,EACNulB,UAAWvnB,EAAMrF,MAAM9B,EAASuuB,IAE7B,GAAIF,GAAa,IAAM,CAI5B,IAFAruB,EAASquB,EAAY,IACrBG,EAAiBrnB,EAAMrF,MAAM,EAAG9B,GACzBwuB,EAAexuB,QACpBsK,EAAIgkB,EAAQE,GACZC,EAAQ3oB,KAAKwE,EAAEnB,MACfqlB,EAAiBlkB,EAAEokB,UAGrB,MAAO,CACLvlB,KAAMslB,EACNC,UAAWvnB,EAAMrF,MAAM9B,IAMzB,IAAM2uB,GAFNJ,EAAUF,EAAY,MACtBruB,EAASiuB,EAAa9mB,EAAMrF,MAAM,EAAGysB,GAASptB,SAAS,OAAQ,KAE/D,GAAIwtB,EAAcxnB,EAAMnH,OACtB,MAAM,IAAIH,MAAM,qDAIlB,GAA8B,KAD9B2uB,EAAiBrnB,EAAMrF,MAAMysB,EAASI,IACnB3uB,OACjB,MAAM,IAAIH,MAAM,0CAGlB,KAAO2uB,EAAexuB,QACpBsK,EAAIgkB,EAAQE,GACZC,EAAQ3oB,KAAKwE,EAAEnB,MACfqlB,EAAiBlkB,EAAEokB,UAErB,MAAO,CACLvlB,KAAMslB,EACNC,UAAWvnB,EAAMrF,MAAM6sB,IAM7B,SAASjpB,EAAcrC,GACrB,MAA2B,OAApBA,EAAIvB,MAAM,EAAG,GAYtB,SAASwC,EAASsqB,GAChB,GAAIA,EAAU,EACZ,MAAM,IAAI/uB,MAAM,kDAElB,IAAMwE,EAAMuqB,EAAQztB,SAAS,IAC7B,OAAOkD,EAAIrE,OAAS,EAAI,IAAIqE,EAAQA,EAetC,SAAS/E,EAAS2F,GAChB,IAAKvH,EAAO4F,SAAS2B,GAAI,CACvB,GAAiB,kBAANA,EACT,OAAIS,EAAcT,GACTvH,EAAOC,MAfHmH,EAhBE,kBADGzB,EAgC4B4B,GA9BzC5B,EAEFqC,EAAcrC,GAAOA,EAAIvB,MAAM,GAAKuB,GAclCrD,OAAS,EAAI,IAAI8E,EAAMA,EAcuB,OAE1CpH,EAAOC,KAAKsH,GAEhB,GAAiB,kBAANA,GAA+B,kBAANA,EACzC,OAAKA,EAfX,SAAqB2pB,GACnB,IAAMvqB,EAAMC,EAASsqB,GACrB,OAAOlxB,EAAOC,KAAK0G,EAAK,OAgBXe,CAAYH,GAFZvH,EAAOC,KAAK,IAIhB,GAAU,OAANsH,QAAoB1F,IAAN0F,EACvB,OAAOvH,EAAOC,KAAK,IACd,GAAIsH,aAAaC,WACtB,OAAOxH,EAAOC,KAAKsH,GACd,GAAIwB,EAAAA,QAAGhD,KAAKwB,GAEjB,OAAOvH,EAAOC,KAAKsH,EAAElD,WAErB,MAAM,IAAIlC,MAAM,gBAjCtB,IAAmBiF,EAjBKzB,EAqDtB,OAAO4B,EAxPT5H,EAAAA,OAAA,SAAgB6C,EAAOiH,GACrB,GAAIxH,MAAMC,QAAQuH,GAAQ,CAExB,IADA,IAAMuF,EAAmB,GAChBpL,EAAI,EAAGA,EAAI6F,EAAMnH,OAAQsB,IAChCoL,EAAO5G,KAAK5F,EAAOiH,EAAM7F,KAE3B,IAAM6B,EAAMzF,EAAOyE,OAAOuK,GAC1B,OAAOhP,EAAOyE,OAAO,CAAC+rB,EAAa/qB,EAAInD,OAAQ,KAAMmD,IAErD,IAAM0rB,EAAWvvB,EAAS6H,GAC1B,OAA2B,IAApB0nB,EAAS7uB,QAAgB6uB,EAAS,GAAK,IAC1CA,EACAnxB,EAAOyE,OAAO,CAAC+rB,EAAaW,EAAS7uB,OAAQ,KAAM6uB,KAqC3DxxB,EAAAA,OAAA,SAAuB8J,EAAc2nB,GACnC,QADmC,IAAAA,IAAAA,GAAAA,IAC9B3nB,GAAmC,IAAzBA,EAAcnH,OAC3B,OAAOtC,EAAOC,KAAK,IAGrB,IACM8wB,EAAUH,EADIhvB,EAAS6H,IAG7B,GAAI2nB,EACF,OAAOL,EAET,GAAiC,IAA7BA,EAAQC,UAAU1uB,OACpB,MAAM,IAAIH,MAAM,qBAGlB,OAAO4uB,EAAQtlB,MAQjB9L,EAAAA,UAAA,SAA0B8J,GACxB,IAAKA,GAAmC,IAAzBA,EAAcnH,OAC3B,OAAOtC,EAAOC,KAAK,IAGrB,IAAMoxB,EAAczvB,EAAS6H,GACvBknB,EAAYU,EAAY,GAE9B,GAAIV,GAAa,IACf,OAAOU,EAAY/uB,OACd,GAAIquB,GAAa,IACtB,OAAOA,EAAY,IACd,GAAIA,GAAa,IACtB,OAAOA,EAAY,IACd,GAAIA,GAAa,IAEtB,OAAOA,EAAY,IAGnB,IAAME,EAAUF,EAAY,IAE5B,OAAOE,EADQN,EAAac,EAAYjtB,MAAM,EAAGysB,GAASptB,SAAS,OAAQ,M,uBCzG/E,SAAW2L,EAAQzP,GACjB,aAGA,SAAS0P,EAAQC,EAAKzP,GACpB,IAAKyP,EAAK,MAAM,IAAInN,MAAMtC,GAAO,oBAKnC,SAAS0P,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,aACfA,EAASC,UAAYH,EAAUG,UAC/BJ,EAAKI,UAAY,IAAID,EACrBH,EAAKI,UAAUC,YAAcL,EAK/B,SAAShM,EAAIsM,EAAQC,EAAMC,GACzB,GAAIxM,EAAGuC,KAAK+J,GACV,OAAOA,EAGTtO,KAAKyO,SAAW,EAChBzO,KAAK0O,MAAQ,KACb1O,KAAKc,OAAS,EAGdd,KAAK2O,IAAM,KAEI,OAAXL,IACW,OAATC,GAA0B,OAATA,IACnBC,EAASD,EACTA,EAAO,IAGTvO,KAAK4O,MAAMN,GAAU,EAAGC,GAAQ,GAAIC,GAAU,OAYlD,IAAIhQ,EATkB,kBAAXoP,EACTA,EAAOzP,QAAU6D,EAEjB7D,EAAQ6D,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAG6M,SAAW,GAGd,IAEIrQ,EADoB,qBAAXsQ,QAAmD,qBAAlBA,OAAOtQ,OACxCsQ,OAAOtQ,OAEPI,EAAAA,MAAAA,OAEX,MAAO0C,IAgIT,SAASyN,EAAeC,EAAQC,GAC9B,IAAIC,EAAIF,EAAOvF,WAAWwF,GAE1B,OAAIC,GAAK,IAAMA,GAAK,GACXA,EAAI,GAEFA,GAAK,IAAMA,GAAK,GAClBA,EAAI,GAEFA,GAAK,IAAMA,GAAK,IAClBA,EAAI,QAEXrB,GAAO,EAAO,wBAA0BmB,GAI5C,SAASG,EAAcH,EAAQI,EAAYH,GACzC,IAAI3C,EAAIyC,EAAcC,EAAQC,GAI9B,OAHIA,EAAQ,GAAKG,IACf9C,GAAKyC,EAAcC,EAAQC,EAAQ,IAAM,GAEpC3C,EA8CT,SAAS+C,EAAWlL,EAAKmL,EAAOC,EAAKC,GAInC,IAHA,IAAIlD,EAAI,EACJmD,EAAI,EACJC,EAAMC,KAAKC,IAAIzL,EAAIrD,OAAQyO,GACtBnN,EAAIkN,EAAOlN,EAAIsN,EAAKtN,IAAK,CAChC,IAAI8M,EAAI/K,EAAIsF,WAAWrH,GAAK,GAE5BkK,GAAKkD,EAIHC,EADEP,GAAK,GACHA,EAAI,GAAK,GAGJA,GAAK,GACVA,EAAI,GAAK,GAITA,EAENrB,EAAOqB,GAAK,GAAKO,EAAID,EAAK,qBAC1BlD,GAAKmD,EAEP,OAAOnD,EA4DT,SAASuD,EAAMC,EAAMC,GACnBD,EAAKpB,MAAQqB,EAAIrB,MACjBoB,EAAKhP,OAASiP,EAAIjP,OAClBgP,EAAKrB,SAAWsB,EAAItB,SACpBqB,EAAKnB,IAAMoB,EAAIpB,IAsCjB,GA9TA3M,EAAGuC,KAAO,SAAe8B,GACvB,OAAIA,aAAerE,GAIJ,OAARqE,GAA+B,kBAARA,GAC5BA,EAAIgI,YAAYQ,WAAa7M,EAAG6M,UAAYpO,MAAMC,QAAQ2F,EAAIqI,QAGlE1M,EAAG0L,IAAM,SAAcsC,EAAMvK,GAC3B,OAAIuK,EAAK5C,IAAI3H,GAAS,EAAUuK,EACzBvK,GAGTzD,EAAG4N,IAAM,SAAcI,EAAMvK,GAC3B,OAAIuK,EAAK5C,IAAI3H,GAAS,EAAUuK,EACzBvK,GAGTzD,EAAGoM,UAAUQ,MAAQ,SAAeN,EAAQC,EAAMC,GAChD,GAAsB,kBAAXF,EACT,OAAOtO,KAAKiQ,YAAY3B,EAAQC,EAAMC,GAGxC,GAAsB,kBAAXF,EACT,OAAOtO,KAAKkQ,WAAW5B,EAAQC,EAAMC,GAG1B,QAATD,IACFA,EAAO,IAETV,EAAOU,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAGnD,IAAIe,EAAQ,EACM,OAFlBhB,EAASA,EAAOrM,WAAWwE,QAAQ,OAAQ,KAEhC,KACT6I,IACAtP,KAAKyO,SAAW,GAGda,EAAQhB,EAAOxN,SACJ,KAATyN,EACFvO,KAAKmQ,UAAU7B,EAAQgB,EAAOd,IAE9BxO,KAAKoQ,WAAW9B,EAAQC,EAAMe,GACf,OAAXd,GACFxO,KAAKkQ,WAAWlQ,KAAK6C,UAAW0L,EAAMC,MAM9CxM,EAAGoM,UAAU6B,YAAc,SAAsB3B,EAAQC,EAAMC,GACzDF,EAAS,IACXtO,KAAKyO,SAAW,EAChBH,GAAUA,GAERA,EAAS,UACXtO,KAAK0O,MAAQ,CAAU,SAATJ,GACdtO,KAAKc,OAAS,GACLwN,EAAS,kBAClBtO,KAAK0O,MAAQ,CACF,SAATJ,EACCA,EAAS,SAAa,UAEzBtO,KAAKc,OAAS,IAEd+M,EAAOS,EAAS,kBAChBtO,KAAK0O,MAAQ,CACF,SAATJ,EACCA,EAAS,SAAa,SACvB,GAEFtO,KAAKc,OAAS,GAGD,OAAX0N,GAGJxO,KAAKkQ,WAAWlQ,KAAK6C,UAAW0L,EAAMC,IAGxCxM,EAAGoM,UAAU8B,WAAa,SAAqB5B,EAAQC,EAAMC,GAG3D,GADAX,EAAgC,kBAAlBS,EAAOxN,QACjBwN,EAAOxN,QAAU,EAGnB,OAFAd,KAAK0O,MAAQ,CAAC,GACd1O,KAAKc,OAAS,EACPd,KAGTA,KAAKc,OAAS6O,KAAKU,KAAK/B,EAAOxN,OAAS,GACxCd,KAAK0O,MAAQ,IAAIjO,MAAMT,KAAKc,QAC5B,IAAK,IAAIsB,EAAI,EAAGA,EAAIpC,KAAKc,OAAQsB,IAC/BpC,KAAK0O,MAAMtM,GAAK,EAGlB,IAAIkO,EAAGC,EACHC,EAAM,EACV,GAAe,OAAXhC,EACF,IAAKpM,EAAIkM,EAAOxN,OAAS,EAAGwP,EAAI,EAAGlO,GAAK,EAAGA,GAAK,EAC9CmO,EAAIjC,EAAOlM,GAAMkM,EAAOlM,EAAI,IAAM,EAAMkM,EAAOlM,EAAI,IAAM,GACzDpC,KAAK0O,MAAM4B,IAAOC,GAAKC,EAAO,SAC9BxQ,KAAK0O,MAAM4B,EAAI,GAAMC,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPF,UAGC,GAAe,OAAX9B,EACT,IAAKpM,EAAI,EAAGkO,EAAI,EAAGlO,EAAIkM,EAAOxN,OAAQsB,GAAK,EACzCmO,EAAIjC,EAAOlM,GAAMkM,EAAOlM,EAAI,IAAM,EAAMkM,EAAOlM,EAAI,IAAM,GACzDpC,KAAK0O,MAAM4B,IAAOC,GAAKC,EAAO,SAC9BxQ,KAAK0O,MAAM4B,EAAI,GAAMC,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPF,KAIN,OAAOtQ,KAAKyQ,UA2BdzO,EAAGoM,UAAU+B,UAAY,SAAoB7B,EAAQgB,EAAOd,GAE1DxO,KAAKc,OAAS6O,KAAKU,MAAM/B,EAAOxN,OAASwO,GAAS,GAClDtP,KAAK0O,MAAQ,IAAIjO,MAAMT,KAAKc,QAC5B,IAAK,IAAIsB,EAAI,EAAGA,EAAIpC,KAAKc,OAAQsB,IAC/BpC,KAAK0O,MAAMtM,GAAK,EAIlB,IAGImO,EAHAC,EAAM,EACNF,EAAI,EAGR,GAAe,OAAX9B,EACF,IAAKpM,EAAIkM,EAAOxN,OAAS,EAAGsB,GAAKkN,EAAOlN,GAAK,EAC3CmO,EAAIpB,EAAab,EAAQgB,EAAOlN,IAAMoO,EACtCxQ,KAAK0O,MAAM4B,IAAU,SAAJC,EACbC,GAAO,IACTA,GAAO,GACPF,GAAK,EACLtQ,KAAK0O,MAAM4B,IAAMC,IAAM,IAEvBC,GAAO,OAKX,IAAKpO,GADakM,EAAOxN,OAASwO,GACX,IAAM,EAAIA,EAAQ,EAAIA,EAAOlN,EAAIkM,EAAOxN,OAAQsB,GAAK,EAC1EmO,EAAIpB,EAAab,EAAQgB,EAAOlN,IAAMoO,EACtCxQ,KAAK0O,MAAM4B,IAAU,SAAJC,EACbC,GAAO,IACTA,GAAO,GACPF,GAAK,EACLtQ,KAAK0O,MAAM4B,IAAMC,IAAM,IAEvBC,GAAO,EAKbxQ,KAAKyQ,UA8BPzO,EAAGoM,UAAUgC,WAAa,SAAqB9B,EAAQC,EAAMe,GAE3DtP,KAAK0O,MAAQ,CAAC,GACd1O,KAAKc,OAAS,EAGd,IAAK,IAAI4P,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAWpC,EAClEmC,IAEFA,IACAC,EAAWA,EAAUpC,EAAQ,EAO7B,IALA,IAAIqC,EAAQtC,EAAOxN,OAASwO,EACxBuB,EAAMD,EAAQF,EACdnB,EAAMI,KAAKC,IAAIgB,EAAOA,EAAQC,GAAOvB,EAErCwB,EAAO,EACF1O,EAAIkN,EAAOlN,EAAImN,EAAKnN,GAAKsO,EAChCI,EAAOzB,EAAUf,EAAQlM,EAAGA,EAAIsO,EAASnC,GAEzCvO,KAAK+Q,MAAMJ,GACP3Q,KAAK0O,MAAM,GAAKoC,EAAO,SACzB9Q,KAAK0O,MAAM,IAAMoC,EAEjB9Q,KAAKgR,OAAOF,GAIhB,GAAY,IAARD,EAAW,CACb,IAAII,EAAM,EAGV,IAFAH,EAAOzB,EAAUf,EAAQlM,EAAGkM,EAAOxN,OAAQyN,GAEtCnM,EAAI,EAAGA,EAAIyO,EAAKzO,IACnB6O,GAAO1C,EAGTvO,KAAK+Q,MAAME,GACPjR,KAAK0O,MAAM,GAAKoC,EAAO,SACzB9Q,KAAK0O,MAAM,IAAMoC,EAEjB9Q,KAAKgR,OAAOF,GAIhB9Q,KAAKyQ,UAGPzO,EAAGoM,UAAU1I,KAAO,SAAeoK,GACjCA,EAAKpB,MAAQ,IAAIjO,MAAMT,KAAKc,QAC5B,IAAK,IAAIsB,EAAI,EAAGA,EAAIpC,KAAKc,OAAQsB,IAC/B0N,EAAKpB,MAAMtM,GAAKpC,KAAK0O,MAAMtM,GAE7B0N,EAAKhP,OAASd,KAAKc,OACnBgP,EAAKrB,SAAWzO,KAAKyO,SACrBqB,EAAKnB,IAAM3O,KAAK2O,KAUlB3M,EAAGoM,UAAU8C,MAAQ,SAAgBpB,GACnCD,EAAKC,EAAM9P,OAGbgC,EAAGoM,UAAU+C,MAAQ,WACnB,IAAI7E,EAAI,IAAItK,EAAG,MAEf,OADAhC,KAAK0F,KAAK4G,GACHA,GAGTtK,EAAGoM,UAAUgD,QAAU,SAAkBC,GACvC,KAAOrR,KAAKc,OAASuQ,GACnBrR,KAAK0O,MAAM1O,KAAKc,UAAY,EAE9B,OAAOd,MAITgC,EAAGoM,UAAUqC,OAAS,WACpB,KAAOzQ,KAAKc,OAAS,GAAqC,IAAhCd,KAAK0O,MAAM1O,KAAKc,OAAS,IACjDd,KAAKc,SAEP,OAAOd,KAAKsR,aAGdtP,EAAGoM,UAAUkD,UAAY,WAKvB,OAHoB,IAAhBtR,KAAKc,QAAkC,IAAlBd,KAAK0O,MAAM,KAClC1O,KAAKyO,SAAW,GAEXzO,MAKa,qBAAXuR,QAAgD,oBAAfA,OAAOC,IACjD,IACExP,EAAGoM,UAAUmD,OAAOC,IAAI,+BAAiCC,EACzD,MAAOnQ,GACPU,EAAGoM,UAAUqD,QAAUA,OAGzBzP,EAAGoM,UAAUqD,QAAUA,EAGzB,SAASA,IACP,OAAQzR,KAAK2O,IAAM,UAAY,SAAW3O,KAAKiC,SAAS,IAAM,IAiChE,IAAI6B,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGE4N,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAG9D3P,EAAGoM,UAAUnM,SAAW,SAAmBsM,EAAMqD,GAI/C,IAAIC,EACJ,GAHAD,EAAoB,EAAVA,GAAe,EAGZ,MAJbrD,EAAOA,GAAQ,KAIa,QAATA,EAAgB,CACjCsD,EAAM,GAGN,IAFA,IAAIrB,EAAM,EACNsB,EAAQ,EACH1P,EAAI,EAAGA,EAAIpC,KAAKc,OAAQsB,IAAK,CACpC,IAAImO,EAAIvQ,KAAK0O,MAAMtM,GACf0O,GAA+B,UAArBP,GAAKC,EAAOsB,IAAmB7P,SAAS,IAGpD4P,EADY,KADdC,EAASvB,IAAO,GAAKC,EAAQ,WACVpO,IAAMpC,KAAKc,OAAS,EAC/BgD,EAAM,EAAIgN,EAAKhQ,QAAUgQ,EAAOe,EAEhCf,EAAOe,GAEfrB,GAAO,IACI,KACTA,GAAO,GACPpO,KAMJ,IAHc,IAAV0P,IACFD,EAAMC,EAAM7P,SAAS,IAAM4P,GAEtBA,EAAI/Q,OAAS8Q,IAAY,GAC9BC,EAAM,IAAMA,EAKd,OAHsB,IAAlB7R,KAAKyO,WACPoD,EAAM,IAAMA,GAEPA,EAGT,GAAItD,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAIwD,EAAYL,EAAWnD,GAEvByD,EAAYL,EAAWpD,GAC3BsD,EAAM,GACN,IAAI3C,EAAIlP,KAAKmR,QAEb,IADAjC,EAAET,SAAW,GACLS,EAAE/N,UAAU,CAClB,IAAImL,EAAI4C,EAAE+C,MAAMD,GAAW/P,SAASsM,GAMlCsD,GALF3C,EAAIA,EAAEgD,MAAMF,IAEL7Q,SAGCmL,EAAIuF,EAFJ/N,EAAMiO,EAAYzF,EAAExL,QAAUwL,EAAIuF,EAQ5C,IAHI7R,KAAKmB,WACP0Q,EAAM,IAAMA,GAEPA,EAAI/Q,OAAS8Q,IAAY,GAC9BC,EAAM,IAAMA,EAKd,OAHsB,IAAlB7R,KAAKyO,WACPoD,EAAM,IAAMA,GAEPA,EAGThE,GAAO,EAAO,oCAGhB7L,EAAGoM,UAAUhI,SAAW,WACtB,IAAIjE,EAAMnC,KAAK0O,MAAM,GASrB,OARoB,IAAhB1O,KAAKc,OACPqB,GAAuB,SAAhBnC,KAAK0O,MAAM,GACO,IAAhB1O,KAAKc,QAAkC,IAAlBd,KAAK0O,MAAM,GAEzCvM,GAAO,iBAAoC,SAAhBnC,KAAK0O,MAAM,GAC7B1O,KAAKc,OAAS,GACvB+M,GAAO,EAAO,8CAEU,IAAlB7N,KAAKyO,UAAmBtM,EAAMA,GAGxCH,EAAGoM,UAAUjE,OAAS,WACpB,OAAOnK,KAAKiC,SAAS,GAAI,IAGvBzD,IACFwD,EAAGoM,UAAUhO,SAAW,SAAmBoO,EAAQ1N,GACjD,OAAOd,KAAKyE,YAAYjG,EAAQgQ,EAAQ1N,KAI5CkB,EAAGoM,UAAUvL,QAAU,SAAkB2L,EAAQ1N,GAC/C,OAAOd,KAAKyE,YAAYhE,MAAO+N,EAAQ1N,IA4gBzC,SAASqR,EAAYpI,EAAM1D,EAAKwL,GAC9BA,EAAIpD,SAAWpI,EAAIoI,SAAW1E,EAAK0E,SACnC,IAAIiB,EAAO3F,EAAKjJ,OAASuF,EAAIvF,OAAU,EACvC+Q,EAAI/Q,OAAS4O,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAI9J,EAAoB,EAAhBmE,EAAK2E,MAAM,GACfe,EAAmB,EAAfpJ,EAAIqI,MAAM,GACdpC,EAAI1G,EAAI6J,EAER2C,EAAS,SAAJ9F,EACLwF,EAASxF,EAAI,SAAa,EAC9BuF,EAAInD,MAAM,GAAK0D,EAEf,IAAK,IAAInL,EAAI,EAAGA,EAAIyI,EAAKzI,IAAK,CAM5B,IAHA,IAAIoL,EAASP,IAAU,GACnBQ,EAAgB,SAARR,EACRS,EAAO5C,KAAKC,IAAI3I,EAAGZ,EAAIvF,OAAS,GAC3BwP,EAAIX,KAAKjC,IAAI,EAAGzG,EAAI8C,EAAKjJ,OAAS,GAAIwP,GAAKiC,EAAMjC,IAAK,CAC7D,IAAIlO,EAAK6E,EAAIqJ,EAAK,EAIlB+B,IADA/F,GAFA1G,EAAoB,EAAhBmE,EAAK2E,MAAMtM,KACfqN,EAAmB,EAAfpJ,EAAIqI,MAAM4B,IACFgC,GACG,SAAa,EAC5BA,EAAY,SAAJhG,EAEVuF,EAAInD,MAAMzH,GAAa,EAARqL,EACfR,EAAiB,EAATO,EAQV,OANc,IAAVP,EACFD,EAAInD,MAAMzH,GAAa,EAAR6K,EAEfD,EAAI/Q,SAGC+Q,EAAIpB,SAxiBbzO,EAAGoM,UAAU3J,YAAc,SAAsB+N,EAAWhE,EAAQ1N,GAClEd,KAAKyQ,SAEL,IAAI7H,EAAa5I,KAAK4I,aAClB6J,EAAY3R,GAAU6O,KAAKjC,IAAI,EAAG9E,GACtCiF,EAAOjF,GAAc6J,EAAW,yCAChC5E,EAAO4E,EAAY,EAAG,+BAEtB,IAAIC,EAfS,SAAmBF,EAAWnB,GAC3C,OAAImB,EAAUlN,YACLkN,EAAUlN,YAAY+L,GAExB,IAAImB,EAAUnB,GAWXsB,CAASH,EAAWC,GAG9B,OADAzS,KAAK,gBADoB,OAAXwO,EAAkB,KAAO,OACRkE,EAAK9J,GAC7B8J,GAGT1Q,EAAGoM,UAAUwE,eAAiB,SAAyBF,EAAK9J,GAI1D,IAHA,IAAIiK,EAAW,EACXf,EAAQ,EAEH1P,EAAI,EAAG0Q,EAAQ,EAAG1Q,EAAIpC,KAAKc,OAAQsB,IAAK,CAC/C,IAAI0O,EAAQ9Q,KAAK0O,MAAMtM,IAAM0Q,EAAShB,EAEtCY,EAAIG,KAAqB,IAAP/B,EACd+B,EAAWH,EAAI5R,SACjB4R,EAAIG,KAAe/B,GAAQ,EAAK,KAE9B+B,EAAWH,EAAI5R,SACjB4R,EAAIG,KAAe/B,GAAQ,GAAM,KAGrB,IAAVgC,GACED,EAAWH,EAAI5R,SACjB4R,EAAIG,KAAe/B,GAAQ,GAAM,KAEnCgB,EAAQ,EACRgB,EAAQ,IAERhB,EAAQhB,IAAS,GACjBgC,GAAS,GAIb,GAAID,EAAWH,EAAI5R,OAGjB,IAFA4R,EAAIG,KAAcf,EAEXe,EAAWH,EAAI5R,QACpB4R,EAAIG,KAAc,GAKxB7Q,EAAGoM,UAAU2E,eAAiB,SAAyBL,EAAK9J,GAI1D,IAHA,IAAIiK,EAAWH,EAAI5R,OAAS,EACxBgR,EAAQ,EAEH1P,EAAI,EAAG0Q,EAAQ,EAAG1Q,EAAIpC,KAAKc,OAAQsB,IAAK,CAC/C,IAAI0O,EAAQ9Q,KAAK0O,MAAMtM,IAAM0Q,EAAShB,EAEtCY,EAAIG,KAAqB,IAAP/B,EACd+B,GAAY,IACdH,EAAIG,KAAe/B,GAAQ,EAAK,KAE9B+B,GAAY,IACdH,EAAIG,KAAe/B,GAAQ,GAAM,KAGrB,IAAVgC,GACED,GAAY,IACdH,EAAIG,KAAe/B,GAAQ,GAAM,KAEnCgB,EAAQ,EACRgB,EAAQ,IAERhB,EAAQhB,IAAS,GACjBgC,GAAS,GAIb,GAAID,GAAY,EAGd,IAFAH,EAAIG,KAAcf,EAEXe,GAAY,GACjBH,EAAIG,KAAc,GAKpBlD,KAAKqD,MACPhR,EAAGoM,UAAU6E,WAAa,SAAqB1C,GAC7C,OAAO,GAAKZ,KAAKqD,MAAMzC,IAGzBvO,EAAGoM,UAAU6E,WAAa,SAAqB1C,GAC7C,IAAI2C,EAAI3C,EACJjE,EAAI,EAiBR,OAhBI4G,GAAK,OACP5G,GAAK,GACL4G,KAAO,IAELA,GAAK,KACP5G,GAAK,EACL4G,KAAO,GAELA,GAAK,IACP5G,GAAK,EACL4G,KAAO,GAELA,GAAK,IACP5G,GAAK,EACL4G,KAAO,GAEF5G,EAAI4G,GAIflR,EAAGoM,UAAU+E,UAAY,SAAoB5C,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAI2C,EAAI3C,EACJjE,EAAI,EAoBR,OAnBqB,KAAZ,KAAJ4G,KACH5G,GAAK,GACL4G,KAAO,IAEU,KAAV,IAAJA,KACH5G,GAAK,EACL4G,KAAO,GAES,KAAT,GAAJA,KACH5G,GAAK,EACL4G,KAAO,GAES,KAAT,EAAJA,KACH5G,GAAK,EACL4G,KAAO,GAES,KAAT,EAAJA,IACH5G,IAEKA,GAITtK,EAAGoM,UAAUgF,UAAY,WACvB,IAAI7C,EAAIvQ,KAAK0O,MAAM1O,KAAKc,OAAS,GAC7BuS,EAAKrT,KAAKiT,WAAW1C,GACzB,OAA2B,IAAnBvQ,KAAKc,OAAS,GAAUuS,GAiBlCrR,EAAGoM,UAAUkF,SAAW,WACtB,GAAItT,KAAKmB,SAAU,OAAO,EAG1B,IADA,IAAImL,EAAI,EACClK,EAAI,EAAGA,EAAIpC,KAAKc,OAAQsB,IAAK,CACpC,IAAIqN,EAAIzP,KAAKmT,UAAUnT,KAAK0O,MAAMtM,IAElC,GADAkK,GAAKmD,EACK,KAANA,EAAU,MAEhB,OAAOnD,GAGTtK,EAAGoM,UAAUxF,WAAa,WACxB,OAAO+G,KAAKU,KAAKrQ,KAAKoT,YAAc,IAGtCpR,EAAGoM,UAAU7H,OAAS,SAAiBgN,GACrC,OAAsB,IAAlBvT,KAAKyO,SACAzO,KAAKwT,MAAMC,MAAMF,GAAOG,MAAM,GAEhC1T,KAAKmR,SAGdnP,EAAGoM,UAAU9H,SAAW,SAAmBiN,GACzC,OAAIvT,KAAK2T,MAAMJ,EAAQ,GACdvT,KAAK4T,KAAKL,GAAOG,MAAM,GAAGG,OAE5B7T,KAAKmR,SAGdnP,EAAGoM,UAAUjI,MAAQ,WACnB,OAAyB,IAAlBnG,KAAKyO,UAIdzM,EAAGoM,UAAU0F,IAAM,WACjB,OAAO9T,KAAKmR,QAAQ0C,QAGtB7R,EAAGoM,UAAUyF,KAAO,WAKlB,OAJK7T,KAAKmB,WACRnB,KAAKyO,UAAY,GAGZzO,MAITgC,EAAGoM,UAAU2F,KAAO,SAAe1N,GACjC,KAAOrG,KAAKc,OAASuF,EAAIvF,QACvBd,KAAK0O,MAAM1O,KAAKc,UAAY,EAG9B,IAAK,IAAIsB,EAAI,EAAGA,EAAIiE,EAAIvF,OAAQsB,IAC9BpC,KAAK0O,MAAMtM,GAAKpC,KAAK0O,MAAMtM,GAAKiE,EAAIqI,MAAMtM,GAG5C,OAAOpC,KAAKyQ,UAGdzO,EAAGoM,UAAU4F,IAAM,SAAc3N,GAE/B,OADAwH,EAA0C,KAAlC7N,KAAKyO,SAAWpI,EAAIoI,WACrBzO,KAAK+T,KAAK1N,IAInBrE,EAAGoM,UAAU6F,GAAK,SAAa5N,GAC7B,OAAIrG,KAAKc,OAASuF,EAAIvF,OAAed,KAAKmR,QAAQ6C,IAAI3N,GAC/CA,EAAI8K,QAAQ6C,IAAIhU,OAGzBgC,EAAGoM,UAAU8F,IAAM,SAAc7N,GAC/B,OAAIrG,KAAKc,OAASuF,EAAIvF,OAAed,KAAKmR,QAAQ4C,KAAK1N,GAChDA,EAAI8K,QAAQ4C,KAAK/T,OAI1BgC,EAAGoM,UAAU+F,MAAQ,SAAgB9N,GAEnC,IAAIoJ,EAEFA,EADEzP,KAAKc,OAASuF,EAAIvF,OAChBuF,EAEArG,KAGN,IAAK,IAAIoC,EAAI,EAAGA,EAAIqN,EAAE3O,OAAQsB,IAC5BpC,KAAK0O,MAAMtM,GAAKpC,KAAK0O,MAAMtM,GAAKiE,EAAIqI,MAAMtM,GAK5C,OAFApC,KAAKc,OAAS2O,EAAE3O,OAETd,KAAKyQ,UAGdzO,EAAGoM,UAAUgG,KAAO,SAAe/N,GAEjC,OADAwH,EAA0C,KAAlC7N,KAAKyO,SAAWpI,EAAIoI,WACrBzO,KAAKmU,MAAM9N,IAIpBrE,EAAGoM,UAAUiG,IAAM,SAAchO,GAC/B,OAAIrG,KAAKc,OAASuF,EAAIvF,OAAed,KAAKmR,QAAQiD,KAAK/N,GAChDA,EAAI8K,QAAQiD,KAAKpU,OAG1BgC,EAAGoM,UAAUkG,KAAO,SAAejO,GACjC,OAAIrG,KAAKc,OAASuF,EAAIvF,OAAed,KAAKmR,QAAQgD,MAAM9N,GACjDA,EAAI8K,QAAQgD,MAAMnU,OAI3BgC,EAAGoM,UAAUmG,MAAQ,SAAgBlO,GAEnC,IAAIT,EACA6J,EACAzP,KAAKc,OAASuF,EAAIvF,QACpB8E,EAAI5F,KACJyP,EAAIpJ,IAEJT,EAAIS,EACJoJ,EAAIzP,MAGN,IAAK,IAAIoC,EAAI,EAAGA,EAAIqN,EAAE3O,OAAQsB,IAC5BpC,KAAK0O,MAAMtM,GAAKwD,EAAE8I,MAAMtM,GAAKqN,EAAEf,MAAMtM,GAGvC,GAAIpC,OAAS4F,EACX,KAAOxD,EAAIwD,EAAE9E,OAAQsB,IACnBpC,KAAK0O,MAAMtM,GAAKwD,EAAE8I,MAAMtM,GAM5B,OAFApC,KAAKc,OAAS8E,EAAE9E,OAETd,KAAKyQ,UAGdzO,EAAGoM,UAAUoG,KAAO,SAAenO,GAEjC,OADAwH,EAA0C,KAAlC7N,KAAKyO,SAAWpI,EAAIoI,WACrBzO,KAAKuU,MAAMlO,IAIpBrE,EAAGoM,UAAUqG,IAAM,SAAcpO,GAC/B,OAAIrG,KAAKc,OAASuF,EAAIvF,OAAed,KAAKmR,QAAQqD,KAAKnO,GAChDA,EAAI8K,QAAQqD,KAAKxU,OAG1BgC,EAAGoM,UAAUsG,KAAO,SAAerO,GACjC,OAAIrG,KAAKc,OAASuF,EAAIvF,OAAed,KAAKmR,QAAQoD,MAAMlO,GACjDA,EAAI8K,QAAQoD,MAAMvU,OAI3BgC,EAAGoM,UAAUqF,MAAQ,SAAgBF,GACnC1F,EAAwB,kBAAV0F,GAAsBA,GAAS,GAE7C,IAAIoB,EAAsC,EAAxBhF,KAAKU,KAAKkD,EAAQ,IAChCqB,EAAWrB,EAAQ,GAGvBvT,KAAKoR,QAAQuD,GAETC,EAAW,GACbD,IAIF,IAAK,IAAIvS,EAAI,EAAGA,EAAIuS,EAAavS,IAC/BpC,KAAK0O,MAAMtM,GAAsB,UAAhBpC,KAAK0O,MAAMtM,GAS9B,OALIwS,EAAW,IACb5U,KAAK0O,MAAMtM,IAAMpC,KAAK0O,MAAMtM,GAAM,UAAc,GAAKwS,GAIhD5U,KAAKyQ,UAGdzO,EAAGoM,UAAUwF,KAAO,SAAeL,GACjC,OAAOvT,KAAKmR,QAAQsC,MAAMF,IAI5BvR,EAAGoM,UAAUyG,KAAO,SAAeC,EAAKhH,GACtCD,EAAsB,kBAARiH,GAAoBA,GAAO,GAEzC,IAAItE,EAAOsE,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARA9U,KAAKoR,QAAQZ,EAAM,GAGjBxQ,KAAK0O,MAAM8B,GADT1C,EACgB9N,KAAK0O,MAAM8B,GAAQ,GAAKuE,EAExB/U,KAAK0O,MAAM8B,KAAS,GAAKuE,GAGtC/U,KAAKyQ,UAIdzO,EAAGoM,UAAU4G,KAAO,SAAe3O,GACjC,IAAIiG,EAkBA1G,EAAG6J,EAfP,GAAsB,IAAlBzP,KAAKyO,UAAmC,IAAjBpI,EAAIoI,SAI7B,OAHAzO,KAAKyO,SAAW,EAChBnC,EAAItM,KAAKiV,KAAK5O,GACdrG,KAAKyO,UAAY,EACVzO,KAAKsR,YAGP,GAAsB,IAAlBtR,KAAKyO,UAAmC,IAAjBpI,EAAIoI,SAIpC,OAHApI,EAAIoI,SAAW,EACfnC,EAAItM,KAAKiV,KAAK5O,GACdA,EAAIoI,SAAW,EACRnC,EAAEgF,YAKPtR,KAAKc,OAASuF,EAAIvF,QACpB8E,EAAI5F,KACJyP,EAAIpJ,IAEJT,EAAIS,EACJoJ,EAAIzP,MAIN,IADA,IAAI8R,EAAQ,EACH1P,EAAI,EAAGA,EAAIqN,EAAE3O,OAAQsB,IAC5BkK,GAAkB,EAAb1G,EAAE8I,MAAMtM,KAAwB,EAAbqN,EAAEf,MAAMtM,IAAU0P,EAC1C9R,KAAK0O,MAAMtM,GAAS,SAAJkK,EAChBwF,EAAQxF,IAAM,GAEhB,KAAiB,IAAVwF,GAAe1P,EAAIwD,EAAE9E,OAAQsB,IAClCkK,GAAkB,EAAb1G,EAAE8I,MAAMtM,IAAU0P,EACvB9R,KAAK0O,MAAMtM,GAAS,SAAJkK,EAChBwF,EAAQxF,IAAM,GAIhB,GADAtM,KAAKc,OAAS8E,EAAE9E,OACF,IAAVgR,EACF9R,KAAK0O,MAAM1O,KAAKc,QAAUgR,EAC1B9R,KAAKc,cAEA,GAAI8E,IAAM5F,KACf,KAAOoC,EAAIwD,EAAE9E,OAAQsB,IACnBpC,KAAK0O,MAAMtM,GAAKwD,EAAE8I,MAAMtM,GAI5B,OAAOpC,MAITgC,EAAGoM,UAAU8G,IAAM,SAAc7O,GAC/B,IAAIqM,EACJ,OAAqB,IAAjBrM,EAAIoI,UAAoC,IAAlBzO,KAAKyO,UAC7BpI,EAAIoI,SAAW,EACfiE,EAAM1S,KAAK4L,IAAIvF,GACfA,EAAIoI,UAAY,EACTiE,GACmB,IAAjBrM,EAAIoI,UAAoC,IAAlBzO,KAAKyO,UACpCzO,KAAKyO,SAAW,EAChBiE,EAAMrM,EAAIuF,IAAI5L,MACdA,KAAKyO,SAAW,EACTiE,GAGL1S,KAAKc,OAASuF,EAAIvF,OAAed,KAAKmR,QAAQ6D,KAAK3O,GAEhDA,EAAI8K,QAAQ6D,KAAKhV,OAI1BgC,EAAGoM,UAAU6G,KAAO,SAAe5O,GAEjC,GAAqB,IAAjBA,EAAIoI,SAAgB,CACtBpI,EAAIoI,SAAW,EACf,IAAInC,EAAItM,KAAKgV,KAAK3O,GAElB,OADAA,EAAIoI,SAAW,EACRnC,EAAEgF,YAGJ,GAAsB,IAAlBtR,KAAKyO,SAId,OAHAzO,KAAKyO,SAAW,EAChBzO,KAAKgV,KAAK3O,GACVrG,KAAKyO,SAAW,EACTzO,KAAKsR,YAId,IAWI1L,EAAG6J,EAXHrC,EAAMpN,KAAKoN,IAAI/G,GAGnB,GAAY,IAAR+G,EAIF,OAHApN,KAAKyO,SAAW,EAChBzO,KAAKc,OAAS,EACdd,KAAK0O,MAAM,GAAK,EACT1O,KAKLoN,EAAM,GACRxH,EAAI5F,KACJyP,EAAIpJ,IAEJT,EAAIS,EACJoJ,EAAIzP,MAIN,IADA,IAAI8R,EAAQ,EACH1P,EAAI,EAAGA,EAAIqN,EAAE3O,OAAQsB,IAE5B0P,GADAxF,GAAkB,EAAb1G,EAAE8I,MAAMtM,KAAwB,EAAbqN,EAAEf,MAAMtM,IAAU0P,IAC7B,GACb9R,KAAK0O,MAAMtM,GAAS,SAAJkK,EAElB,KAAiB,IAAVwF,GAAe1P,EAAIwD,EAAE9E,OAAQsB,IAElC0P,GADAxF,GAAkB,EAAb1G,EAAE8I,MAAMtM,IAAU0P,IACV,GACb9R,KAAK0O,MAAMtM,GAAS,SAAJkK,EAIlB,GAAc,IAAVwF,GAAe1P,EAAIwD,EAAE9E,QAAU8E,IAAM5F,KACvC,KAAOoC,EAAIwD,EAAE9E,OAAQsB,IACnBpC,KAAK0O,MAAMtM,GAAKwD,EAAE8I,MAAMtM,GAU5B,OANApC,KAAKc,OAAS6O,KAAKjC,IAAI1N,KAAKc,OAAQsB,GAEhCwD,IAAM5F,OACRA,KAAKyO,SAAW,GAGXzO,KAAKyQ,UAIdzO,EAAGoM,UAAUxC,IAAM,SAAcvF,GAC/B,OAAOrG,KAAKmR,QAAQ8D,KAAK5O,IA+C3B,IAAI8O,EAAc,SAAsBpL,EAAM1D,EAAKwL,GACjD,IAIIO,EACAgD,EACA/B,EANAzN,EAAImE,EAAK2E,MACTe,EAAIpJ,EAAIqI,MACR2G,EAAIxD,EAAInD,MACRQ,EAAI,EAIJoG,EAAY,EAAP1P,EAAE,GACP2P,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP7P,EAAE,GACP8P,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPhQ,EAAE,GACPiQ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPnQ,EAAE,GACPoQ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPtQ,EAAE,GACPuQ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPzQ,EAAE,GACP0Q,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP5Q,EAAE,GACP6Q,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP/Q,EAAE,GACPgR,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPlR,EAAE,GACPmR,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPrR,EAAE,GACPsR,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP3H,EAAE,GACP4H,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP9H,EAAE,GACP+H,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPjI,EAAE,GACPkI,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPpI,EAAE,GACPqI,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPvI,EAAE,GACPwI,EAAW,KAALD,EACNE,GAAMF,IAAO,GACbG,GAAY,EAAP1I,EAAE,GACP2I,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP7I,EAAE,GACP8I,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPhJ,EAAE,GACPiJ,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPnJ,EAAE,GACPoJ,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPtJ,EAAE,GACPuJ,GAAW,KAALD,GACNE,GAAMF,KAAO,GAEjBlH,EAAIpD,SAAW1E,EAAK0E,SAAWpI,EAAIoI,SACnCoD,EAAI/Q,OAAS,GAMb,IAAIoY,IAAQhK,GAJZkD,EAAKzC,KAAKwJ,KAAK5D,EAAK8B,IAIE,KAAa,MAFnCjC,GADAA,EAAMzF,KAAKwJ,KAAK5D,EAAK+B,IACR3H,KAAKwJ,KAAK3D,EAAK6B,GAAQ,KAEU,IAAO,EACrDnI,IAFAmE,EAAK1D,KAAKwJ,KAAK3D,EAAK8B,KAEPlC,IAAQ,IAAO,IAAM8D,KAAO,IAAO,EAChDA,IAAM,SAEN9G,EAAKzC,KAAKwJ,KAAKzD,EAAK2B,GAEpBjC,GADAA,EAAMzF,KAAKwJ,KAAKzD,EAAK4B,IACR3H,KAAKwJ,KAAKxD,EAAK0B,GAAQ,EACpChE,EAAK1D,KAAKwJ,KAAKxD,EAAK2B,GAKpB,IAAI8B,IAAQlK,GAJZkD,EAAMA,EAAKzC,KAAKwJ,KAAK5D,EAAKiC,GAAQ,GAIZ,KAAa,MAFnCpC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK5D,EAAKkC,GAAQ,GACvB9H,KAAKwJ,KAAK3D,EAAKgC,GAAQ,KAEU,IAAO,EACrDtI,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK3D,EAAKiC,GAAQ,IAErBrC,IAAQ,IAAO,IAAMgE,KAAO,IAAO,EAChDA,IAAM,SAENhH,EAAKzC,KAAKwJ,KAAKtD,EAAKwB,GAEpBjC,GADAA,EAAMzF,KAAKwJ,KAAKtD,EAAKyB,IACR3H,KAAKwJ,KAAKrD,EAAKuB,GAAQ,EACpChE,EAAK1D,KAAKwJ,KAAKrD,EAAKwB,GACpBlF,EAAMA,EAAKzC,KAAKwJ,KAAKzD,EAAK8B,GAAQ,EAElCpC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKzD,EAAK+B,GAAQ,GACvB9H,KAAKwJ,KAAKxD,EAAK6B,GAAQ,EACpCnE,EAAMA,EAAK1D,KAAKwJ,KAAKxD,EAAK8B,GAAQ,EAKlC,IAAI4B,IAAQnK,GAJZkD,EAAMA,EAAKzC,KAAKwJ,KAAK5D,EAAKoC,GAAQ,GAIZ,KAAa,MAFnCvC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK5D,EAAKqC,GAAQ,GACvBjI,KAAKwJ,KAAK3D,EAAKmC,GAAQ,KAEU,IAAO,EACrDzI,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK3D,EAAKoC,GAAQ,IAErBxC,IAAQ,IAAO,IAAMiE,KAAO,IAAO,EAChDA,IAAM,SAENjH,EAAKzC,KAAKwJ,KAAKnD,EAAKqB,GAEpBjC,GADAA,EAAMzF,KAAKwJ,KAAKnD,EAAKsB,IACR3H,KAAKwJ,KAAKlD,EAAKoB,GAAQ,EACpChE,EAAK1D,KAAKwJ,KAAKlD,EAAKqB,GACpBlF,EAAMA,EAAKzC,KAAKwJ,KAAKtD,EAAK2B,GAAQ,EAElCpC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKtD,EAAK4B,GAAQ,GACvB9H,KAAKwJ,KAAKrD,EAAK0B,GAAQ,EACpCnE,EAAMA,EAAK1D,KAAKwJ,KAAKrD,EAAK2B,GAAQ,EAClCrF,EAAMA,EAAKzC,KAAKwJ,KAAKzD,EAAKiC,GAAQ,EAElCvC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKzD,EAAKkC,GAAQ,GACvBjI,KAAKwJ,KAAKxD,EAAKgC,GAAQ,EACpCtE,EAAMA,EAAK1D,KAAKwJ,KAAKxD,EAAKiC,GAAQ,EAKlC,IAAI0B,IAAQpK,GAJZkD,EAAMA,EAAKzC,KAAKwJ,KAAK5D,EAAKuC,GAAQ,GAIZ,KAAa,MAFnC1C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK5D,EAAKwC,GAAQ,GACvBpI,KAAKwJ,KAAK3D,EAAKsC,GAAQ,KAEU,IAAO,EACrD5I,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK3D,EAAKuC,GAAQ,IAErB3C,IAAQ,IAAO,IAAMkE,KAAO,IAAO,EAChDA,IAAM,SAENlH,EAAKzC,KAAKwJ,KAAKhD,EAAKkB,GAEpBjC,GADAA,EAAMzF,KAAKwJ,KAAKhD,EAAKmB,IACR3H,KAAKwJ,KAAK/C,EAAKiB,GAAQ,EACpChE,EAAK1D,KAAKwJ,KAAK/C,EAAKkB,GACpBlF,EAAMA,EAAKzC,KAAKwJ,KAAKnD,EAAKwB,GAAQ,EAElCpC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKnD,EAAKyB,GAAQ,GACvB9H,KAAKwJ,KAAKlD,EAAKuB,GAAQ,EACpCnE,EAAMA,EAAK1D,KAAKwJ,KAAKlD,EAAKwB,GAAQ,EAClCrF,EAAMA,EAAKzC,KAAKwJ,KAAKtD,EAAK8B,GAAQ,EAElCvC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKtD,EAAK+B,GAAQ,GACvBjI,KAAKwJ,KAAKrD,EAAK6B,GAAQ,EACpCtE,EAAMA,EAAK1D,KAAKwJ,KAAKrD,EAAK8B,GAAQ,EAClCxF,EAAMA,EAAKzC,KAAKwJ,KAAKzD,EAAKoC,GAAQ,EAElC1C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKzD,EAAKqC,GAAQ,GACvBpI,KAAKwJ,KAAKxD,EAAKmC,GAAQ,EACpCzE,EAAMA,EAAK1D,KAAKwJ,KAAKxD,EAAKoC,GAAQ,EAKlC,IAAIwB,IAAQrK,GAJZkD,EAAMA,EAAKzC,KAAKwJ,KAAK5D,EAAK0C,GAAQ,GAIZ,KAAa,MAFnC7C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK5D,EAAK2C,IAAQ,GACvBvI,KAAKwJ,KAAK3D,EAAKyC,GAAQ,KAEU,IAAO,EACrD/I,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK3D,EAAK0C,IAAQ,IAErB9C,IAAQ,IAAO,IAAMmE,KAAO,IAAO,EAChDA,IAAM,SAENnH,EAAKzC,KAAKwJ,KAAK7C,EAAKe,GAEpBjC,GADAA,EAAMzF,KAAKwJ,KAAK7C,EAAKgB,IACR3H,KAAKwJ,KAAK5C,EAAKc,GAAQ,EACpChE,EAAK1D,KAAKwJ,KAAK5C,EAAKe,GACpBlF,EAAMA,EAAKzC,KAAKwJ,KAAKhD,EAAKqB,GAAQ,EAElCpC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKhD,EAAKsB,GAAQ,GACvB9H,KAAKwJ,KAAK/C,EAAKoB,GAAQ,EACpCnE,EAAMA,EAAK1D,KAAKwJ,KAAK/C,EAAKqB,GAAQ,EAClCrF,EAAMA,EAAKzC,KAAKwJ,KAAKnD,EAAK2B,GAAQ,EAElCvC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKnD,EAAK4B,GAAQ,GACvBjI,KAAKwJ,KAAKlD,EAAK0B,GAAQ,EACpCtE,EAAMA,EAAK1D,KAAKwJ,KAAKlD,EAAK2B,GAAQ,EAClCxF,EAAMA,EAAKzC,KAAKwJ,KAAKtD,EAAKiC,GAAQ,EAElC1C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKtD,EAAKkC,GAAQ,GACvBpI,KAAKwJ,KAAKrD,EAAKgC,GAAQ,EACpCzE,EAAMA,EAAK1D,KAAKwJ,KAAKrD,EAAKiC,GAAQ,EAClC3F,EAAMA,EAAKzC,KAAKwJ,KAAKzD,EAAKuC,GAAQ,EAElC7C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKzD,EAAKwC,IAAQ,GACvBvI,KAAKwJ,KAAKxD,EAAKsC,GAAQ,EACpC5E,EAAMA,EAAK1D,KAAKwJ,KAAKxD,EAAKuC,IAAQ,EAKlC,IAAIsB,IAAQtK,GAJZkD,EAAMA,EAAKzC,KAAKwJ,KAAK5D,EAAK6C,IAAQ,GAIZ,KAAa,MAFnChD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK5D,EAAK8C,IAAQ,GACvB1I,KAAKwJ,KAAK3D,EAAK4C,IAAQ,KAEU,IAAO,EACrDlJ,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK3D,EAAK6C,IAAQ,IAErBjD,IAAQ,IAAO,IAAMoE,KAAO,IAAO,EAChDA,IAAM,SAENpH,EAAKzC,KAAKwJ,KAAK1C,EAAKY,GAEpBjC,GADAA,EAAMzF,KAAKwJ,KAAK1C,EAAKa,IACR3H,KAAKwJ,KAAKzC,EAAKW,GAAQ,EACpChE,EAAK1D,KAAKwJ,KAAKzC,EAAKY,GACpBlF,EAAMA,EAAKzC,KAAKwJ,KAAK7C,EAAKkB,GAAQ,EAElCpC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK7C,EAAKmB,GAAQ,GACvB9H,KAAKwJ,KAAK5C,EAAKiB,GAAQ,EACpCnE,EAAMA,EAAK1D,KAAKwJ,KAAK5C,EAAKkB,GAAQ,EAClCrF,EAAMA,EAAKzC,KAAKwJ,KAAKhD,EAAKwB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKhD,EAAKyB,GAAQ,GACvBjI,KAAKwJ,KAAK/C,EAAKuB,GAAQ,EACpCtE,EAAMA,EAAK1D,KAAKwJ,KAAK/C,EAAKwB,GAAQ,EAClCxF,EAAMA,EAAKzC,KAAKwJ,KAAKnD,EAAK8B,GAAQ,EAElC1C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKnD,EAAK+B,GAAQ,GACvBpI,KAAKwJ,KAAKlD,EAAK6B,GAAQ,EACpCzE,EAAMA,EAAK1D,KAAKwJ,KAAKlD,EAAK8B,GAAQ,EAClC3F,EAAMA,EAAKzC,KAAKwJ,KAAKtD,EAAKoC,GAAQ,EAElC7C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKtD,EAAKqC,IAAQ,GACvBvI,KAAKwJ,KAAKrD,EAAKmC,GAAQ,EACpC5E,EAAMA,EAAK1D,KAAKwJ,KAAKrD,EAAKoC,IAAQ,EAClC9F,EAAMA,EAAKzC,KAAKwJ,KAAKzD,EAAK0C,IAAQ,EAElChD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKzD,EAAK2C,IAAQ,GACvB1I,KAAKwJ,KAAKxD,EAAKyC,IAAQ,EACpC/E,EAAMA,EAAK1D,KAAKwJ,KAAKxD,EAAK0C,IAAQ,EAKlC,IAAIoB,IAAQvK,GAJZkD,EAAMA,EAAKzC,KAAKwJ,KAAK5D,EAAKgD,IAAQ,GAIZ,KAAa,MAFnCnD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK5D,EAAKiD,IAAQ,GACvB7I,KAAKwJ,KAAK3D,EAAK+C,IAAQ,KAEU,IAAO,EACrDrJ,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK3D,EAAKgD,IAAQ,IAErBpD,IAAQ,IAAO,IAAMqE,KAAO,IAAO,EAChDA,IAAM,SAENrH,EAAKzC,KAAKwJ,KAAKvC,EAAKS,GAEpBjC,GADAA,EAAMzF,KAAKwJ,KAAKvC,EAAKU,IACR3H,KAAKwJ,KAAKtC,EAAKQ,GAAQ,EACpChE,EAAK1D,KAAKwJ,KAAKtC,EAAKS,GACpBlF,EAAMA,EAAKzC,KAAKwJ,KAAK1C,EAAKe,GAAQ,EAElCpC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK1C,EAAKgB,GAAQ,GACvB9H,KAAKwJ,KAAKzC,EAAKc,GAAQ,EACpCnE,EAAMA,EAAK1D,KAAKwJ,KAAKzC,EAAKe,GAAQ,EAClCrF,EAAMA,EAAKzC,KAAKwJ,KAAK7C,EAAKqB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK7C,EAAKsB,GAAQ,GACvBjI,KAAKwJ,KAAK5C,EAAKoB,GAAQ,EACpCtE,EAAMA,EAAK1D,KAAKwJ,KAAK5C,EAAKqB,GAAQ,EAClCxF,EAAMA,EAAKzC,KAAKwJ,KAAKhD,EAAK2B,GAAQ,EAElC1C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKhD,EAAK4B,GAAQ,GACvBpI,KAAKwJ,KAAK/C,EAAK0B,GAAQ,EACpCzE,EAAMA,EAAK1D,KAAKwJ,KAAK/C,EAAK2B,GAAQ,EAClC3F,EAAMA,EAAKzC,KAAKwJ,KAAKnD,EAAKiC,GAAQ,EAElC7C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKnD,EAAKkC,IAAQ,GACvBvI,KAAKwJ,KAAKlD,EAAKgC,GAAQ,EACpC5E,EAAMA,EAAK1D,KAAKwJ,KAAKlD,EAAKiC,IAAQ,EAClC9F,EAAMA,EAAKzC,KAAKwJ,KAAKtD,EAAKuC,IAAQ,EAElChD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKtD,EAAKwC,IAAQ,GACvB1I,KAAKwJ,KAAKrD,EAAKsC,IAAQ,EACpC/E,EAAMA,EAAK1D,KAAKwJ,KAAKrD,EAAKuC,IAAQ,EAClCjG,EAAMA,EAAKzC,KAAKwJ,KAAKzD,EAAK6C,IAAQ,EAElCnD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKzD,EAAK8C,IAAQ,GACvB7I,KAAKwJ,KAAKxD,EAAK4C,IAAQ,EACpClF,EAAMA,EAAK1D,KAAKwJ,KAAKxD,EAAK6C,IAAQ,EAKlC,IAAIkB,IAAQxK,GAJZkD,EAAMA,EAAKzC,KAAKwJ,KAAK5D,EAAKmD,IAAQ,GAIZ,KAAa,MAFnCtD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK5D,EAAKoD,IAAQ,GACvBhJ,KAAKwJ,KAAK3D,EAAKkD,IAAQ,KAEU,IAAO,EACrDxJ,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK3D,EAAKmD,IAAQ,IAErBvD,IAAQ,IAAO,IAAMsE,KAAO,IAAO,EAChDA,IAAM,SAENtH,EAAKzC,KAAKwJ,KAAKpC,EAAKM,GAEpBjC,GADAA,EAAMzF,KAAKwJ,KAAKpC,EAAKO,IACR3H,KAAKwJ,KAAKnC,EAAKK,GAAQ,EACpChE,EAAK1D,KAAKwJ,KAAKnC,EAAKM,GACpBlF,EAAMA,EAAKzC,KAAKwJ,KAAKvC,EAAKY,GAAQ,EAElCpC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKvC,EAAKa,GAAQ,GACvB9H,KAAKwJ,KAAKtC,EAAKW,GAAQ,EACpCnE,EAAMA,EAAK1D,KAAKwJ,KAAKtC,EAAKY,GAAQ,EAClCrF,EAAMA,EAAKzC,KAAKwJ,KAAK1C,EAAKkB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK1C,EAAKmB,GAAQ,GACvBjI,KAAKwJ,KAAKzC,EAAKiB,GAAQ,EACpCtE,EAAMA,EAAK1D,KAAKwJ,KAAKzC,EAAKkB,GAAQ,EAClCxF,EAAMA,EAAKzC,KAAKwJ,KAAK7C,EAAKwB,GAAQ,EAElC1C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK7C,EAAKyB,GAAQ,GACvBpI,KAAKwJ,KAAK5C,EAAKuB,GAAQ,EACpCzE,EAAMA,EAAK1D,KAAKwJ,KAAK5C,EAAKwB,GAAQ,EAClC3F,EAAMA,EAAKzC,KAAKwJ,KAAKhD,EAAK8B,GAAQ,EAElC7C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKhD,EAAK+B,IAAQ,GACvBvI,KAAKwJ,KAAK/C,EAAK6B,GAAQ,EACpC5E,EAAMA,EAAK1D,KAAKwJ,KAAK/C,EAAK8B,IAAQ,EAClC9F,EAAMA,EAAKzC,KAAKwJ,KAAKnD,EAAKoC,IAAQ,EAElChD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKnD,EAAKqC,IAAQ,GACvB1I,KAAKwJ,KAAKlD,EAAKmC,IAAQ,EACpC/E,EAAMA,EAAK1D,KAAKwJ,KAAKlD,EAAKoC,IAAQ,EAClCjG,EAAMA,EAAKzC,KAAKwJ,KAAKtD,EAAK0C,IAAQ,EAElCnD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKtD,EAAK2C,IAAQ,GACvB7I,KAAKwJ,KAAKrD,EAAKyC,IAAQ,EACpClF,EAAMA,EAAK1D,KAAKwJ,KAAKrD,EAAK0C,IAAQ,EAClCpG,EAAMA,EAAKzC,KAAKwJ,KAAKzD,EAAKgD,IAAQ,EAElCtD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKzD,EAAKiD,IAAQ,GACvBhJ,KAAKwJ,KAAKxD,EAAK+C,IAAQ,EACpCrF,EAAMA,EAAK1D,KAAKwJ,KAAKxD,EAAKgD,IAAQ,EAKlC,IAAIgB,IAAQzK,GAJZkD,EAAMA,EAAKzC,KAAKwJ,KAAK5D,EAAKsD,IAAQ,GAIZ,KAAa,MAFnCzD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK5D,EAAKuD,IAAQ,GACvBnJ,KAAKwJ,KAAK3D,EAAKqD,IAAQ,KAEU,IAAO,EACrD3J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK3D,EAAKsD,IAAQ,IAErB1D,IAAQ,IAAO,IAAMuE,KAAO,IAAO,EAChDA,IAAM,SAENvH,EAAKzC,KAAKwJ,KAAKjC,EAAKG,GAEpBjC,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAKI,IACR3H,KAAKwJ,KAAKhC,EAAKE,GAAQ,EACpChE,EAAK1D,KAAKwJ,KAAKhC,EAAKG,GACpBlF,EAAMA,EAAKzC,KAAKwJ,KAAKpC,EAAKS,GAAQ,EAElCpC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKpC,EAAKU,GAAQ,GACvB9H,KAAKwJ,KAAKnC,EAAKQ,GAAQ,EACpCnE,EAAMA,EAAK1D,KAAKwJ,KAAKnC,EAAKS,GAAQ,EAClCrF,EAAMA,EAAKzC,KAAKwJ,KAAKvC,EAAKe,GAAQ,EAElCvC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKvC,EAAKgB,GAAQ,GACvBjI,KAAKwJ,KAAKtC,EAAKc,GAAQ,EACpCtE,EAAMA,EAAK1D,KAAKwJ,KAAKtC,EAAKe,GAAQ,EAClCxF,EAAMA,EAAKzC,KAAKwJ,KAAK1C,EAAKqB,GAAQ,EAElC1C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK1C,EAAKsB,GAAQ,GACvBpI,KAAKwJ,KAAKzC,EAAKoB,GAAQ,EACpCzE,EAAMA,EAAK1D,KAAKwJ,KAAKzC,EAAKqB,GAAQ,EAClC3F,EAAMA,EAAKzC,KAAKwJ,KAAK7C,EAAK2B,GAAQ,EAElC7C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK7C,EAAK4B,IAAQ,GACvBvI,KAAKwJ,KAAK5C,EAAK0B,GAAQ,EACpC5E,EAAMA,EAAK1D,KAAKwJ,KAAK5C,EAAK2B,IAAQ,EAClC9F,EAAMA,EAAKzC,KAAKwJ,KAAKhD,EAAKiC,IAAQ,EAElChD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKhD,EAAKkC,IAAQ,GACvB1I,KAAKwJ,KAAK/C,EAAKgC,IAAQ,EACpC/E,EAAMA,EAAK1D,KAAKwJ,KAAK/C,EAAKiC,IAAQ,EAClCjG,EAAMA,EAAKzC,KAAKwJ,KAAKnD,EAAKuC,IAAQ,EAElCnD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKnD,EAAKwC,IAAQ,GACvB7I,KAAKwJ,KAAKlD,EAAKsC,IAAQ,EACpClF,EAAMA,EAAK1D,KAAKwJ,KAAKlD,EAAKuC,IAAQ,EAClCpG,EAAMA,EAAKzC,KAAKwJ,KAAKtD,EAAK6C,IAAQ,EAElCtD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKtD,EAAK8C,IAAQ,GACvBhJ,KAAKwJ,KAAKrD,EAAK4C,IAAQ,EACpCrF,EAAMA,EAAK1D,KAAKwJ,KAAKrD,EAAK6C,IAAQ,EAClCvG,EAAMA,EAAKzC,KAAKwJ,KAAKzD,EAAKmD,IAAQ,EAElCzD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKzD,EAAKoD,IAAQ,GACvBnJ,KAAKwJ,KAAKxD,EAAKkD,IAAQ,EACpCxF,EAAMA,EAAK1D,KAAKwJ,KAAKxD,EAAKmD,IAAQ,EAKlC,IAAIc,IAAQ1K,GAJZkD,EAAMA,EAAKzC,KAAKwJ,KAAK5D,EAAKyD,IAAQ,GAIZ,KAAa,MAFnC5D,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK5D,EAAK0D,IAAQ,GACvBtJ,KAAKwJ,KAAK3D,EAAKwD,IAAQ,KAEU,IAAO,EACrD9J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK3D,EAAKyD,IAAQ,IAErB7D,IAAQ,IAAO,IAAMwE,KAAO,IAAO,EAChDA,IAAM,SAENxH,EAAKzC,KAAKwJ,KAAKjC,EAAKM,GAEpBpC,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAKO,IACR9H,KAAKwJ,KAAKhC,EAAKK,GAAQ,EACpCnE,EAAK1D,KAAKwJ,KAAKhC,EAAKM,GACpBrF,EAAMA,EAAKzC,KAAKwJ,KAAKpC,EAAKY,GAAQ,EAElCvC,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKpC,EAAKa,GAAQ,GACvBjI,KAAKwJ,KAAKnC,EAAKW,GAAQ,EACpCtE,EAAMA,EAAK1D,KAAKwJ,KAAKnC,EAAKY,GAAQ,EAClCxF,EAAMA,EAAKzC,KAAKwJ,KAAKvC,EAAKkB,GAAQ,EAElC1C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKvC,EAAKmB,GAAQ,GACvBpI,KAAKwJ,KAAKtC,EAAKiB,GAAQ,EACpCzE,EAAMA,EAAK1D,KAAKwJ,KAAKtC,EAAKkB,GAAQ,EAClC3F,EAAMA,EAAKzC,KAAKwJ,KAAK1C,EAAKwB,GAAQ,EAElC7C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK1C,EAAKyB,IAAQ,GACvBvI,KAAKwJ,KAAKzC,EAAKuB,GAAQ,EACpC5E,EAAMA,EAAK1D,KAAKwJ,KAAKzC,EAAKwB,IAAQ,EAClC9F,EAAMA,EAAKzC,KAAKwJ,KAAK7C,EAAK8B,IAAQ,EAElChD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK7C,EAAK+B,IAAQ,GACvB1I,KAAKwJ,KAAK5C,EAAK6B,IAAQ,EACpC/E,EAAMA,EAAK1D,KAAKwJ,KAAK5C,EAAK8B,IAAQ,EAClCjG,EAAMA,EAAKzC,KAAKwJ,KAAKhD,EAAKoC,IAAQ,EAElCnD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKhD,EAAKqC,IAAQ,GACvB7I,KAAKwJ,KAAK/C,EAAKmC,IAAQ,EACpClF,EAAMA,EAAK1D,KAAKwJ,KAAK/C,EAAKoC,IAAQ,EAClCpG,EAAMA,EAAKzC,KAAKwJ,KAAKnD,EAAK0C,IAAQ,EAElCtD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKnD,EAAK2C,IAAQ,GACvBhJ,KAAKwJ,KAAKlD,EAAKyC,IAAQ,EACpCrF,EAAMA,EAAK1D,KAAKwJ,KAAKlD,EAAK0C,IAAQ,EAClCvG,EAAMA,EAAKzC,KAAKwJ,KAAKtD,EAAKgD,IAAQ,EAElCzD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKtD,EAAKiD,IAAQ,GACvBnJ,KAAKwJ,KAAKrD,EAAK+C,IAAQ,EACpCxF,EAAMA,EAAK1D,KAAKwJ,KAAKrD,EAAKgD,IAAQ,EAKlC,IAAIe,IAAS3K,GAJbkD,EAAMA,EAAKzC,KAAKwJ,KAAKzD,EAAKsD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKzD,EAAKuD,IAAQ,GACvBtJ,KAAKwJ,KAAKxD,EAAKqD,IAAQ,KAEW,IAAO,EACtD9J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAKxD,EAAKsD,IAAQ,IAErB7D,IAAQ,IAAO,IAAMyE,KAAQ,IAAO,EACjDA,IAAO,SAEPzH,EAAKzC,KAAKwJ,KAAKjC,EAAKS,GAEpBvC,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAKU,IACRjI,KAAKwJ,KAAKhC,EAAKQ,GAAQ,EACpCtE,EAAK1D,KAAKwJ,KAAKhC,EAAKS,GACpBxF,EAAMA,EAAKzC,KAAKwJ,KAAKpC,EAAKe,GAAQ,EAElC1C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKpC,EAAKgB,GAAQ,GACvBpI,KAAKwJ,KAAKnC,EAAKc,GAAQ,EACpCzE,EAAMA,EAAK1D,KAAKwJ,KAAKnC,EAAKe,GAAQ,EAClC3F,EAAMA,EAAKzC,KAAKwJ,KAAKvC,EAAKqB,GAAQ,EAElC7C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKvC,EAAKsB,IAAQ,GACvBvI,KAAKwJ,KAAKtC,EAAKoB,GAAQ,EACpC5E,EAAMA,EAAK1D,KAAKwJ,KAAKtC,EAAKqB,IAAQ,EAClC9F,EAAMA,EAAKzC,KAAKwJ,KAAK1C,EAAK2B,IAAQ,EAElChD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK1C,EAAK4B,IAAQ,GACvB1I,KAAKwJ,KAAKzC,EAAK0B,IAAQ,EACpC/E,EAAMA,EAAK1D,KAAKwJ,KAAKzC,EAAK2B,IAAQ,EAClCjG,EAAMA,EAAKzC,KAAKwJ,KAAK7C,EAAKiC,IAAQ,EAElCnD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK7C,EAAKkC,IAAQ,GACvB7I,KAAKwJ,KAAK5C,EAAKgC,IAAQ,EACpClF,EAAMA,EAAK1D,KAAKwJ,KAAK5C,EAAKiC,IAAQ,EAClCpG,EAAMA,EAAKzC,KAAKwJ,KAAKhD,EAAKuC,IAAQ,EAElCtD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKhD,EAAKwC,IAAQ,GACvBhJ,KAAKwJ,KAAK/C,EAAKsC,IAAQ,EACpCrF,EAAMA,EAAK1D,KAAKwJ,KAAK/C,EAAKuC,IAAQ,EAClCvG,EAAMA,EAAKzC,KAAKwJ,KAAKnD,EAAK6C,IAAQ,EAElCzD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKnD,EAAK8C,IAAQ,GACvBnJ,KAAKwJ,KAAKlD,EAAK4C,IAAQ,EACpCxF,EAAMA,EAAK1D,KAAKwJ,KAAKlD,EAAK6C,IAAQ,EAKlC,IAAIgB,IAAS5K,GAJbkD,EAAMA,EAAKzC,KAAKwJ,KAAKtD,EAAKmD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKtD,EAAKoD,IAAQ,GACvBtJ,KAAKwJ,KAAKrD,EAAKkD,IAAQ,KAEW,IAAO,EACtD9J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAKrD,EAAKmD,IAAQ,IAErB7D,IAAQ,IAAO,IAAM0E,KAAQ,IAAO,EACjDA,IAAO,SAEP1H,EAAKzC,KAAKwJ,KAAKjC,EAAKY,GAEpB1C,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAKa,IACRpI,KAAKwJ,KAAKhC,EAAKW,GAAQ,EACpCzE,EAAK1D,KAAKwJ,KAAKhC,EAAKY,GACpB3F,EAAMA,EAAKzC,KAAKwJ,KAAKpC,EAAKkB,GAAQ,EAElC7C,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKpC,EAAKmB,IAAQ,GACvBvI,KAAKwJ,KAAKnC,EAAKiB,GAAQ,EACpC5E,EAAMA,EAAK1D,KAAKwJ,KAAKnC,EAAKkB,IAAQ,EAClC9F,EAAMA,EAAKzC,KAAKwJ,KAAKvC,EAAKwB,IAAQ,EAElChD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKvC,EAAKyB,IAAQ,GACvB1I,KAAKwJ,KAAKtC,EAAKuB,IAAQ,EACpC/E,EAAMA,EAAK1D,KAAKwJ,KAAKtC,EAAKwB,IAAQ,EAClCjG,EAAMA,EAAKzC,KAAKwJ,KAAK1C,EAAK8B,IAAQ,EAElCnD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK1C,EAAK+B,IAAQ,GACvB7I,KAAKwJ,KAAKzC,EAAK6B,IAAQ,EACpClF,EAAMA,EAAK1D,KAAKwJ,KAAKzC,EAAK8B,IAAQ,EAClCpG,EAAMA,EAAKzC,KAAKwJ,KAAK7C,EAAKoC,IAAQ,EAElCtD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK7C,EAAKqC,IAAQ,GACvBhJ,KAAKwJ,KAAK5C,EAAKmC,IAAQ,EACpCrF,EAAMA,EAAK1D,KAAKwJ,KAAK5C,EAAKoC,IAAQ,EAClCvG,EAAMA,EAAKzC,KAAKwJ,KAAKhD,EAAK0C,IAAQ,EAElCzD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKhD,EAAK2C,IAAQ,GACvBnJ,KAAKwJ,KAAK/C,EAAKyC,IAAQ,EACpCxF,EAAMA,EAAK1D,KAAKwJ,KAAK/C,EAAK0C,IAAQ,EAKlC,IAAIiB,IAAS7K,GAJbkD,EAAMA,EAAKzC,KAAKwJ,KAAKnD,EAAKgD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKnD,EAAKiD,IAAQ,GACvBtJ,KAAKwJ,KAAKlD,EAAK+C,IAAQ,KAEW,IAAO,EACtD9J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAKlD,EAAKgD,IAAQ,IAErB7D,IAAQ,IAAO,IAAM2E,KAAQ,IAAO,EACjDA,IAAO,SAEP3H,EAAKzC,KAAKwJ,KAAKjC,EAAKe,GAEpB7C,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAKgB,KACRvI,KAAKwJ,KAAKhC,EAAKc,GAAQ,EACpC5E,EAAK1D,KAAKwJ,KAAKhC,EAAKe,IACpB9F,EAAMA,EAAKzC,KAAKwJ,KAAKpC,EAAKqB,IAAQ,EAElChD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKpC,EAAKsB,IAAQ,GACvB1I,KAAKwJ,KAAKnC,EAAKoB,IAAQ,EACpC/E,EAAMA,EAAK1D,KAAKwJ,KAAKnC,EAAKqB,IAAQ,EAClCjG,EAAMA,EAAKzC,KAAKwJ,KAAKvC,EAAK2B,IAAQ,EAElCnD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKvC,EAAK4B,IAAQ,GACvB7I,KAAKwJ,KAAKtC,EAAK0B,IAAQ,EACpClF,EAAMA,EAAK1D,KAAKwJ,KAAKtC,EAAK2B,IAAQ,EAClCpG,EAAMA,EAAKzC,KAAKwJ,KAAK1C,EAAKiC,IAAQ,EAElCtD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK1C,EAAKkC,IAAQ,GACvBhJ,KAAKwJ,KAAKzC,EAAKgC,IAAQ,EACpCrF,EAAMA,EAAK1D,KAAKwJ,KAAKzC,EAAKiC,IAAQ,EAClCvG,EAAMA,EAAKzC,KAAKwJ,KAAK7C,EAAKuC,IAAQ,EAElCzD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK7C,EAAKwC,IAAQ,GACvBnJ,KAAKwJ,KAAK5C,EAAKsC,IAAQ,EACpCxF,EAAMA,EAAK1D,KAAKwJ,KAAK5C,EAAKuC,IAAQ,EAKlC,IAAIkB,IAAS9K,GAJbkD,EAAMA,EAAKzC,KAAKwJ,KAAKhD,EAAK6C,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKhD,EAAK8C,IAAQ,GACvBtJ,KAAKwJ,KAAK/C,EAAK4C,IAAQ,KAEW,IAAO,EACtD9J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK/C,EAAK6C,IAAQ,IAErB7D,IAAQ,IAAO,IAAM4E,KAAQ,IAAO,EACjDA,IAAO,SAEP5H,EAAKzC,KAAKwJ,KAAKjC,EAAKkB,IAEpBhD,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAKmB,KACR1I,KAAKwJ,KAAKhC,EAAKiB,IAAQ,EACpC/E,EAAK1D,KAAKwJ,KAAKhC,EAAKkB,IACpBjG,EAAMA,EAAKzC,KAAKwJ,KAAKpC,EAAKwB,IAAQ,EAElCnD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKpC,EAAKyB,IAAQ,GACvB7I,KAAKwJ,KAAKnC,EAAKuB,IAAQ,EACpClF,EAAMA,EAAK1D,KAAKwJ,KAAKnC,EAAKwB,IAAQ,EAClCpG,EAAMA,EAAKzC,KAAKwJ,KAAKvC,EAAK8B,IAAQ,EAElCtD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKvC,EAAK+B,IAAQ,GACvBhJ,KAAKwJ,KAAKtC,EAAK6B,IAAQ,EACpCrF,EAAMA,EAAK1D,KAAKwJ,KAAKtC,EAAK8B,IAAQ,EAClCvG,EAAMA,EAAKzC,KAAKwJ,KAAK1C,EAAKoC,IAAQ,EAElCzD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK1C,EAAKqC,IAAQ,GACvBnJ,KAAKwJ,KAAKzC,EAAKmC,IAAQ,EACpCxF,EAAMA,EAAK1D,KAAKwJ,KAAKzC,EAAKoC,IAAQ,EAKlC,IAAImB,IAAS/K,GAJbkD,EAAMA,EAAKzC,KAAKwJ,KAAK7C,EAAK0C,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK7C,EAAK2C,IAAQ,GACvBtJ,KAAKwJ,KAAK5C,EAAKyC,IAAQ,KAEW,IAAO,EACtD9J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAK5C,EAAK0C,IAAQ,IAErB7D,IAAQ,IAAO,IAAM6E,KAAQ,IAAO,EACjDA,IAAO,SAEP7H,EAAKzC,KAAKwJ,KAAKjC,EAAKqB,IAEpBnD,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAKsB,KACR7I,KAAKwJ,KAAKhC,EAAKoB,IAAQ,EACpClF,EAAK1D,KAAKwJ,KAAKhC,EAAKqB,IACpBpG,EAAMA,EAAKzC,KAAKwJ,KAAKpC,EAAK2B,IAAQ,EAElCtD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKpC,EAAK4B,IAAQ,GACvBhJ,KAAKwJ,KAAKnC,EAAK0B,IAAQ,EACpCrF,EAAMA,EAAK1D,KAAKwJ,KAAKnC,EAAK2B,IAAQ,EAClCvG,EAAMA,EAAKzC,KAAKwJ,KAAKvC,EAAKiC,IAAQ,EAElCzD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKvC,EAAKkC,IAAQ,GACvBnJ,KAAKwJ,KAAKtC,EAAKgC,IAAQ,EACpCxF,EAAMA,EAAK1D,KAAKwJ,KAAKtC,EAAKiC,IAAQ,EAKlC,IAAIoB,IAAShL,GAJbkD,EAAMA,EAAKzC,KAAKwJ,KAAK1C,EAAKuC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAK1C,EAAKwC,IAAQ,GACvBtJ,KAAKwJ,KAAKzC,EAAKsC,IAAQ,KAEW,IAAO,EACtD9J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAKzC,EAAKuC,IAAQ,IAErB7D,IAAQ,IAAO,IAAM8E,KAAQ,IAAO,EACjDA,IAAO,SAEP9H,EAAKzC,KAAKwJ,KAAKjC,EAAKwB,IAEpBtD,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAKyB,KACRhJ,KAAKwJ,KAAKhC,EAAKuB,IAAQ,EACpCrF,EAAK1D,KAAKwJ,KAAKhC,EAAKwB,IACpBvG,EAAMA,EAAKzC,KAAKwJ,KAAKpC,EAAK8B,IAAQ,EAElCzD,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKpC,EAAK+B,IAAQ,GACvBnJ,KAAKwJ,KAAKnC,EAAK6B,IAAQ,EACpCxF,EAAMA,EAAK1D,KAAKwJ,KAAKnC,EAAK8B,IAAQ,EAKlC,IAAIqB,IAASjL,GAJbkD,EAAMA,EAAKzC,KAAKwJ,KAAKvC,EAAKoC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKvC,EAAKqC,IAAQ,GACvBtJ,KAAKwJ,KAAKtC,EAAKmC,IAAQ,KAEW,IAAO,EACtD9J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAKtC,EAAKoC,IAAQ,IAErB7D,IAAQ,IAAO,IAAM+E,KAAQ,IAAO,EACjDA,IAAO,SAEP/H,EAAKzC,KAAKwJ,KAAKjC,EAAK2B,IAEpBzD,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAK4B,KACRnJ,KAAKwJ,KAAKhC,EAAK0B,IAAQ,EACpCxF,EAAK1D,KAAKwJ,KAAKhC,EAAK2B,IAKpB,IAAIsB,IAASlL,GAJbkD,EAAMA,EAAKzC,KAAKwJ,KAAKpC,EAAKiC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMzF,KAAKwJ,KAAKpC,EAAKkC,IAAQ,GACvBtJ,KAAKwJ,KAAKnC,EAAKgC,IAAQ,KAEW,IAAO,EACtD9J,IAFAmE,EAAMA,EAAK1D,KAAKwJ,KAAKnC,EAAKiC,IAAQ,IAErB7D,IAAQ,IAAO,IAAMgF,KAAQ,IAAO,EACjDA,IAAO,SAMP,IAAIC,IAASnL,GAJbkD,EAAKzC,KAAKwJ,KAAKjC,EAAK8B,KAIG,KAAa,MAFpC5D,GADAA,EAAMzF,KAAKwJ,KAAKjC,EAAK+B,KACRtJ,KAAKwJ,KAAKhC,EAAK6B,IAAQ,KAEW,IAAO,EA0BtD,OAzBA9J,IAFAmE,EAAK1D,KAAKwJ,KAAKhC,EAAK8B,MAEP7D,IAAQ,IAAO,IAAMiF,KAAQ,IAAO,EACjDA,IAAO,SACPhF,EAAE,GAAK6D,GACP7D,EAAE,GAAK+D,GACP/D,EAAE,GAAKgE,GACPhE,EAAE,GAAKiE,GACPjE,EAAE,GAAKkE,GACPlE,EAAE,GAAKmE,GACPnE,EAAE,GAAKoE,GACPpE,EAAE,GAAKqE,GACPrE,EAAE,GAAKsE,GACPtE,EAAE,GAAKuE,GACPvE,EAAE,IAAMwE,GACRxE,EAAE,IAAMyE,GACRzE,EAAE,IAAM0E,GACR1E,EAAE,IAAM2E,GACR3E,EAAE,IAAM4E,GACR5E,EAAE,IAAM6E,GACR7E,EAAE,IAAM8E,GACR9E,EAAE,IAAM+E,GACR/E,EAAE,IAAMgF,GACE,IAANnL,IACFmG,EAAE,IAAMnG,EACR2C,EAAI/Q,UAEC+Q,GAQT,SAASyI,EAAUvQ,EAAM1D,EAAKwL,GAC5BA,EAAIpD,SAAWpI,EAAIoI,SAAW1E,EAAK0E,SACnCoD,EAAI/Q,OAASiJ,EAAKjJ,OAASuF,EAAIvF,OAI/B,IAFA,IAAIgR,EAAQ,EACRyI,EAAU,EACLtT,EAAI,EAAGA,EAAI4K,EAAI/Q,OAAS,EAAGmG,IAAK,CAGvC,IAAIoL,EAASkI,EACbA,EAAU,EAGV,IAFA,IAAIjI,EAAgB,SAARR,EACRS,EAAO5C,KAAKC,IAAI3I,EAAGZ,EAAIvF,OAAS,GAC3BwP,EAAIX,KAAKjC,IAAI,EAAGzG,EAAI8C,EAAKjJ,OAAS,GAAIwP,GAAKiC,EAAMjC,IAAK,CAC7D,IAAIlO,EAAI6E,EAAIqJ,EAGRhE,GAFoB,EAAhBvC,EAAK2E,MAAMtM,KACI,EAAfiE,EAAIqI,MAAM4B,IAGd8B,EAAS,SAAJ9F,EAGTgG,EAAa,UADbF,EAAMA,EAAKE,EAAS,GAIpBiI,IAFAlI,GAHAA,EAAUA,GAAW/F,EAAI,SAAa,GAAM,IAGxB8F,IAAO,IAAO,KAEZ,GACtBC,GAAU,SAEZR,EAAInD,MAAMzH,GAAKqL,EACfR,EAAQO,EACRA,EAASkI,EAQX,OANc,IAAVzI,EACFD,EAAInD,MAAMzH,GAAK6K,EAEfD,EAAI/Q,SAGC+Q,EAAIpB,SAGb,SAAS+J,EAAYzQ,EAAM1D,EAAKwL,GAI9B,OAAOyI,EAASvQ,EAAM1D,EAAKwL,GAsB7B,SAAS4I,EAAMC,EAAGC,GAChB3a,KAAK0a,EAAIA,EACT1a,KAAK2a,EAAIA,EAzENhL,KAAKwJ,OACRhE,EAAchD,GAmDhBnQ,EAAGoM,UAAUwM,MAAQ,SAAgBvU,EAAKwL,GACxC,IACInC,EAAM1P,KAAKc,OAASuF,EAAIvF,OAW5B,OAVoB,KAAhBd,KAAKc,QAAgC,KAAfuF,EAAIvF,OACtBqU,EAAYnV,KAAMqG,EAAKwL,GACpBnC,EAAM,GACTyC,EAAWnS,KAAMqG,EAAKwL,GACnBnC,EAAM,KACT4K,EAASta,KAAMqG,EAAKwL,GAEpB2I,EAAWxa,KAAMqG,EAAKwL,IAchC4I,EAAKrM,UAAUyM,QAAU,SAAkBC,GAGzC,IAFA,IAAI5H,EAAI,IAAIzS,MAAMqa,GACd7R,EAAIjH,EAAGoM,UAAU6E,WAAW6H,GAAK,EAC5B1Y,EAAI,EAAGA,EAAI0Y,EAAG1Y,IACrB8Q,EAAE9Q,GAAKpC,KAAK+a,OAAO3Y,EAAG6G,EAAG6R,GAG3B,OAAO5H,GAITuH,EAAKrM,UAAU2M,OAAS,SAAiBL,EAAGzR,EAAG6R,GAC7C,GAAU,IAANJ,GAAWA,IAAMI,EAAI,EAAG,OAAOJ,EAGnC,IADA,IAAIM,EAAK,EACA5Y,EAAI,EAAGA,EAAI6G,EAAG7G,IACrB4Y,IAAW,EAAJN,IAAWzR,EAAI7G,EAAI,EAC1BsY,IAAM,EAGR,OAAOM,GAKTP,EAAKrM,UAAU6M,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GACpE,IAAK,IAAI1Y,EAAI,EAAGA,EAAI0Y,EAAG1Y,IACrBiZ,EAAKjZ,GAAK+Y,EAAID,EAAI9Y,IAClBkZ,EAAKlZ,GAAKgZ,EAAIF,EAAI9Y,KAItBqY,EAAKrM,UAAUmN,UAAY,SAAoBJ,EAAKC,EAAKC,EAAMC,EAAMR,EAAGI,GACtElb,KAAKib,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GAExC,IAAK,IAAIvO,EAAI,EAAGA,EAAIuO,EAAGvO,IAAM,EAM3B,IALA,IAAItD,EAAIsD,GAAK,EAETiP,EAAQ7L,KAAK8L,IAAI,EAAI9L,KAAK+L,GAAKzS,GAC/B0S,EAAQhM,KAAKiM,IAAI,EAAIjM,KAAK+L,GAAKzS,GAE1B4S,EAAI,EAAGA,EAAIf,EAAGe,GAAK5S,EAI1B,IAHA,IAAI6S,EAASN,EACTO,EAASJ,EAEJrL,EAAI,EAAGA,EAAI/D,EAAG+D,IAAK,CAC1B,IAAI0L,EAAKX,EAAKQ,EAAIvL,GACd2L,EAAKX,EAAKO,EAAIvL,GAEd4L,EAAKb,EAAKQ,EAAIvL,EAAI/D,GAClB4P,EAAKb,EAAKO,EAAIvL,EAAI/D,GAElB6P,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELf,EAAKQ,EAAIvL,GAAK0L,EAAKE,EACnBZ,EAAKO,EAAIvL,GAAK2L,EAAKE,EAEnBd,EAAKQ,EAAIvL,EAAI/D,GAAKyP,EAAKE,EACvBZ,EAAKO,EAAIvL,EAAI/D,GAAK0P,EAAKE,EAGnB7L,IAAMrH,IACRmT,EAAKZ,EAAQM,EAASH,EAAQI,EAE9BA,EAASP,EAAQO,EAASJ,EAAQG,EAClCA,EAASM,KAOnB3B,EAAKrM,UAAUiO,YAAc,SAAsB7S,EAAG8S,GACpD,IAAIxB,EAAqB,EAAjBnL,KAAKjC,IAAI4O,EAAG9S,GAChB+S,EAAU,EAAJzB,EACN1Y,EAAI,EACR,IAAK0Y,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/B1Y,IAGF,OAAO,GAAKA,EAAI,EAAIma,GAGtB9B,EAAKrM,UAAUoO,UAAY,SAAoBrB,EAAKC,EAAKN,GACvD,KAAIA,GAAK,GAET,IAAK,IAAI1Y,EAAI,EAAGA,EAAI0Y,EAAI,EAAG1Y,IAAK,CAC9B,IAAI8Q,EAAIiI,EAAI/Y,GAEZ+Y,EAAI/Y,GAAK+Y,EAAIL,EAAI1Y,EAAI,GACrB+Y,EAAIL,EAAI1Y,EAAI,GAAK8Q,EAEjBA,EAAIkI,EAAIhZ,GAERgZ,EAAIhZ,IAAMgZ,EAAIN,EAAI1Y,EAAI,GACtBgZ,EAAIN,EAAI1Y,EAAI,IAAM8Q,IAItBuH,EAAKrM,UAAUqO,aAAe,SAAuBC,EAAI5B,GAEvD,IADA,IAAIhJ,EAAQ,EACH1P,EAAI,EAAGA,EAAI0Y,EAAI,EAAG1Y,IAAK,CAC9B,IAAImO,EAAoC,KAAhCZ,KAAKgN,MAAMD,EAAG,EAAIta,EAAI,GAAK0Y,GACjCnL,KAAKgN,MAAMD,EAAG,EAAIta,GAAK0Y,GACvBhJ,EAEF4K,EAAGta,GAAS,SAAJmO,EAGNuB,EADEvB,EAAI,SACE,EAEAA,EAAI,SAAY,EAI5B,OAAOmM,GAGTjC,EAAKrM,UAAUwO,WAAa,SAAqBF,EAAIhN,EAAKyL,EAAKL,GAE7D,IADA,IAAIhJ,EAAQ,EACH1P,EAAI,EAAGA,EAAIsN,EAAKtN,IACvB0P,GAAyB,EAAR4K,EAAGta,GAEpB+Y,EAAI,EAAI/Y,GAAa,KAAR0P,EAAgBA,KAAkB,GAC/CqJ,EAAI,EAAI/Y,EAAI,GAAa,KAAR0P,EAAgBA,KAAkB,GAIrD,IAAK1P,EAAI,EAAIsN,EAAKtN,EAAI0Y,IAAK1Y,EACzB+Y,EAAI/Y,GAAK,EAGXyL,EAAiB,IAAViE,GACPjE,EAA6B,MAAb,KAARiE,KAGV2I,EAAKrM,UAAUyO,KAAO,SAAe/B,GAEnC,IADA,IAAIgC,EAAK,IAAIrc,MAAMqa,GACV1Y,EAAI,EAAGA,EAAI0Y,EAAG1Y,IACrB0a,EAAG1a,GAAK,EAGV,OAAO0a,GAGTrC,EAAKrM,UAAU2O,KAAO,SAAerC,EAAGC,EAAG9I,GACzC,IAAIiJ,EAAI,EAAI9a,KAAKqc,YAAY3B,EAAE5Z,OAAQ6Z,EAAE7Z,QAErCoa,EAAMlb,KAAK6a,QAAQC,GAEnBkC,EAAIhd,KAAK6c,KAAK/B,GAEdK,EAAM,IAAI1a,MAAMqa,GAChBmC,EAAO,IAAIxc,MAAMqa,GACjBoC,EAAO,IAAIzc,MAAMqa,GAEjBqC,EAAO,IAAI1c,MAAMqa,GACjBsC,EAAQ,IAAI3c,MAAMqa,GAClBuC,EAAQ,IAAI5c,MAAMqa,GAElBwC,EAAOzL,EAAInD,MACf4O,EAAKxc,OAASga,EAEd9a,KAAK4c,WAAWlC,EAAEhM,MAAOgM,EAAE5Z,OAAQqa,EAAKL,GACxC9a,KAAK4c,WAAWjC,EAAEjM,MAAOiM,EAAE7Z,OAAQqc,EAAMrC,GAEzC9a,KAAKub,UAAUJ,EAAK6B,EAAGC,EAAMC,EAAMpC,EAAGI,GACtClb,KAAKub,UAAU4B,EAAMH,EAAGI,EAAOC,EAAOvC,EAAGI,GAEzC,IAAK,IAAI9Y,EAAI,EAAGA,EAAI0Y,EAAG1Y,IAAK,CAC1B,IAAIga,EAAKa,EAAK7a,GAAKgb,EAAMhb,GAAK8a,EAAK9a,GAAKib,EAAMjb,GAC9C8a,EAAK9a,GAAK6a,EAAK7a,GAAKib,EAAMjb,GAAK8a,EAAK9a,GAAKgb,EAAMhb,GAC/C6a,EAAK7a,GAAKga,EAUZ,OAPApc,KAAKwc,UAAUS,EAAMC,EAAMpC,GAC3B9a,KAAKub,UAAU0B,EAAMC,EAAMI,EAAMN,EAAGlC,EAAGI,GACvClb,KAAKwc,UAAUc,EAAMN,EAAGlC,GACxB9a,KAAKyc,aAAaa,EAAMxC,GAExBjJ,EAAIpD,SAAWiM,EAAEjM,SAAWkM,EAAElM,SAC9BoD,EAAI/Q,OAAS4Z,EAAE5Z,OAAS6Z,EAAE7Z,OACnB+Q,EAAIpB,UAIbzO,EAAGoM,UAAUoB,IAAM,SAAcnJ,GAC/B,IAAIwL,EAAM,IAAI7P,EAAG,MAEjB,OADA6P,EAAInD,MAAQ,IAAIjO,MAAMT,KAAKc,OAASuF,EAAIvF,QACjCd,KAAK4a,MAAMvU,EAAKwL,IAIzB7P,EAAGoM,UAAUmP,KAAO,SAAelX,GACjC,IAAIwL,EAAM,IAAI7P,EAAG,MAEjB,OADA6P,EAAInD,MAAQ,IAAIjO,MAAMT,KAAKc,OAASuF,EAAIvF,QACjC0Z,EAAWxa,KAAMqG,EAAKwL,IAI/B7P,EAAGoM,UAAU+K,KAAO,SAAe9S,GACjC,OAAOrG,KAAKmR,QAAQyJ,MAAMvU,EAAKrG,OAGjCgC,EAAGoM,UAAU2C,MAAQ,SAAgB1K,GACnC,IAAImX,EAAWnX,EAAM,EACjBmX,IAAUnX,GAAOA,GAErBwH,EAAsB,kBAARxH,GACdwH,EAAOxH,EAAM,UAIb,IADA,IAAIyL,EAAQ,EACH1P,EAAI,EAAGA,EAAIpC,KAAKc,OAAQsB,IAAK,CACpC,IAAImO,GAAqB,EAAhBvQ,KAAK0O,MAAMtM,IAAUiE,EAC1B+L,GAAU,SAAJ7B,IAA0B,SAARuB,GAC5BA,IAAU,GACVA,GAAUvB,EAAI,SAAa,EAE3BuB,GAASM,IAAO,GAChBpS,KAAK0O,MAAMtM,GAAU,SAALgQ,EAQlB,OALc,IAAVN,IACF9R,KAAK0O,MAAMtM,GAAK0P,EAChB9R,KAAKc,UAGA0c,EAAWxd,KAAK6T,OAAS7T,MAGlCgC,EAAGoM,UAAUvC,KAAO,SAAexF,GACjC,OAAOrG,KAAKmR,QAAQJ,MAAM1K,IAI5BrE,EAAGoM,UAAUqP,IAAM,WACjB,OAAOzd,KAAKwP,IAAIxP,OAIlBgC,EAAGoM,UAAUsP,KAAO,WAClB,OAAO1d,KAAKmZ,KAAKnZ,KAAKmR,UAIxBnP,EAAGoM,UAAU6C,IAAM,SAAc5K,GAC/B,IAAIkK,EA7xCN,SAAqBlK,GAGnB,IAFA,IAAIkK,EAAI,IAAI9P,MAAM4F,EAAI+M,aAEb0B,EAAM,EAAGA,EAAMvE,EAAEzP,OAAQgU,IAAO,CACvC,IAAItE,EAAOsE,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjBvE,EAAEuE,GAAQzO,EAAIqI,MAAM8B,KAASuE,EAAQ,EAGvC,OAAOxE,EAmxCCoN,CAAWtX,GACnB,GAAiB,IAAbkK,EAAEzP,OAAc,OAAO,IAAIkB,EAAG,GAIlC,IADA,IAAI0Q,EAAM1S,KACDoC,EAAI,EAAGA,EAAImO,EAAEzP,QACP,IAATyP,EAAEnO,GADsBA,IAAKsQ,EAAMA,EAAI+K,OAI7C,KAAMrb,EAAImO,EAAEzP,OACV,IAAK,IAAI8c,EAAIlL,EAAI+K,MAAOrb,EAAImO,EAAEzP,OAAQsB,IAAKwb,EAAIA,EAAEH,MAClC,IAATlN,EAAEnO,KAENsQ,EAAMA,EAAIlD,IAAIoO,IAIlB,OAAOlL,GAIT1Q,EAAGoM,UAAUyP,OAAS,SAAiBpW,GACrCoG,EAAuB,kBAATpG,GAAqBA,GAAQ,GAC3C,IAGIrF,EAHAkK,EAAI7E,EAAO,GACX8E,GAAK9E,EAAO6E,GAAK,GACjBwR,EAAa,WAAe,GAAKxR,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAIwF,EAAQ,EAEZ,IAAK1P,EAAI,EAAGA,EAAIpC,KAAKc,OAAQsB,IAAK,CAChC,IAAI2b,EAAW/d,KAAK0O,MAAMtM,GAAK0b,EAC3B5O,GAAsB,EAAhBlP,KAAK0O,MAAMtM,IAAU2b,GAAazR,EAC5CtM,KAAK0O,MAAMtM,GAAK8M,EAAI4C,EACpBA,EAAQiM,IAAc,GAAKzR,EAGzBwF,IACF9R,KAAK0O,MAAMtM,GAAK0P,EAChB9R,KAAKc,UAIT,GAAU,IAANyL,EAAS,CACX,IAAKnK,EAAIpC,KAAKc,OAAS,EAAGsB,GAAK,EAAGA,IAChCpC,KAAK0O,MAAMtM,EAAImK,GAAKvM,KAAK0O,MAAMtM,GAGjC,IAAKA,EAAI,EAAGA,EAAImK,EAAGnK,IACjBpC,KAAK0O,MAAMtM,GAAK,EAGlBpC,KAAKc,QAAUyL,EAGjB,OAAOvM,KAAKyQ,UAGdzO,EAAGoM,UAAU4P,MAAQ,SAAgBvW,GAGnC,OADAoG,EAAyB,IAAlB7N,KAAKyO,UACLzO,KAAK6d,OAAOpW,IAMrBzF,EAAGoM,UAAU6P,OAAS,SAAiBxW,EAAMyW,EAAMC,GAEjD,IAAIC,EADJvQ,EAAuB,kBAATpG,GAAqBA,GAAQ,GAGzC2W,EADEF,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAI5R,EAAI7E,EAAO,GACX8E,EAAIoD,KAAKC,KAAKnI,EAAO6E,GAAK,GAAItM,KAAKc,QACnCud,EAAO,SAAc,WAAc/R,GAAMA,EACzCgS,EAAcH,EAMlB,GAJAC,GAAK7R,EACL6R,EAAIzO,KAAKjC,IAAI,EAAG0Q,GAGZE,EAAa,CACf,IAAK,IAAIlc,EAAI,EAAGA,EAAImK,EAAGnK,IACrBkc,EAAY5P,MAAMtM,GAAKpC,KAAK0O,MAAMtM,GAEpCkc,EAAYxd,OAASyL,EAGvB,GAAU,IAANA,QAEG,GAAIvM,KAAKc,OAASyL,EAEvB,IADAvM,KAAKc,QAAUyL,EACVnK,EAAI,EAAGA,EAAIpC,KAAKc,OAAQsB,IAC3BpC,KAAK0O,MAAMtM,GAAKpC,KAAK0O,MAAMtM,EAAImK,QAGjCvM,KAAK0O,MAAM,GAAK,EAChB1O,KAAKc,OAAS,EAGhB,IAAIgR,EAAQ,EACZ,IAAK1P,EAAIpC,KAAKc,OAAS,EAAGsB,GAAK,IAAgB,IAAV0P,GAAe1P,GAAKgc,GAAIhc,IAAK,CAChE,IAAI0O,EAAuB,EAAhB9Q,KAAK0O,MAAMtM,GACtBpC,KAAK0O,MAAMtM,GAAM0P,GAAU,GAAKxF,EAAOwE,IAASxE,EAChDwF,EAAQhB,EAAOuN,EAajB,OATIC,GAAyB,IAAVxM,IACjBwM,EAAY5P,MAAM4P,EAAYxd,UAAYgR,GAGxB,IAAhB9R,KAAKc,SACPd,KAAK0O,MAAM,GAAK,EAChB1O,KAAKc,OAAS,GAGTd,KAAKyQ,UAGdzO,EAAGoM,UAAUmQ,MAAQ,SAAgB9W,EAAMyW,EAAMC,GAG/C,OADAtQ,EAAyB,IAAlB7N,KAAKyO,UACLzO,KAAKie,OAAOxW,EAAMyW,EAAMC,IAIjCnc,EAAGoM,UAAUoQ,KAAO,SAAe/W,GACjC,OAAOzH,KAAKmR,QAAQ6M,MAAMvW,IAG5BzF,EAAGoM,UAAUqQ,MAAQ,SAAgBhX,GACnC,OAAOzH,KAAKmR,QAAQ0M,OAAOpW,IAI7BzF,EAAGoM,UAAUsQ,KAAO,SAAejX,GACjC,OAAOzH,KAAKmR,QAAQoN,MAAM9W,IAG5BzF,EAAGoM,UAAUuQ,MAAQ,SAAgBlX,GACnC,OAAOzH,KAAKmR,QAAQ8M,OAAOxW,IAI7BzF,EAAGoM,UAAUuF,MAAQ,SAAgBmB,GACnCjH,EAAsB,kBAARiH,GAAoBA,GAAO,GACzC,IAAIxI,EAAIwI,EAAM,GACVvI,GAAKuI,EAAMxI,GAAK,GAChBsR,EAAI,GAAKtR,EAGb,QAAItM,KAAKc,QAAUyL,OAGXvM,KAAK0O,MAAMnC,GAELqR,IAIhB5b,EAAGoM,UAAUwQ,OAAS,SAAiBnX,GACrCoG,EAAuB,kBAATpG,GAAqBA,GAAQ,GAC3C,IAAI6E,EAAI7E,EAAO,GACX8E,GAAK9E,EAAO6E,GAAK,GAIrB,GAFAuB,EAAyB,IAAlB7N,KAAKyO,SAAgB,2CAExBzO,KAAKc,QAAUyL,EACjB,OAAOvM,KAQT,GALU,IAANsM,GACFC,IAEFvM,KAAKc,OAAS6O,KAAKC,IAAIrD,EAAGvM,KAAKc,QAErB,IAANwL,EAAS,CACX,IAAI+R,EAAO,SAAc,WAAc/R,GAAMA,EAC7CtM,KAAK0O,MAAM1O,KAAKc,OAAS,IAAMud,EAGjC,OAAOre,KAAKyQ,UAIdzO,EAAGoM,UAAUyQ,MAAQ,SAAgBpX,GACnC,OAAOzH,KAAKmR,QAAQyN,OAAOnX,IAI7BzF,EAAGoM,UAAUsF,MAAQ,SAAgBrN,GAGnC,OAFAwH,EAAsB,kBAARxH,GACdwH,EAAOxH,EAAM,UACTA,EAAM,EAAUrG,KAAK8e,OAAOzY,GAGV,IAAlBrG,KAAKyO,SACa,IAAhBzO,KAAKc,SAAiC,EAAhBd,KAAK0O,MAAM,KAAWrI,GAC9CrG,KAAK0O,MAAM,GAAKrI,GAAuB,EAAhBrG,KAAK0O,MAAM,IAClC1O,KAAKyO,SAAW,EACTzO,OAGTA,KAAKyO,SAAW,EAChBzO,KAAK8e,MAAMzY,GACXrG,KAAKyO,SAAW,EACTzO,MAIFA,KAAKgR,OAAO3K,IAGrBrE,EAAGoM,UAAU4C,OAAS,SAAiB3K,GACrCrG,KAAK0O,MAAM,IAAMrI,EAGjB,IAAK,IAAIjE,EAAI,EAAGA,EAAIpC,KAAKc,QAAUd,KAAK0O,MAAMtM,IAAM,SAAWA,IAC7DpC,KAAK0O,MAAMtM,IAAM,SACbA,IAAMpC,KAAKc,OAAS,EACtBd,KAAK0O,MAAMtM,EAAI,GAAK,EAEpBpC,KAAK0O,MAAMtM,EAAI,KAKnB,OAFApC,KAAKc,OAAS6O,KAAKjC,IAAI1N,KAAKc,OAAQsB,EAAI,GAEjCpC,MAITgC,EAAGoM,UAAU0Q,MAAQ,SAAgBzY,GAGnC,GAFAwH,EAAsB,kBAARxH,GACdwH,EAAOxH,EAAM,UACTA,EAAM,EAAG,OAAOrG,KAAK0T,OAAOrN,GAEhC,GAAsB,IAAlBrG,KAAKyO,SAIP,OAHAzO,KAAKyO,SAAW,EAChBzO,KAAK0T,MAAMrN,GACXrG,KAAKyO,SAAW,EACTzO,KAKT,GAFAA,KAAK0O,MAAM,IAAMrI,EAEG,IAAhBrG,KAAKc,QAAgBd,KAAK0O,MAAM,GAAK,EACvC1O,KAAK0O,MAAM,IAAM1O,KAAK0O,MAAM,GAC5B1O,KAAKyO,SAAW,OAGhB,IAAK,IAAIrM,EAAI,EAAGA,EAAIpC,KAAKc,QAAUd,KAAK0O,MAAMtM,GAAK,EAAGA,IACpDpC,KAAK0O,MAAMtM,IAAM,SACjBpC,KAAK0O,MAAMtM,EAAI,IAAM,EAIzB,OAAOpC,KAAKyQ,UAGdzO,EAAGoM,UAAUtC,KAAO,SAAezF,GACjC,OAAOrG,KAAKmR,QAAQuC,MAAMrN,IAG5BrE,EAAGoM,UAAU1C,KAAO,SAAerF,GACjC,OAAOrG,KAAKmR,QAAQ2N,MAAMzY,IAG5BrE,EAAGoM,UAAU2Q,KAAO,WAGlB,OAFA/e,KAAKyO,SAAW,EAETzO,MAGTgC,EAAGoM,UAAUoF,IAAM,WACjB,OAAOxT,KAAKmR,QAAQ4N,QAGtB/c,EAAGoM,UAAU4Q,aAAe,SAAuB3Y,EAAKmJ,EAAKsD,GAC3D,IACI1Q,EAIAmO,EALAb,EAAMrJ,EAAIvF,OAASgS,EAGvB9S,KAAKoR,QAAQ1B,GAGb,IAAIoC,EAAQ,EACZ,IAAK1P,EAAI,EAAGA,EAAIiE,EAAIvF,OAAQsB,IAAK,CAC/BmO,GAA6B,EAAxBvQ,KAAK0O,MAAMtM,EAAI0Q,IAAchB,EAClC,IAAIrM,GAAwB,EAAfY,EAAIqI,MAAMtM,IAAUoN,EAEjCsC,IADAvB,GAAa,SAAR9K,IACS,KAAQA,EAAQ,SAAa,GAC3CzF,KAAK0O,MAAMtM,EAAI0Q,GAAa,SAAJvC,EAE1B,KAAOnO,EAAIpC,KAAKc,OAASgS,EAAO1Q,IAE9B0P,GADAvB,GAA6B,EAAxBvQ,KAAK0O,MAAMtM,EAAI0Q,IAAchB,IACrB,GACb9R,KAAK0O,MAAMtM,EAAI0Q,GAAa,SAAJvC,EAG1B,GAAc,IAAVuB,EAAa,OAAO9R,KAAKyQ,SAK7B,IAFA5C,GAAkB,IAAXiE,GACPA,EAAQ,EACH1P,EAAI,EAAGA,EAAIpC,KAAKc,OAAQsB,IAE3B0P,GADAvB,IAAsB,EAAhBvQ,KAAK0O,MAAMtM,IAAU0P,IACd,GACb9R,KAAK0O,MAAMtM,GAAS,SAAJmO,EAIlB,OAFAvQ,KAAKyO,SAAW,EAETzO,KAAKyQ,UAGdzO,EAAGoM,UAAU6Q,SAAW,SAAmB5Y,EAAK6Y,GAC9C,IAAIpM,GAAQ9S,KAAKc,OAASuF,EAAIvF,QAE1B8E,EAAI5F,KAAKmR,QACT1B,EAAIpJ,EAGJ8Y,EAA8B,EAAxB1P,EAAEf,MAAMe,EAAE3O,OAAS,GAGf,KADdgS,EAAQ,GADM9S,KAAKiT,WAAWkM,MAG5B1P,EAAIA,EAAEgP,MAAM3L,GACZlN,EAAEiY,OAAO/K,GACTqM,EAA8B,EAAxB1P,EAAEf,MAAMe,EAAE3O,OAAS,IAI3B,IACI8c,EADAtB,EAAI1W,EAAE9E,OAAS2O,EAAE3O,OAGrB,GAAa,QAAToe,EAAgB,EAClBtB,EAAI,IAAI5b,EAAG,OACTlB,OAASwb,EAAI,EACfsB,EAAElP,MAAQ,IAAIjO,MAAMmd,EAAE9c,QACtB,IAAK,IAAIsB,EAAI,EAAGA,EAAIwb,EAAE9c,OAAQsB,IAC5Bwb,EAAElP,MAAMtM,GAAK,EAIjB,IAAIgd,EAAOxZ,EAAEuL,QAAQ6N,aAAavP,EAAG,EAAG6M,GAClB,IAAlB8C,EAAK3Q,WACP7I,EAAIwZ,EACAxB,IACFA,EAAElP,MAAM4N,GAAK,IAIjB,IAAK,IAAIhM,EAAIgM,EAAI,EAAGhM,GAAK,EAAGA,IAAK,CAC/B,IAAI+O,EAAmC,UAAL,EAAxBzZ,EAAE8I,MAAMe,EAAE3O,OAASwP,KACE,EAA5B1K,EAAE8I,MAAMe,EAAE3O,OAASwP,EAAI,IAO1B,IAHA+O,EAAK1P,KAAKC,IAAKyP,EAAKF,EAAO,EAAG,UAE9BvZ,EAAEoZ,aAAavP,EAAG4P,EAAI/O,GACA,IAAf1K,EAAE6I,UACP4Q,IACAzZ,EAAE6I,SAAW,EACb7I,EAAEoZ,aAAavP,EAAG,EAAGa,GAChB1K,EAAEzE,WACLyE,EAAE6I,UAAY,GAGdmP,IACFA,EAAElP,MAAM4B,GAAK+O,GAajB,OAVIzB,GACFA,EAAEnN,SAEJ7K,EAAE6K,SAGW,QAATyO,GAA4B,IAAVpM,GACpBlN,EAAEqY,OAAOnL,GAGJ,CACLwM,IAAK1B,GAAK,KACV/M,IAAKjL,IAQT5D,EAAGoM,UAAUmR,OAAS,SAAiBlZ,EAAK6Y,EAAMM,GAGhD,OAFA3R,GAAQxH,EAAIlF,UAERnB,KAAKmB,SACA,CACLme,IAAK,IAAItd,EAAG,GACZ6O,IAAK,IAAI7O,EAAG,IAKM,IAAlBhC,KAAKyO,UAAmC,IAAjBpI,EAAIoI,UAC7BiE,EAAM1S,KAAK8T,MAAMyL,OAAOlZ,EAAK6Y,GAEhB,QAATA,IACFI,EAAM5M,EAAI4M,IAAIxL,OAGH,QAAToL,IACFrO,EAAM6B,EAAI7B,IAAIiD,MACV0L,GAA6B,IAAjB3O,EAAIpC,UAClBoC,EAAImE,KAAK3O,IAIN,CACLiZ,IAAKA,EACLzO,IAAKA,IAIa,IAAlB7Q,KAAKyO,UAAmC,IAAjBpI,EAAIoI,UAC7BiE,EAAM1S,KAAKuf,OAAOlZ,EAAIyN,MAAOoL,GAEhB,QAATA,IACFI,EAAM5M,EAAI4M,IAAIxL,OAGT,CACLwL,IAAKA,EACLzO,IAAK6B,EAAI7B,MAI0B,KAAlC7Q,KAAKyO,SAAWpI,EAAIoI,WACvBiE,EAAM1S,KAAK8T,MAAMyL,OAAOlZ,EAAIyN,MAAOoL,GAEtB,QAATA,IACFrO,EAAM6B,EAAI7B,IAAIiD,MACV0L,GAA6B,IAAjB3O,EAAIpC,UAClBoC,EAAIoE,KAAK5O,IAIN,CACLiZ,IAAK5M,EAAI4M,IACTzO,IAAKA,IAOLxK,EAAIvF,OAASd,KAAKc,QAAUd,KAAKoN,IAAI/G,GAAO,EACvC,CACLiZ,IAAK,IAAItd,EAAG,GACZ6O,IAAK7Q,MAKU,IAAfqG,EAAIvF,OACO,QAAToe,EACK,CACLI,IAAKtf,KAAKyf,KAAKpZ,EAAIqI,MAAM,IACzBmC,IAAK,MAII,QAATqO,EACK,CACLI,IAAK,KACLzO,IAAK,IAAI7O,EAAGhC,KAAKiS,MAAM5L,EAAIqI,MAAM,MAI9B,CACL4Q,IAAKtf,KAAKyf,KAAKpZ,EAAIqI,MAAM,IACzBmC,IAAK,IAAI7O,EAAGhC,KAAKiS,MAAM5L,EAAIqI,MAAM,MAI9B1O,KAAKif,SAAS5Y,EAAK6Y,GAlF1B,IAAII,EAAKzO,EAAK6B,GAsFhB1Q,EAAGoM,UAAUkR,IAAM,SAAcjZ,GAC/B,OAAOrG,KAAKuf,OAAOlZ,EAAK,OAAO,GAAOiZ,KAIxCtd,EAAGoM,UAAUyC,IAAM,SAAcxK,GAC/B,OAAOrG,KAAKuf,OAAOlZ,EAAK,OAAO,GAAOwK,KAGxC7O,EAAGoM,UAAUsR,KAAO,SAAerZ,GACjC,OAAOrG,KAAKuf,OAAOlZ,EAAK,OAAO,GAAMwK,KAIvC7O,EAAGoM,UAAUuR,SAAW,SAAmBtZ,GACzC,IAAIuZ,EAAK5f,KAAKuf,OAAOlZ,GAGrB,GAAIuZ,EAAG/O,IAAI1P,SAAU,OAAOye,EAAGN,IAE/B,IAAIzO,EAA0B,IAApB+O,EAAGN,IAAI7Q,SAAiBmR,EAAG/O,IAAIoE,KAAK5O,GAAOuZ,EAAG/O,IAEpDgP,EAAOxZ,EAAIsY,MAAM,GACjBmB,EAAKzZ,EAAI0Z,MAAM,GACf3S,EAAMyD,EAAIzD,IAAIyS,GAGlB,OAAIzS,EAAM,GAAa,IAAP0S,GAAoB,IAAR1S,EAAmBwS,EAAGN,IAGvB,IAApBM,EAAGN,IAAI7Q,SAAiBmR,EAAGN,IAAIR,MAAM,GAAKc,EAAGN,IAAI5L,MAAM,IAGhE1R,EAAGoM,UAAU6D,MAAQ,SAAgB5L,GACnC,IAAImX,EAAWnX,EAAM,EACjBmX,IAAUnX,GAAOA,GAErBwH,EAAOxH,GAAO,UAId,IAHA,IAAIwV,GAAK,GAAK,IAAMxV,EAEhB2Z,EAAM,EACD5d,EAAIpC,KAAKc,OAAS,EAAGsB,GAAK,EAAGA,IACpC4d,GAAOnE,EAAImE,GAAuB,EAAhBhgB,KAAK0O,MAAMtM,KAAWiE,EAG1C,OAAOmX,GAAYwC,EAAMA,GAI3Bhe,EAAGoM,UAAU6R,KAAO,SAAe5Z,GACjC,OAAOrG,KAAKiS,MAAM5L,IAIpBrE,EAAGoM,UAAU8D,MAAQ,SAAgB7L,GACnC,IAAImX,EAAWnX,EAAM,EACjBmX,IAAUnX,GAAOA,GAErBwH,EAAOxH,GAAO,UAGd,IADA,IAAIyL,EAAQ,EACH1P,EAAIpC,KAAKc,OAAS,EAAGsB,GAAK,EAAGA,IAAK,CACzC,IAAImO,GAAqB,EAAhBvQ,KAAK0O,MAAMtM,IAAkB,SAAR0P,EAC9B9R,KAAK0O,MAAMtM,GAAMmO,EAAIlK,EAAO,EAC5ByL,EAAQvB,EAAIlK,EAId,OADArG,KAAKyQ,SACE+M,EAAWxd,KAAK6T,OAAS7T,MAGlCgC,EAAGoM,UAAUqR,KAAO,SAAepZ,GACjC,OAAOrG,KAAKmR,QAAQe,MAAM7L,IAG5BrE,EAAGoM,UAAU8R,KAAO,SAAerE,GACjChO,EAAsB,IAAfgO,EAAEpN,UACTZ,GAAQgO,EAAE1a,UAEV,IAAIuZ,EAAI1a,KACJ2a,EAAIkB,EAAE1K,QAGRuJ,EADiB,IAAfA,EAAEjM,SACAiM,EAAEgF,KAAK7D,GAEPnB,EAAEvJ,QAaR,IATA,IAAIgP,EAAI,IAAIne,EAAG,GACXoe,EAAI,IAAIpe,EAAG,GAGXqe,EAAI,IAAIre,EAAG,GACXse,EAAI,IAAIte,EAAG,GAEXue,EAAI,EAED7F,EAAE8F,UAAY7F,EAAE6F,UACrB9F,EAAEuD,OAAO,GACTtD,EAAEsD,OAAO,KACPsC,EAMJ,IAHA,IAAIE,EAAK9F,EAAExJ,QACPuP,EAAKhG,EAAEvJ,SAEHuJ,EAAEvZ,UAAU,CAClB,IAAK,IAAIiB,EAAI,EAAGue,EAAK,EAAyB,KAArBjG,EAAEhM,MAAM,GAAKiS,IAAave,EAAI,KAAMA,EAAGue,IAAO,GACvE,GAAIve,EAAI,EAEN,IADAsY,EAAEuD,OAAO7b,GACFA,KAAM,IACP+d,EAAES,SAAWR,EAAEQ,WACjBT,EAAEnL,KAAKyL,GACPL,EAAEnL,KAAKyL,IAGTP,EAAElC,OAAO,GACTmC,EAAEnC,OAAO,GAIb,IAAK,IAAI3N,EAAI,EAAGuQ,EAAK,EAAyB,KAArBlG,EAAEjM,MAAM,GAAKmS,IAAavQ,EAAI,KAAMA,EAAGuQ,IAAO,GACvE,GAAIvQ,EAAI,EAEN,IADAqK,EAAEsD,OAAO3N,GACFA,KAAM,IACP+P,EAAEO,SAAWN,EAAEM,WACjBP,EAAErL,KAAKyL,GACPH,EAAErL,KAAKyL,IAGTL,EAAEpC,OAAO,GACTqC,EAAErC,OAAO,GAITvD,EAAEtN,IAAIuN,IAAM,GACdD,EAAEzF,KAAK0F,GACPwF,EAAElL,KAAKoL,GACPD,EAAEnL,KAAKqL,KAEP3F,EAAE1F,KAAKyF,GACP2F,EAAEpL,KAAKkL,GACPG,EAAErL,KAAKmL,IAIX,MAAO,CACLxa,EAAGya,EACH5Q,EAAG6Q,EACHQ,IAAKnG,EAAEkD,OAAO0C,KAOlBve,EAAGoM,UAAU2S,OAAS,SAAiBlF,GACrChO,EAAsB,IAAfgO,EAAEpN,UACTZ,GAAQgO,EAAE1a,UAEV,IAAIyE,EAAI5F,KACJyP,EAAIoM,EAAE1K,QAGRvL,EADiB,IAAfA,EAAE6I,SACA7I,EAAE8Z,KAAK7D,GAEPjW,EAAEuL,QAQR,IALA,IAuCIuB,EAvCAsO,EAAK,IAAIhf,EAAG,GACZif,EAAK,IAAIjf,EAAG,GAEZkf,EAAQzR,EAAE0B,QAEPvL,EAAEub,KAAK,GAAK,GAAK1R,EAAE0R,KAAK,GAAK,GAAG,CACrC,IAAK,IAAI/e,EAAI,EAAGue,EAAK,EAAyB,KAArB/a,EAAE8I,MAAM,GAAKiS,IAAave,EAAI,KAAMA,EAAGue,IAAO,GACvE,GAAIve,EAAI,EAEN,IADAwD,EAAEqY,OAAO7b,GACFA,KAAM,GACP4e,EAAGJ,SACLI,EAAGhM,KAAKkM,GAGVF,EAAG/C,OAAO,GAId,IAAK,IAAI3N,EAAI,EAAGuQ,EAAK,EAAyB,KAArBpR,EAAEf,MAAM,GAAKmS,IAAavQ,EAAI,KAAMA,EAAGuQ,IAAO,GACvE,GAAIvQ,EAAI,EAEN,IADAb,EAAEwO,OAAO3N,GACFA,KAAM,GACP2Q,EAAGL,SACLK,EAAGjM,KAAKkM,GAGVD,EAAGhD,OAAO,GAIVrY,EAAEwH,IAAIqC,IAAM,GACd7J,EAAEqP,KAAKxF,GACPuR,EAAG/L,KAAKgM,KAERxR,EAAEwF,KAAKrP,GACPqb,EAAGhM,KAAK+L,IAeZ,OATEtO,EADgB,IAAd9M,EAAEub,KAAK,GACHH,EAEAC,GAGAE,KAAK,GAAK,GAChBzO,EAAIsC,KAAK6G,GAGJnJ,GAGT1Q,EAAGoM,UAAU0S,IAAM,SAAcza,GAC/B,GAAIrG,KAAKmB,SAAU,OAAOkF,EAAImN,MAC9B,GAAInN,EAAIlF,SAAU,OAAOnB,KAAKwT,MAE9B,IAAI5N,EAAI5F,KAAKmR,QACT1B,EAAIpJ,EAAI8K,QACZvL,EAAE6I,SAAW,EACbgB,EAAEhB,SAAW,EAGb,IAAK,IAAIqE,EAAQ,EAAGlN,EAAE4a,UAAY/Q,EAAE+Q,SAAU1N,IAC5ClN,EAAEqY,OAAO,GACTxO,EAAEwO,OAAO,GAGX,OAAG,CACD,KAAOrY,EAAE4a,UACP5a,EAAEqY,OAAO,GAEX,KAAOxO,EAAE+Q,UACP/Q,EAAEwO,OAAO,GAGX,IAAI3R,EAAI1G,EAAEwH,IAAIqC,GACd,GAAInD,EAAI,EAAG,CAET,IAAI4G,EAAItN,EACRA,EAAI6J,EACJA,EAAIyD,OACC,GAAU,IAAN5G,GAAyB,IAAdmD,EAAE0R,KAAK,GAC3B,MAGFvb,EAAEqP,KAAKxF,GAGT,OAAOA,EAAEoO,OAAO/K,IAIlB9Q,EAAGoM,UAAUgT,KAAO,SAAe/a,GACjC,OAAOrG,KAAKkgB,KAAK7Z,GAAKT,EAAE8Z,KAAKrZ,IAG/BrE,EAAGoM,UAAUoS,OAAS,WACpB,OAA+B,KAAP,EAAhBxgB,KAAK0O,MAAM,KAGrB1M,EAAGoM,UAAUwS,MAAQ,WACnB,OAA+B,KAAP,EAAhB5gB,KAAK0O,MAAM,KAIrB1M,EAAGoM,UAAU2R,MAAQ,SAAgB1Z,GACnC,OAAOrG,KAAK0O,MAAM,GAAKrI,GAIzBrE,EAAGoM,UAAUiT,MAAQ,SAAgBvM,GACnCjH,EAAsB,kBAARiH,GACd,IAAIxI,EAAIwI,EAAM,GACVvI,GAAKuI,EAAMxI,GAAK,GAChBsR,EAAI,GAAKtR,EAGb,GAAItM,KAAKc,QAAUyL,EAGjB,OAFAvM,KAAKoR,QAAQ7E,EAAI,GACjBvM,KAAK0O,MAAMnC,IAAMqR,EACV5d,KAKT,IADA,IAAI8R,EAAQ8L,EACHxb,EAAImK,EAAa,IAAVuF,GAAe1P,EAAIpC,KAAKc,OAAQsB,IAAK,CACnD,IAAImO,EAAoB,EAAhBvQ,KAAK0O,MAAMtM,GAEnB0P,GADAvB,GAAKuB,KACS,GACdvB,GAAK,SACLvQ,KAAK0O,MAAMtM,GAAKmO,EAMlB,OAJc,IAAVuB,IACF9R,KAAK0O,MAAMtM,GAAK0P,EAChB9R,KAAKc,UAEAd,MAGTgC,EAAGoM,UAAUjN,OAAS,WACpB,OAAuB,IAAhBnB,KAAKc,QAAkC,IAAlBd,KAAK0O,MAAM,IAGzC1M,EAAGoM,UAAU+S,KAAO,SAAe9a,GACjC,IAOIqM,EAPAjE,EAAWpI,EAAM,EAErB,GAAsB,IAAlBrG,KAAKyO,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlBzO,KAAKyO,UAAkBA,EAAU,OAAO,EAK5C,GAHAzO,KAAKyQ,SAGDzQ,KAAKc,OAAS,EAChB4R,EAAM,MACD,CACDjE,IACFpI,GAAOA,GAGTwH,EAAOxH,GAAO,SAAW,qBAEzB,IAAIkK,EAAoB,EAAhBvQ,KAAK0O,MAAM,GACnBgE,EAAMnC,IAAMlK,EAAM,EAAIkK,EAAIlK,GAAO,EAAI,EAEvC,OAAsB,IAAlBrG,KAAKyO,SAA8B,GAANiE,EAC1BA,GAOT1Q,EAAGoM,UAAUhB,IAAM,SAAc/G,GAC/B,GAAsB,IAAlBrG,KAAKyO,UAAmC,IAAjBpI,EAAIoI,SAAgB,OAAQ,EACvD,GAAsB,IAAlBzO,KAAKyO,UAAmC,IAAjBpI,EAAIoI,SAAgB,OAAO,EAEtD,IAAIiE,EAAM1S,KAAKshB,KAAKjb,GACpB,OAAsB,IAAlBrG,KAAKyO,SAA8B,GAANiE,EAC1BA,GAIT1Q,EAAGoM,UAAUkT,KAAO,SAAejb,GAEjC,GAAIrG,KAAKc,OAASuF,EAAIvF,OAAQ,OAAO,EACrC,GAAId,KAAKc,OAASuF,EAAIvF,OAAQ,OAAQ,EAGtC,IADA,IAAI4R,EAAM,EACDtQ,EAAIpC,KAAKc,OAAS,EAAGsB,GAAK,EAAGA,IAAK,CACzC,IAAIwD,EAAoB,EAAhB5F,KAAK0O,MAAMtM,GACfqN,EAAmB,EAAfpJ,EAAIqI,MAAMtM,GAElB,GAAIwD,IAAM6J,EAAV,CACI7J,EAAI6J,EACNiD,GAAO,EACE9M,EAAI6J,IACbiD,EAAM,GAER,OAEF,OAAOA,GAGT1Q,EAAGoM,UAAUmT,IAAM,SAAclb,GAC/B,OAA0B,IAAnBrG,KAAKmhB,KAAK9a,IAGnBrE,EAAGoM,UAAUjB,GAAK,SAAa9G,GAC7B,OAAyB,IAAlBrG,KAAKoN,IAAI/G,IAGlBrE,EAAGoM,UAAUoT,KAAO,SAAenb,GACjC,OAAOrG,KAAKmhB,KAAK9a,IAAQ,GAG3BrE,EAAGoM,UAAUrJ,IAAM,SAAcsB,GAC/B,OAAOrG,KAAKoN,IAAI/G,IAAQ,GAG1BrE,EAAGoM,UAAUqT,IAAM,SAAcpb,GAC/B,OAA2B,IAApBrG,KAAKmhB,KAAK9a,IAGnBrE,EAAGoM,UAAUvN,GAAK,SAAawF,GAC7B,OAA0B,IAAnBrG,KAAKoN,IAAI/G,IAGlBrE,EAAGoM,UAAUsT,KAAO,SAAerb,GACjC,OAAOrG,KAAKmhB,KAAK9a,IAAQ,GAG3BrE,EAAGoM,UAAUpJ,IAAM,SAAcqB,GAC/B,OAAOrG,KAAKoN,IAAI/G,IAAQ,GAG1BrE,EAAGoM,UAAUlC,IAAM,SAAc7F,GAC/B,OAA0B,IAAnBrG,KAAKmhB,KAAK9a,IAGnBrE,EAAGoM,UAAUuT,GAAK,SAAatb,GAC7B,OAAyB,IAAlBrG,KAAKoN,IAAI/G,IAOlBrE,EAAG2M,IAAM,SAActI,GACrB,OAAO,IAAIub,EAAIvb,IAGjBrE,EAAGoM,UAAUyT,MAAQ,SAAgBC,GAGnC,OAFAjU,GAAQ7N,KAAK2O,IAAK,yCAClBd,EAAyB,IAAlB7N,KAAKyO,SAAgB,iCACrBqT,EAAIC,UAAU/hB,MAAMgiB,UAAUF,IAGvC9f,EAAGoM,UAAU6T,QAAU,WAErB,OADApU,EAAO7N,KAAK2O,IAAK,wDACV3O,KAAK2O,IAAIuT,YAAYliB,OAG9BgC,EAAGoM,UAAU4T,UAAY,SAAoBF,GAE3C,OADA9hB,KAAK2O,IAAMmT,EACJ9hB,MAGTgC,EAAGoM,UAAU+T,SAAW,SAAmBL,GAEzC,OADAjU,GAAQ7N,KAAK2O,IAAK,yCACX3O,KAAKgiB,UAAUF,IAGxB9f,EAAGoM,UAAUgU,OAAS,SAAiB/b,GAErC,OADAwH,EAAO7N,KAAK2O,IAAK,sCACV3O,KAAK2O,IAAIuG,IAAIlV,KAAMqG,IAG5BrE,EAAGoM,UAAUiU,QAAU,SAAkBhc,GAEvC,OADAwH,EAAO7N,KAAK2O,IAAK,uCACV3O,KAAK2O,IAAIqG,KAAKhV,KAAMqG,IAG7BrE,EAAGoM,UAAUkU,OAAS,SAAiBjc,GAErC,OADAwH,EAAO7N,KAAK2O,IAAK,sCACV3O,KAAK2O,IAAI/C,IAAI5L,KAAMqG,IAG5BrE,EAAGoM,UAAUmU,QAAU,SAAkBlc,GAEvC,OADAwH,EAAO7N,KAAK2O,IAAK,uCACV3O,KAAK2O,IAAIsG,KAAKjV,KAAMqG,IAG7BrE,EAAGoM,UAAUoU,OAAS,SAAiBnc,GAErC,OADAwH,EAAO7N,KAAK2O,IAAK,sCACV3O,KAAK2O,IAAI8T,IAAIziB,KAAMqG,IAG5BrE,EAAGoM,UAAUsU,OAAS,SAAiBrc,GAGrC,OAFAwH,EAAO7N,KAAK2O,IAAK,sCACjB3O,KAAK2O,IAAIgU,SAAS3iB,KAAMqG,GACjBrG,KAAK2O,IAAIa,IAAIxP,KAAMqG,IAG5BrE,EAAGoM,UAAUwU,QAAU,SAAkBvc,GAGvC,OAFAwH,EAAO7N,KAAK2O,IAAK,sCACjB3O,KAAK2O,IAAIgU,SAAS3iB,KAAMqG,GACjBrG,KAAK2O,IAAIwK,KAAKnZ,KAAMqG,IAG7BrE,EAAGoM,UAAUyU,OAAS,WAGpB,OAFAhV,EAAO7N,KAAK2O,IAAK,sCACjB3O,KAAK2O,IAAImU,SAAS9iB,MACXA,KAAK2O,IAAI8O,IAAIzd,OAGtBgC,EAAGoM,UAAU2U,QAAU,WAGrB,OAFAlV,EAAO7N,KAAK2O,IAAK,uCACjB3O,KAAK2O,IAAImU,SAAS9iB,MACXA,KAAK2O,IAAI+O,KAAK1d,OAIvBgC,EAAGoM,UAAU4U,QAAU,WAGrB,OAFAnV,EAAO7N,KAAK2O,IAAK,uCACjB3O,KAAK2O,IAAImU,SAAS9iB,MACXA,KAAK2O,IAAIsU,KAAKjjB,OAGvBgC,EAAGoM,UAAU8U,QAAU,WAGrB,OAFArV,EAAO7N,KAAK2O,IAAK,uCACjB3O,KAAK2O,IAAImU,SAAS9iB,MACXA,KAAK2O,IAAIyS,KAAKphB,OAIvBgC,EAAGoM,UAAU+U,OAAS,WAGpB,OAFAtV,EAAO7N,KAAK2O,IAAK,sCACjB3O,KAAK2O,IAAImU,SAAS9iB,MACXA,KAAK2O,IAAImF,IAAI9T,OAGtBgC,EAAGoM,UAAUgV,OAAS,SAAiB/c,GAGrC,OAFAwH,EAAO7N,KAAK2O,MAAQtI,EAAIsI,IAAK,qBAC7B3O,KAAK2O,IAAImU,SAAS9iB,MACXA,KAAK2O,IAAIsC,IAAIjR,KAAMqG,IAI5B,IAAIgd,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQ5Y,EAAM+Q,GAErB7b,KAAK8K,KAAOA,EACZ9K,KAAK6b,EAAI,IAAI7Z,EAAG6Z,EAAG,IACnB7b,KAAKwJ,EAAIxJ,KAAK6b,EAAEzI,YAChBpT,KAAKiH,EAAI,IAAIjF,EAAG,GAAG6b,OAAO7d,KAAKwJ,GAAGyL,KAAKjV,KAAK6b,GAE5C7b,KAAK2jB,IAAM3jB,KAAK4jB,OAiDlB,SAASC,IACPH,EAAOI,KACL9jB,KACA,OACA,2EA+DJ,SAAS+jB,IACPL,EAAOI,KACL9jB,KACA,OACA,kEAIJ,SAASgkB,IACPN,EAAOI,KACL9jB,KACA,OACA,yDAIJ,SAASikB,IAEPP,EAAOI,KACL9jB,KACA,QACA,uEA8CJ,SAAS4hB,EAAKtF,GACZ,GAAiB,kBAANA,EAAgB,CACzB,IAAI4H,EAAQliB,EAAGmiB,OAAO7H,GACtBtc,KAAKsc,EAAI4H,EAAMrI,EACf7b,KAAKkkB,MAAQA,OAEbrW,EAAOyO,EAAEiF,IAAI,GAAI,kCACjBvhB,KAAKsc,EAAIA,EACTtc,KAAKkkB,MAAQ,KAoOjB,SAASE,EAAM9H,GACbsF,EAAIkC,KAAK9jB,KAAMsc,GAEftc,KAAK8S,MAAQ9S,KAAKsc,EAAElJ,YAChBpT,KAAK8S,MAAQ,KAAO,IACtB9S,KAAK8S,OAAS,GAAM9S,KAAK8S,MAAQ,IAGnC9S,KAAKsM,EAAI,IAAItK,EAAG,GAAG6b,OAAO7d,KAAK8S,OAC/B9S,KAAK8f,GAAK9f,KAAKqkB,KAAKrkB,KAAKsM,EAAEmR,OAC3Bzd,KAAKskB,KAAOtkB,KAAKsM,EAAEyU,OAAO/gB,KAAKsc,GAE/Btc,KAAKukB,KAAOvkB,KAAKskB,KAAK9U,IAAIxP,KAAKsM,GAAGwS,MAAM,GAAGQ,IAAItf,KAAKsc,GACpDtc,KAAKukB,KAAOvkB,KAAKukB,KAAK7E,KAAK1f,KAAKsM,GAChCtM,KAAKukB,KAAOvkB,KAAKsM,EAAEV,IAAI5L,KAAKukB,MA9a9Bb,EAAOtV,UAAUwV,KAAO,WACtB,IAAID,EAAM,IAAI3hB,EAAG,MAEjB,OADA2hB,EAAIjV,MAAQ,IAAIjO,MAAMkP,KAAKU,KAAKrQ,KAAKwJ,EAAI,KAClCma,GAGTD,EAAOtV,UAAUoW,QAAU,SAAkBne,GAG3C,IACIoe,EADAnY,EAAIjG,EAGR,GACErG,KAAK0kB,MAAMpY,EAAGtM,KAAK2jB,KAGnBc,GADAnY,GADAA,EAAItM,KAAK2kB,MAAMrY,IACT0I,KAAKhV,KAAK2jB,MACPvQ,kBACFqR,EAAOzkB,KAAKwJ,GAErB,IAAI4D,EAAMqX,EAAOzkB,KAAKwJ,GAAK,EAAI8C,EAAEgV,KAAKthB,KAAK6b,GAgB3C,OAfY,IAARzO,GACFd,EAAEoC,MAAM,GAAK,EACbpC,EAAExL,OAAS,GACFsM,EAAM,EACfd,EAAE2I,KAAKjV,KAAK6b,QAEIxb,IAAZiM,EAAEsY,MAEJtY,EAAEsY,QAGFtY,EAAEmE,SAICnE,GAGToX,EAAOtV,UAAUsW,MAAQ,SAAgBzc,EAAO4J,GAC9C5J,EAAMgW,OAAOje,KAAKwJ,EAAG,EAAGqI,IAG1B6R,EAAOtV,UAAUuW,MAAQ,SAAgBte,GACvC,OAAOA,EAAI8S,KAAKnZ,KAAKiH,IASvB8G,EAAS8V,EAAMH,GAEfG,EAAKzV,UAAUsW,MAAQ,SAAgBzc,EAAOuF,GAK5C,IAHA,IAAI6Q,EAAO,QAEPwG,EAASlV,KAAKC,IAAI3H,EAAMnH,OAAQ,GAC3BsB,EAAI,EAAGA,EAAIyiB,EAAQziB,IAC1BoL,EAAOkB,MAAMtM,GAAK6F,EAAMyG,MAAMtM,GAIhC,GAFAoL,EAAO1M,OAAS+jB,EAEZ5c,EAAMnH,QAAU,EAGlB,OAFAmH,EAAMyG,MAAM,GAAK,OACjBzG,EAAMnH,OAAS,GAKjB,IAAIgkB,EAAO7c,EAAMyG,MAAM,GAGvB,IAFAlB,EAAOkB,MAAMlB,EAAO1M,UAAYgkB,EAAOzG,EAElCjc,EAAI,GAAIA,EAAI6F,EAAMnH,OAAQsB,IAAK,CAClC,IAAI2iB,EAAwB,EAAjB9c,EAAMyG,MAAMtM,GACvB6F,EAAMyG,MAAMtM,EAAI,KAAQ2iB,EAAO1G,IAAS,EAAMyG,IAAS,GACvDA,EAAOC,EAETD,KAAU,GACV7c,EAAMyG,MAAMtM,EAAI,IAAM0iB,EACT,IAATA,GAAc7c,EAAMnH,OAAS,GAC/BmH,EAAMnH,QAAU,GAEhBmH,EAAMnH,QAAU,GAIpB+iB,EAAKzV,UAAUuW,MAAQ,SAAgBte,GAErCA,EAAIqI,MAAMrI,EAAIvF,QAAU,EACxBuF,EAAIqI,MAAMrI,EAAIvF,OAAS,GAAK,EAC5BuF,EAAIvF,QAAU,EAId,IADA,IAAIsR,EAAK,EACAhQ,EAAI,EAAGA,EAAIiE,EAAIvF,OAAQsB,IAAK,CACnC,IAAImO,EAAmB,EAAflK,EAAIqI,MAAMtM,GAClBgQ,GAAU,IAAJ7B,EACNlK,EAAIqI,MAAMtM,GAAU,SAALgQ,EACfA,EAAS,GAAJ7B,GAAa6B,EAAK,SAAa,GAUtC,OANkC,IAA9B/L,EAAIqI,MAAMrI,EAAIvF,OAAS,KACzBuF,EAAIvF,SAC8B,IAA9BuF,EAAIqI,MAAMrI,EAAIvF,OAAS,IACzBuF,EAAIvF,UAGDuF,GAST0H,EAASgW,EAAML,GAQf3V,EAASiW,EAAMN,GASf3V,EAASkW,EAAQP,GAEjBO,EAAO7V,UAAUuW,MAAQ,SAAgBte,GAGvC,IADA,IAAIyL,EAAQ,EACH1P,EAAI,EAAGA,EAAIiE,EAAIvF,OAAQsB,IAAK,CACnC,IAAIiR,EAA0B,IAAL,EAAfhN,EAAIqI,MAAMtM,IAAiB0P,EACjCM,EAAU,SAALiB,EACTA,KAAQ,GAERhN,EAAIqI,MAAMtM,GAAKgQ,EACfN,EAAQuB,EAKV,OAHc,IAAVvB,IACFzL,EAAIqI,MAAMrI,EAAIvF,UAAYgR,GAErBzL,GAITrE,EAAGmiB,OAAS,SAAgBrZ,GAE1B,GAAIuY,EAAOvY,GAAO,OAAOuY,EAAOvY,GAEhC,IAAIoZ,EACJ,GAAa,SAATpZ,EACFoZ,EAAQ,IAAIL,OACP,GAAa,SAAT/Y,EACToZ,EAAQ,IAAIH,OACP,GAAa,SAATjZ,EACToZ,EAAQ,IAAIF,MACP,IAAa,WAATlZ,EAGT,MAAM,IAAInK,MAAM,iBAAmBmK,GAFnCoZ,EAAQ,IAAID,EAMd,OAFAZ,EAAOvY,GAAQoZ,EAERA,GAkBTtC,EAAIxT,UAAU0U,SAAW,SAAmBld,GAC1CiI,EAAsB,IAAfjI,EAAE6I,SAAgB,iCACzBZ,EAAOjI,EAAE+I,IAAK,oCAGhBiT,EAAIxT,UAAUuU,SAAW,SAAmB/c,EAAG6J,GAC7C5B,EAAqC,KAA7BjI,EAAE6I,SAAWgB,EAAEhB,UAAiB,iCACxCZ,EAAOjI,EAAE+I,KAAO/I,EAAE+I,MAAQc,EAAEd,IAC1B,oCAGJiT,EAAIxT,UAAUiW,KAAO,SAAeze,GAClC,OAAI5F,KAAKkkB,MAAclkB,KAAKkkB,MAAMM,QAAQ5e,GAAGoc,UAAUhiB,OAEvD6P,EAAKjK,EAAGA,EAAE8Z,KAAK1f,KAAKsc,GAAG0F,UAAUhiB,OAC1B4F,IAGTgc,EAAIxT,UAAU0F,IAAM,SAAclO,GAChC,OAAIA,EAAEzE,SACGyE,EAAEuL,QAGJnR,KAAKsc,EAAE1Q,IAAIhG,GAAGoc,UAAUhiB,OAGjC4hB,EAAIxT,UAAU8G,IAAM,SAActP,EAAG6J,GACnCzP,KAAK2iB,SAAS/c,EAAG6J,GAEjB,IAAIiD,EAAM9M,EAAEsP,IAAIzF,GAIhB,OAHIiD,EAAItF,IAAIpN,KAAKsc,IAAM,GACrB5J,EAAIuC,KAAKjV,KAAKsc,GAET5J,EAAIsP,UAAUhiB,OAGvB4hB,EAAIxT,UAAU4G,KAAO,SAAepP,EAAG6J,GACrCzP,KAAK2iB,SAAS/c,EAAG6J,GAEjB,IAAIiD,EAAM9M,EAAEoP,KAAKvF,GAIjB,OAHIiD,EAAItF,IAAIpN,KAAKsc,IAAM,GACrB5J,EAAIuC,KAAKjV,KAAKsc,GAET5J,GAGTkP,EAAIxT,UAAUxC,IAAM,SAAchG,EAAG6J,GACnCzP,KAAK2iB,SAAS/c,EAAG6J,GAEjB,IAAIiD,EAAM9M,EAAEgG,IAAI6D,GAIhB,OAHIiD,EAAIyO,KAAK,GAAK,GAChBzO,EAAIsC,KAAKhV,KAAKsc,GAET5J,EAAIsP,UAAUhiB,OAGvB4hB,EAAIxT,UAAU6G,KAAO,SAAerP,EAAG6J,GACrCzP,KAAK2iB,SAAS/c,EAAG6J,GAEjB,IAAIiD,EAAM9M,EAAEqP,KAAKxF,GAIjB,OAHIiD,EAAIyO,KAAK,GAAK,GAChBzO,EAAIsC,KAAKhV,KAAKsc,GAET5J,GAGTkP,EAAIxT,UAAUqU,IAAM,SAAc7c,EAAGS,GAEnC,OADArG,KAAK8iB,SAASld,GACP5F,KAAKqkB,KAAKze,EAAE6Y,MAAMpY,KAG3Bub,EAAIxT,UAAU+K,KAAO,SAAevT,EAAG6J,GAErC,OADAzP,KAAK2iB,SAAS/c,EAAG6J,GACVzP,KAAKqkB,KAAKze,EAAEuT,KAAK1J,KAG1BmS,EAAIxT,UAAUoB,IAAM,SAAc5J,EAAG6J,GAEnC,OADAzP,KAAK2iB,SAAS/c,EAAG6J,GACVzP,KAAKqkB,KAAKze,EAAE4J,IAAIC,KAGzBmS,EAAIxT,UAAUsP,KAAO,SAAe9X,GAClC,OAAO5F,KAAKmZ,KAAKvT,EAAGA,EAAEuL,UAGxByQ,EAAIxT,UAAUqP,IAAM,SAAc7X,GAChC,OAAO5F,KAAKwP,IAAI5J,EAAGA,IAGrBgc,EAAIxT,UAAU6U,KAAO,SAAerd,GAClC,GAAIA,EAAEzE,SAAU,OAAOyE,EAAEuL,QAEzB,IAAI6T,EAAOhlB,KAAKsc,EAAEyD,MAAM,GAIxB,GAHAlS,EAAOmX,EAAO,IAAM,GAGP,IAATA,EAAY,CACd,IAAI/T,EAAMjR,KAAKsc,EAAEpH,IAAI,IAAIlT,EAAG,IAAIic,OAAO,GACvC,OAAOje,KAAKiR,IAAIrL,EAAGqL,GAQrB,IAFA,IAAI2M,EAAI5d,KAAKsc,EAAE5Q,KAAK,GAChBa,EAAI,GACAqR,EAAEzc,UAA2B,IAAfyc,EAAEmC,MAAM,IAC5BxT,IACAqR,EAAEK,OAAO,GAEXpQ,GAAQ+P,EAAEzc,UAEV,IAAI8jB,EAAM,IAAIjjB,EAAG,GAAG6f,MAAM7hB,MACtBklB,EAAOD,EAAI9B,SAIXgC,EAAOnlB,KAAKsc,EAAE5Q,KAAK,GAAGuS,OAAO,GAC7BmH,EAAIplB,KAAKsc,EAAElJ,YAGf,IAFAgS,EAAI,IAAIpjB,EAAG,EAAIojB,EAAIA,GAAGvD,MAAM7hB,MAEW,IAAhCA,KAAKiR,IAAImU,EAAGD,GAAM/X,IAAI8X,IAC3BE,EAAE/C,QAAQ6C,GAOZ,IAJA,IAAIhW,EAAIlP,KAAKiR,IAAImU,EAAGxH,GAChBtR,EAAItM,KAAKiR,IAAIrL,EAAGgY,EAAE9R,KAAK,GAAGmS,OAAO,IACjC/K,EAAIlT,KAAKiR,IAAIrL,EAAGgY,GAChBtB,EAAI/P,EACc,IAAf2G,EAAE9F,IAAI6X,IAAY,CAEvB,IADA,IAAItB,EAAMzQ,EACD9Q,EAAI,EAAoB,IAAjBuhB,EAAIvW,IAAI6X,GAAY7iB,IAClCuhB,EAAMA,EAAId,SAEZhV,EAAOzL,EAAIka,GACX,IAAI7M,EAAIzP,KAAKiR,IAAI/B,EAAG,IAAIlN,EAAG,GAAG6b,OAAOvB,EAAIla,EAAI,IAE7CkK,EAAIA,EAAEoW,OAAOjT,GACbP,EAAIO,EAAEoT,SACN3P,EAAIA,EAAEwP,OAAOxT,GACboN,EAAIla,EAGN,OAAOkK,GAGTsV,EAAIxT,UAAUgT,KAAO,SAAexb,GAClC,IAAIyf,EAAMzf,EAAEmb,OAAO/gB,KAAKsc,GACxB,OAAqB,IAAjB+I,EAAI5W,UACN4W,EAAI5W,SAAW,EACRzO,KAAKqkB,KAAKgB,GAAKlC,UAEfnjB,KAAKqkB,KAAKgB,IAIrBzD,EAAIxT,UAAU6C,IAAM,SAAcrL,EAAGS,GACnC,GAAIA,EAAIlF,SAAU,OAAO,IAAIa,EAAG,GAAG6f,MAAM7hB,MACzC,GAAoB,IAAhBqG,EAAI8a,KAAK,GAAU,OAAOvb,EAAEuL,QAEhC,IACImU,EAAM,IAAI7kB,MAAM,IACpB6kB,EAAI,GAAK,IAAItjB,EAAG,GAAG6f,MAAM7hB,MACzBslB,EAAI,GAAK1f,EACT,IAAK,IAAIxD,EAAI,EAAGA,EAAIkjB,EAAIxkB,OAAQsB,IAC9BkjB,EAAIljB,GAAKpC,KAAKwP,IAAI8V,EAAIljB,EAAI,GAAIwD,GAGhC,IAAI8M,EAAM4S,EAAI,GACVC,EAAU,EACVC,EAAa,EACblW,EAAQjJ,EAAI+M,YAAc,GAK9B,IAJc,IAAV9D,IACFA,EAAQ,IAGLlN,EAAIiE,EAAIvF,OAAS,EAAGsB,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAI0O,EAAOzK,EAAIqI,MAAMtM,GACZkO,EAAIhB,EAAQ,EAAGgB,GAAK,EAAGA,IAAK,CACnC,IAAIwE,EAAOhE,GAAQR,EAAK,EACpBoC,IAAQ4S,EAAI,KACd5S,EAAM1S,KAAKyd,IAAI/K,IAGL,IAARoC,GAAyB,IAAZyQ,GAKjBA,IAAY,EACZA,GAAWzQ,GA9BE,MA+Bb0Q,GACwC,IAANpjB,GAAiB,IAANkO,KAE7CoC,EAAM1S,KAAKwP,IAAIkD,EAAK4S,EAAIC,IACxBC,EAAa,EACbD,EAAU,IAXRC,EAAa,EAajBlW,EAAQ,GAGV,OAAOoD,GAGTkP,EAAIxT,UAAU2T,UAAY,SAAoB1b,GAC5C,IAAIiG,EAAIjG,EAAIqZ,KAAK1f,KAAKsc,GAEtB,OAAOhQ,IAAMjG,EAAMiG,EAAE6E,QAAU7E,GAGjCsV,EAAIxT,UAAU8T,YAAc,SAAsB7b,GAChD,IAAIqM,EAAMrM,EAAI8K,QAEd,OADAuB,EAAI/D,IAAM,KACH+D,GAOT1Q,EAAGyjB,KAAO,SAAepf,GACvB,OAAO,IAAI+d,EAAK/d,IAmBlB0H,EAASqW,EAAMxC,GAEfwC,EAAKhW,UAAU2T,UAAY,SAAoB1b,GAC7C,OAAOrG,KAAKqkB,KAAKhe,EAAIoY,MAAMze,KAAK8S,SAGlCsR,EAAKhW,UAAU8T,YAAc,SAAsB7b,GACjD,IAAIiG,EAAItM,KAAKqkB,KAAKhe,EAAImJ,IAAIxP,KAAKskB,OAE/B,OADAhY,EAAEqC,IAAM,KACDrC,GAGT8X,EAAKhW,UAAU+K,KAAO,SAAevT,EAAG6J,GACtC,GAAI7J,EAAEzE,UAAYsO,EAAEtO,SAGlB,OAFAyE,EAAE8I,MAAM,GAAK,EACb9I,EAAE9E,OAAS,EACJ8E,EAGT,IAAIsN,EAAItN,EAAEuT,KAAK1J,GACXP,EAAIgE,EAAE2L,MAAM7e,KAAK8S,OAAOtD,IAAIxP,KAAKukB,MAAM3F,OAAO5e,KAAK8S,OAAOtD,IAAIxP,KAAKsc,GACnEoJ,EAAIxS,EAAE+B,KAAK/F,GAAG+O,OAAOje,KAAK8S,OAC1BJ,EAAMgT,EAQV,OANIA,EAAEtY,IAAIpN,KAAKsc,IAAM,EACnB5J,EAAMgT,EAAEzQ,KAAKjV,KAAKsc,GACToJ,EAAEvE,KAAK,GAAK,IACrBzO,EAAMgT,EAAE1Q,KAAKhV,KAAKsc,IAGb5J,EAAIsP,UAAUhiB,OAGvBokB,EAAKhW,UAAUoB,IAAM,SAAc5J,EAAG6J,GACpC,GAAI7J,EAAEzE,UAAYsO,EAAEtO,SAAU,OAAO,IAAIa,EAAG,GAAGggB,UAAUhiB,MAEzD,IAAIkT,EAAItN,EAAE4J,IAAIC,GACVP,EAAIgE,EAAE2L,MAAM7e,KAAK8S,OAAOtD,IAAIxP,KAAKukB,MAAM3F,OAAO5e,KAAK8S,OAAOtD,IAAIxP,KAAKsc,GACnEoJ,EAAIxS,EAAE+B,KAAK/F,GAAG+O,OAAOje,KAAK8S,OAC1BJ,EAAMgT,EAOV,OANIA,EAAEtY,IAAIpN,KAAKsc,IAAM,EACnB5J,EAAMgT,EAAEzQ,KAAKjV,KAAKsc,GACToJ,EAAEvE,KAAK,GAAK,IACrBzO,EAAMgT,EAAE1Q,KAAKhV,KAAKsc,IAGb5J,EAAIsP,UAAUhiB,OAGvBokB,EAAKhW,UAAUgT,KAAO,SAAexb,GAGnC,OADU5F,KAAKqkB,KAAKze,EAAEmb,OAAO/gB,KAAKsc,GAAG9M,IAAIxP,KAAK8f,KACnCkC,UAAUhiB,OAx9GzB,C,WA09G4CA","sources":["../node_modules/ethereum-cryptography/src/hash-utils.ts","../node_modules/ethereum-cryptography/src/keccak.ts","../node_modules/ethereum-cryptography/src/random.ts","../node_modules/ethereum-cryptography/src/secp256k1.ts","../node_modules/ethereumjs-util/src/account.ts","../node_modules/ethereumjs-util/src/address.ts","../node_modules/ethereumjs-util/src/bytes.ts","../node_modules/ethereumjs-util/src/constants.ts","../node_modules/ethereumjs-util/src/externals.ts","../node_modules/ethereumjs-util/src/hash.ts","../node_modules/ethereumjs-util/src/helpers.ts","../node_modules/ethereumjs-util/src/index.ts","../node_modules/ethereumjs-util/src/internal.ts","../node_modules/ethereumjs-util/src/object.ts","../node_modules/ethereumjs-util/src/signature.ts","../node_modules/ethereumjs-util/src/types.ts","../node_modules/ethereumjs-util/node_modules/bn.js/lib/bn.js","../node_modules/keccak/js.js","../node_modules/keccak/lib/api/index.js","../node_modules/keccak/lib/api/keccak.js","../node_modules/keccak/lib/api/shake.js","../node_modules/keccak/lib/keccak-state-unroll.js","../node_modules/keccak/lib/keccak.js","../node_modules/rlp/src/index.ts","../node_modules/rlp/node_modules/bn.js/lib/bn.js"],"sourcesContent":["import { Hash } from \"crypto\";\n\nexport function createHashFunction(\n  hashConstructor: () => Hash\n): (msg: Buffer) => Buffer {\n  return msg => {\n    const hash = hashConstructor();\n    hash.update(msg);\n    return Buffer.from(hash.digest());\n  };\n}\n","import { createHashFunction } from \"./hash-utils\";\n\nconst createKeccakHash = require(\"keccak\");\n\nexport const keccak224 = createHashFunction(() =>\n  createKeccakHash(\"keccak224\")\n);\n\nexport const keccak256 = createHashFunction(() =>\n  createKeccakHash(\"keccak256\")\n);\n\nexport const keccak384 = createHashFunction(() =>\n  createKeccakHash(\"keccak384\")\n);\n\nexport const keccak512 = createHashFunction(() =>\n  createKeccakHash(\"keccak512\")\n);\n","const randombytes = require(\"randombytes\");\n\nexport function getRandomBytes(bytes: number): Promise<Buffer> {\n  return new Promise((resolve, reject) => {\n    randombytes(bytes, function(err: any, resp: Buffer) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(resp);\n    });\n  });\n}\n\nexport function getRandomBytesSync(bytes: number): Buffer {\n  return randombytes(bytes);\n}\n","import { privateKeyVerify } from \"secp256k1\";\nimport { getRandomBytes, getRandomBytesSync } from \"./random\";\n\nconst SECP256K1_PRIVATE_KEY_SIZE = 32;\n\nexport async function createPrivateKey(): Promise<Uint8Array> {\n  while (true) {\n    const pk = await getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE);\n    if (privateKeyVerify(pk)) {\n      return pk;\n    }\n  }\n}\n\nexport function createPrivateKeySync(): Uint8Array {\n  while (true) {\n    const pk = getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);\n    if (privateKeyVerify(pk)) {\n      return pk;\n    }\n  }\n}\n\nexport * from \"secp256k1\";\n","import assert from 'assert'\nimport { BN, rlp } from './externals'\nimport {\n  privateKeyVerify,\n  publicKeyCreate,\n  publicKeyVerify,\n  publicKeyConvert,\n} from 'ethereum-cryptography/secp256k1'\nimport { stripHexPrefix } from './internal'\nimport { KECCAK256_RLP, KECCAK256_NULL } from './constants'\nimport { zeros, bufferToHex, toBuffer } from './bytes'\nimport { keccak, keccak256, keccakFromString, rlphash } from './hash'\nimport { assertIsString, assertIsHexString, assertIsBuffer } from './helpers'\nimport { BNLike, BufferLike, bnToUnpaddedBuffer, toType, TypeOutput } from './types'\n\nexport interface AccountData {\n  nonce?: BNLike\n  balance?: BNLike\n  stateRoot?: BufferLike\n  codeHash?: BufferLike\n}\n\nexport class Account {\n  nonce: BN\n  balance: BN\n  stateRoot: Buffer\n  codeHash: Buffer\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, stateRoot, codeHash } = accountData\n\n    return new Account(\n      nonce ? new BN(toBuffer(nonce)) : undefined,\n      balance ? new BN(toBuffer(balance)) : undefined,\n      stateRoot ? toBuffer(stateRoot) : undefined,\n      codeHash ? toBuffer(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Buffer) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Buffer[]) {\n    const [nonce, balance, stateRoot, codeHash] = values\n\n    return new Account(new BN(nonce), new BN(balance), stateRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(\n    nonce = new BN(0),\n    balance = new BN(0),\n    stateRoot = KECCAK256_RLP,\n    codeHash = KECCAK256_NULL\n  ) {\n    this.nonce = nonce\n    this.balance = balance\n    this.stateRoot = stateRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce.lt(new BN(0))) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance.lt(new BN(0))) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.stateRoot.length !== 32) {\n      throw new Error('stateRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n  raw(): Buffer[] {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.balance),\n      this.stateRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !this.codeHash.equals(KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(KECCAK256_NULL)\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (hexAddress: string, eip1191ChainId?: BNLike): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId) {\n    const chainId = toType(eip1191ChainId, TypeOutput.BN)\n    prefix = chainId.toString() + '0x'\n  }\n\n  const hash = keccakFromString(prefix + address).toString('hex')\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BNLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Buffer, nonce: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(nonce)\n  const nonceBN = new BN(nonce)\n\n  if (nonceBN.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return rlphash([from, null]).slice(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from: Buffer, salt: Buffer, initCode: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(salt)\n  assertIsBuffer(initCode)\n\n  assert(from.length === 20)\n  assert(salt.length === 32)\n\n  const address = keccak256(\n    Buffer.concat([Buffer.from('ff', 'hex'), from, salt, keccak256(initCode)])\n  )\n\n  return address.slice(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Buffer): boolean {\n  return privateKeyVerify(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Buffer, sanitize: boolean = false): boolean {\n  assertIsBuffer(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]))\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  return publicKeyVerify(publicKey)\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Buffer, sanitize: boolean = false): Buffer {\n  assertIsBuffer(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(publicKeyConvert(pubKey, false).slice(1))\n  }\n  assert(pubKey.length === 64)\n  // Only take the lower 160bits of the hash\n  return keccak(pubKey).slice(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Buffer): Buffer {\n  assertIsBuffer(privateKey)\n  // skip the type flag and use the X, Y points\n  return Buffer.from(publicKeyCreate(privateKey, false)).slice(1)\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Buffer): Buffer {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Buffer): Buffer {\n  assertIsBuffer(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(publicKeyConvert(publicKey, false).slice(1))\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bufferToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n","import assert from 'assert'\nimport { BN } from './externals'\nimport { toBuffer, zeros } from './bytes'\nimport {\n  isValidAddress,\n  pubToAddress,\n  privateToAddress,\n  generateAddress,\n  generateAddress2,\n} from './account'\n\nexport class Address {\n  public readonly buf: Buffer\n\n  constructor(buf: Buffer) {\n    assert(buf.length === 20, 'Invalid address length')\n    this.buf = buf\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    assert(isValidAddress(str), 'Invalid address')\n    return new Address(toBuffer(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Buffer): Address {\n    assert(Buffer.isBuffer(pubKey), 'Public key should be Buffer')\n    const buf = pubToAddress(pubKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Buffer): Address {\n    assert(Buffer.isBuffer(privateKey), 'Private key should be Buffer')\n    const buf = privateToAddress(privateKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: BN): Address {\n    assert(BN.isBN(nonce))\n    return new Address(generateAddress(from.buf, nonce.toArrayLike(Buffer)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Buffer, initCode: Buffer): Address {\n    assert(Buffer.isBuffer(salt))\n    assert(Buffer.isBuffer(initCode))\n    return new Address(generateAddress2(from.buf, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return this.buf.equals(address.buf)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const addressBN = new BN(this.buf)\n    const rangeMin = new BN(0)\n    const rangeMax = new BN('ffff', 'hex')\n\n    return addressBN.gte(rangeMin) && addressBN.lte(rangeMax)\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return '0x' + this.buf.toString('hex')\n  }\n\n  /**\n   * Returns Buffer representation of address.\n   */\n  toBuffer(): Buffer {\n    return Buffer.from(this.buf)\n  }\n}\n","import { BN } from './externals'\nimport { stripHexPrefix, padToEven, isHexString, isHexPrefixed } from './internal'\nimport {\n  PrefixedHexString,\n  TransformableToArray,\n  TransformableToBuffer,\n  NestedBufferArray,\n  NestedUint8Array,\n} from './types'\nimport { assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = function (i: number) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = function (i: number) {\n  const hex = intToHex(i)\n  return Buffer.from(padToEven(hex.slice(2)), 'hex')\n}\n\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexport const zeros = function (bytes: number): Buffer {\n  return Buffer.allocUnsafe(bytes).fill(0)\n}\n\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg: Buffer, length: number, right: boolean) {\n  const buf = zeros(length)\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf)\n      return buf\n    }\n    return msg.slice(0, length)\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length)\n      return buf\n    }\n    return msg.slice(-length)\n  }\n}\n\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthLeft = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthRight = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a: any): Buffer | number[] | string {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1)\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexport const unpadBuffer = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return stripZeros(a) as Buffer\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexport const unpadArray = function (a: number[]): number[] {\n  assertIsArray(a)\n  return stripZeros(a) as number[]\n}\n\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexport const unpadHexString = function (a: string): string {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return stripZeros(a) as string\n}\n\nexport type ToBufferInputTypes =\n  | PrefixedHexString\n  | number\n  | BN\n  | Buffer\n  | Uint8Array\n  | number[]\n  | TransformableToArray\n  | TransformableToBuffer\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BN` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nexport const toBuffer = function (v: ToBufferInputTypes): Buffer {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v as Uint8Array)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n\n  if (typeof v === 'number') {\n    return intToBuffer(v)\n  }\n\n  if (BN.isBN(v)) {\n    if (v.isNeg()) {\n      throw new Error(`Cannot convert negative BN to buffer. Given: ${v}`)\n    }\n    return v.toArrayLike(Buffer)\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray())\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer())\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexport const bufferToInt = function (buf: Buffer): number {\n  return new BN(toBuffer(buf)).toNumber()\n}\n\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexport const bufferToHex = function (buf: Buffer): string {\n  buf = toBuffer(buf)\n  return '0x' + buf.toString('hex')\n}\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexport const fromSigned = function (num: Buffer): BN {\n  return new BN(num).fromTwos(256)\n}\n\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexport const toUnsigned = function (num: BN): Buffer {\n  return Buffer.from(num.toTwos(256).toArray())\n}\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexport const addHexPrefix = function (str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nexport const toUtf8 = function (hex: string): string {\n  const zerosRegexp = /^(00)+|(00)+$/g\n  hex = stripHexPrefix(hex)\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided')\n  }\n  const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex')\n\n  return bufferVal.toString('utf8')\n}\n\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexport const baToJSON = function (ba: any): any {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`\n  } else if (ba instanceof Array) {\n    const array = []\n    for (let i = 0; i < ba.length; i++) {\n      array.push(baToJSON(ba[i]))\n    }\n    return array\n  }\n}\n\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: { [key: string]: Buffer | undefined }) {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link Uint8Array} or {@link NestedUint8Array} to {@link Buffer} or {@link NestedBufferArray}\n */\nexport function arrToBufArr(arr: Uint8Array): Buffer\nexport function arrToBufArr(arr: NestedUint8Array): NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr)\n  }\n  return arr.map((a) => arrToBufArr(a))\n}\n\n/**\n * Converts a {@link Buffer} or {@link NestedBufferArray} to {@link Uint8Array} or {@link NestedUint8Array}\n */\nexport function bufArrToArr(arr: Buffer): Uint8Array\nexport function bufArrToArr(arr: NestedBufferArray): NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr ?? [])\n  }\n  return arr.map((a) => bufArrToArr(a))\n}\n","import { Buffer } from 'buffer'\nimport { BN } from './externals'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = new BN('ffffffffffffffff', 16)\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = new BN(\n  'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n  16\n)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = new BN(\n  '10000000000000000000000000000000000000000000000000000000000000000',\n  16\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n","/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\n\nimport BN from 'bn.js'\nimport * as rlp from 'rlp'\n\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n */\nexport { BN }\n\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n */\nexport { rlp }\n","import { keccak224, keccak384, keccak256 as k256, keccak512 } from 'ethereum-cryptography/keccak'\nconst createHash = require('create-hash')\nimport { rlp } from './externals'\nimport { toBuffer, setLengthLeft } from './bytes'\nimport { assertIsString, assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccak = function (a: Buffer, bits: number = 256): Buffer {\n  assertIsBuffer(a)\n  switch (bits) {\n    case 224: {\n      return keccak224(a)\n    }\n    case 256: {\n      return k256(a)\n    }\n    case 384: {\n      return keccak384(a)\n    }\n    case 512: {\n      return keccak512(a)\n    }\n    default: {\n      throw new Error(`Invald algorithm: keccak${bits}`)\n    }\n  }\n}\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nexport const keccak256 = function (a: Buffer): Buffer {\n  return keccak(a)\n}\n\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromString = function (a: string, bits: number = 256) {\n  assertIsString(a)\n  const buf = Buffer.from(a, 'utf8')\n  return keccak(buf, bits)\n}\n\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromHexString = function (a: string, bits: number = 256) {\n  assertIsHexString(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromArray = function (a: number[], bits: number = 256) {\n  assertIsArray(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nconst _sha256 = function (a: any): Buffer {\n  a = toBuffer(a)\n  return createHash('sha256').update(a).digest()\n}\n\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nexport const sha256 = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nexport const sha256FromString = function (a: string): Buffer {\n  assertIsString(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nexport const sha256FromArray = function (a: number[]): Buffer {\n  assertIsArray(a)\n  return _sha256(a)\n}\n\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nconst _ripemd160 = function (a: any, padded: boolean): Buffer {\n  a = toBuffer(a)\n  const hash = createHash('rmd160').update(a).digest()\n  if (padded === true) {\n    return setLengthLeft(hash, 32)\n  } else {\n    return hash\n  }\n}\n\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160 = function (a: Buffer, padded: boolean): Buffer {\n  assertIsBuffer(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromString = function (a: string, padded: boolean): Buffer {\n  assertIsString(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromArray = function (a: number[], padded: boolean): Buffer {\n  assertIsArray(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexport const rlphash = function (a: rlp.Input): Buffer {\n  return keccak(rlp.encode(a))\n}\n","import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n","/**\n * Constants\n */\nexport * from './constants'\n\n/**\n * Account class and helper functions\n */\nexport * from './account'\n\n/**\n * Address type\n */\nexport * from './address'\n\n/**\n * Hash functions\n */\nexport * from './hash'\n\n/**\n * ECDSA signature\n */\nexport * from './signature'\n\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\nexport * from './bytes'\n\n/**\n * Function for definining properties on an object\n */\nexport * from './object'\n\n/**\n * External exports (BN, rlp)\n */\nexport * from './externals'\n\n/**\n * Helpful TypeScript types\n */\nexport * from './types'\n\n/**\n * Export ethjs-util methods\n */\nexport {\n  isHexPrefixed,\n  stripHexPrefix,\n  padToEven,\n  getBinarySize,\n  arrayContainsArray,\n  toAscii,\n  fromUtf8,\n  fromAscii,\n  getKeys,\n  isHexString,\n} from './internal'\n","/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', recieved ${typeof str}`)\n  }\n\n  return Buffer.byteLength(str, 'utf8')\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = Buffer.from(stringValue, 'utf8')\n\n  return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (length && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n","import assert from 'assert'\nimport { stripHexPrefix } from './internal'\nimport { rlp } from './externals'\nimport { toBuffer, baToJSON, unpadBuffer } from './bytes'\n\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexport const defineProperties = function (self: any, fields: any, data?: any) {\n  self.raw = []\n  self._fields = []\n\n  // attach the `toJSON`\n  self.toJSON = function (label: boolean = false) {\n    if (label) {\n      type Dict = { [key: string]: string }\n      const obj: Dict = {}\n      self._fields.forEach((field: string) => {\n        obj[field] = `0x${self[field].toString('hex')}`\n      })\n      return obj\n    }\n    return baToJSON(self.raw)\n  }\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw)\n  }\n\n  fields.forEach((field: any, i: number) => {\n    self._fields.push(field.name)\n    function getter() {\n      return self.raw[i]\n    }\n    function setter(v: any) {\n      v = toBuffer(v)\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0)\n      }\n\n      if (field.allowLess && field.length) {\n        v = unpadBuffer(v)\n        assert(\n          field.length >= v.length,\n          `The field ${field.name} must not have more ${field.length} bytes`\n        )\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(\n          field.length === v.length,\n          `The field ${field.name} must have byte length of ${field.length}`\n        )\n      }\n\n      self.raw[i] = v\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter,\n    })\n\n    if (field.default) {\n      self[field.name] = field.default\n    }\n\n    // attach alias\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter,\n      })\n    }\n  })\n\n  // if the constuctor is passed data\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(stripHexPrefix(data), 'hex')\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data)\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data')\n      }\n\n      // make sure all the items are buffers\n      data.forEach((d, i) => {\n        self[self._fields[i]] = toBuffer(d)\n      })\n    } else if (typeof data === 'object') {\n      const keys = Object.keys(data)\n      fields.forEach((field: any) => {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name]\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias]\n      })\n    } else {\n      throw new Error('invalid data')\n    }\n  }\n}\n","import { ecdsaSign, ecdsaRecover, publicKeyConvert } from 'ethereum-cryptography/secp256k1'\nimport { BN } from './externals'\nimport { toBuffer, setLengthLeft, bufferToHex, bufferToInt } from './bytes'\nimport { keccak } from './hash'\nimport { assertIsBuffer } from './helpers'\nimport { BNLike, toType, TypeOutput } from './types'\n\nexport interface ECDSASignature {\n  v: number\n  r: Buffer\n  s: Buffer\n}\n\nexport interface ECDSASignatureBuffer {\n  v: Buffer\n  r: Buffer\n  s: Buffer\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId?: number): ECDSASignature\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: BNLike): ECDSASignatureBuffer\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: any): any {\n  const { signature, recid: recovery } = ecdsaSign(msgHash, privateKey)\n\n  const r = Buffer.from(signature.slice(0, 32))\n  const s = Buffer.from(signature.slice(32, 64))\n\n  if (!chainId || typeof chainId === 'number') {\n    // return legacy type ECDSASignature (deprecated in favor of ECDSASignatureBuffer to handle large chainIds)\n    if (chainId && !Number.isSafeInteger(chainId)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n      )\n    }\n    const v = chainId ? recovery + (chainId * 2 + 35) : recovery + 27\n    return { r, s, v }\n  }\n\n  const chainIdBN = toType(chainId as BNLike, TypeOutput.BN)\n  const v = chainIdBN.muln(2).addn(35).addn(recovery).toArrayLike(Buffer)\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: BNLike, chainId?: BNLike): BN {\n  const vBN = toType(v, TypeOutput.BN)\n  if (!chainId) {\n    return vBN.subn(27)\n  }\n  const chainIdBN = toType(chainId, TypeOutput.BN)\n  return vBN.sub(chainIdBN.muln(2).addn(35))\n}\n\nfunction isValidSigRecovery(recovery: number | BN): boolean {\n  const rec = new BN(recovery)\n  return rec.eqn(0) || rec.eqn(1)\n}\n\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Buffer,\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  chainId?: BNLike\n): Buffer {\n  const signature = Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32)], 64)\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n  const senderPubKey = ecdsaRecover(signature, recovery.toNumber(), msgHash)\n  return Buffer.from(publicKeyConvert(senderPubKey, false).slice(1))\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\nexport const toRpcSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32), toBuffer(v)]))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * @returns Signature\n */\nexport const toCompactSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const vn = toType(v, TypeOutput.Number)\n  let ss = s\n  if ((vn > 28 && vn % 2 === 1) || vn === 1 || vn === 28) {\n    ss = Buffer.from(s)\n    ss[0] |= 0x80\n  }\n\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(ss, 32)]))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const buf: Buffer = toBuffer(sig)\n\n  let r: Buffer\n  let s: Buffer\n  let v: number\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(32, 33)) >> 7\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v += 27\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  homesteadOrLater: boolean = true,\n  chainId?: BNLike\n): boolean {\n  const SECP256K1_N_DIV_2 = new BN(\n    '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n    16\n  )\n  const SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16)\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBN = new BN(r)\n  const sBN = new BN(s)\n\n  if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n    return false\n  }\n\n  if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Buffer): Buffer {\n  assertIsBuffer(message)\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return keccak(Buffer.concat([prefix, message]))\n}\n","import { BN } from './externals'\nimport { isHexString } from './internal'\nimport { Address } from './address'\nimport { unpadBuffer, toBuffer, ToBufferInputTypes } from './bytes'\n\n/*\n * A type that represents a BNLike input that can be converted to a BN.\n */\nexport type BNLike = BN | PrefixedHexString | number | Buffer\n\n/*\n * A type that represents a BufferLike input that can be converted to a Buffer.\n */\nexport type BufferLike =\n  | Buffer\n  | Uint8Array\n  | number[]\n  | number\n  | BN\n  | TransformableToBuffer\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an Address-like value.\n * To convert to address, use `new Address(toBuffer(value))`\n */\nexport type AddressLike = Address | Buffer | PrefixedHexString\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n  toArray(): Uint8Array\n  toBuffer?(): Buffer\n}\n\n/*\n * A type that represents an object that has a `toBuffer()` method.\n */\nexport interface TransformableToBuffer {\n  toBuffer(): Buffer\n  toArray?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\nexport type NestedBufferArray = Array<Buffer | NestedBufferArray>\n\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nexport function bnToHex(value: BN): PrefixedHexString {\n  return `0x${value.toString(16)}`\n}\n\n/**\n * Convert value from BN to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bnToUnpaddedBuffer(value: BN): Buffer {\n  // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n  // for compatibility with browserify and similar tools\n  return unpadBuffer(value.toArrayLike(Buffer))\n}\n\n/**\n * Deprecated alias for {@link bnToUnpaddedBuffer}\n * @deprecated\n */\nexport function bnToRlp(value: BN): Buffer {\n  return bnToUnpaddedBuffer(value)\n}\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BN,\n  Buffer,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BN]: BN\n  [TypeOutput.Buffer]: Buffer\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBuffer(input)\n\n  if (outputType === TypeOutput.Buffer) {\n    return output as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.BN) {\n    return new BN(output) as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.Number) {\n    const bn = new BN(output)\n    const max = new BN(Number.MAX_SAFE_INTEGER.toString())\n    if (bn.gt(max)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n      )\n    }\n    return bn.toNumber() as TypeOutputReturnType[T]\n  } else {\n    // outputType === TypeOutput.PrefixedHexString\n    return `0x${output.toString('hex')}` as TypeOutputReturnType[T]\n  }\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","module.exports = require('./lib/api')(require('./lib/keccak'))\n","const createKeccak = require('./keccak')\nconst createShake = require('./shake')\n\nmodule.exports = function (KeccakState) {\n  const Keccak = createKeccak(KeccakState)\n  const Shake = createShake(KeccakState)\n\n  return function (algorithm, options) {\n    const hash = typeof algorithm === 'string' ? algorithm.toLowerCase() : algorithm\n    switch (hash) {\n      case 'keccak224': return new Keccak(1152, 448, null, 224, options)\n      case 'keccak256': return new Keccak(1088, 512, null, 256, options)\n      case 'keccak384': return new Keccak(832, 768, null, 384, options)\n      case 'keccak512': return new Keccak(576, 1024, null, 512, options)\n\n      case 'sha3-224': return new Keccak(1152, 448, 0x06, 224, options)\n      case 'sha3-256': return new Keccak(1088, 512, 0x06, 256, options)\n      case 'sha3-384': return new Keccak(832, 768, 0x06, 384, options)\n      case 'sha3-512': return new Keccak(576, 1024, 0x06, 512, options)\n\n      case 'shake128': return new Shake(1344, 256, 0x1f, options)\n      case 'shake256': return new Shake(1088, 512, 0x1f, options)\n\n      default: throw new Error('Invald algorithm: ' + algorithm)\n    }\n  }\n}\n","const { Transform } = require('readable-stream')\n\nmodule.exports = (KeccakState) => class Keccak extends Transform {\n  constructor (rate, capacity, delimitedSuffix, hashBitLength, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._hashBitLength = hashBitLength\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush (callback) {\n    let error = null\n    try {\n      this.push(this.digest())\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Digest already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  digest (encoding) {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix)\n    let digest = this._state.squeeze(this._hashBitLength / 8)\n    if (encoding !== undefined) digest = digest.toString(encoding)\n\n    this._resetState()\n\n    return digest\n  }\n\n  // remove result from memory\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  // because sometimes we need hash right now and little later\n  _clone () {\n    const clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n","const { Transform } = require('readable-stream')\n\nmodule.exports = (KeccakState) => class Shake extends Transform {\n  constructor (rate, capacity, delimitedSuffix, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush () {}\n\n  _read (size) {\n    this.push(this.squeeze(size))\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  squeeze (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    let data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  _clone () {\n    const clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n","const P1600_ROUND_CONSTANTS = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648]\n\nexports.p1600 = function (s) {\n  for (let round = 0; round < 24; ++round) {\n    // theta\n    const lo0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40]\n    const hi0 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41]\n    const lo1 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42]\n    const hi1 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43]\n    const lo2 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44]\n    const hi2 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45]\n    const lo3 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46]\n    const hi3 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47]\n    const lo4 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48]\n    const hi4 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49]\n\n    let lo = lo4 ^ (lo1 << 1 | hi1 >>> 31)\n    let hi = hi4 ^ (hi1 << 1 | lo1 >>> 31)\n    const t1slo0 = s[0] ^ lo\n    const t1shi0 = s[1] ^ hi\n    const t1slo5 = s[10] ^ lo\n    const t1shi5 = s[11] ^ hi\n    const t1slo10 = s[20] ^ lo\n    const t1shi10 = s[21] ^ hi\n    const t1slo15 = s[30] ^ lo\n    const t1shi15 = s[31] ^ hi\n    const t1slo20 = s[40] ^ lo\n    const t1shi20 = s[41] ^ hi\n    lo = lo0 ^ (lo2 << 1 | hi2 >>> 31)\n    hi = hi0 ^ (hi2 << 1 | lo2 >>> 31)\n    const t1slo1 = s[2] ^ lo\n    const t1shi1 = s[3] ^ hi\n    const t1slo6 = s[12] ^ lo\n    const t1shi6 = s[13] ^ hi\n    const t1slo11 = s[22] ^ lo\n    const t1shi11 = s[23] ^ hi\n    const t1slo16 = s[32] ^ lo\n    const t1shi16 = s[33] ^ hi\n    const t1slo21 = s[42] ^ lo\n    const t1shi21 = s[43] ^ hi\n    lo = lo1 ^ (lo3 << 1 | hi3 >>> 31)\n    hi = hi1 ^ (hi3 << 1 | lo3 >>> 31)\n    const t1slo2 = s[4] ^ lo\n    const t1shi2 = s[5] ^ hi\n    const t1slo7 = s[14] ^ lo\n    const t1shi7 = s[15] ^ hi\n    const t1slo12 = s[24] ^ lo\n    const t1shi12 = s[25] ^ hi\n    const t1slo17 = s[34] ^ lo\n    const t1shi17 = s[35] ^ hi\n    const t1slo22 = s[44] ^ lo\n    const t1shi22 = s[45] ^ hi\n    lo = lo2 ^ (lo4 << 1 | hi4 >>> 31)\n    hi = hi2 ^ (hi4 << 1 | lo4 >>> 31)\n    const t1slo3 = s[6] ^ lo\n    const t1shi3 = s[7] ^ hi\n    const t1slo8 = s[16] ^ lo\n    const t1shi8 = s[17] ^ hi\n    const t1slo13 = s[26] ^ lo\n    const t1shi13 = s[27] ^ hi\n    const t1slo18 = s[36] ^ lo\n    const t1shi18 = s[37] ^ hi\n    const t1slo23 = s[46] ^ lo\n    const t1shi23 = s[47] ^ hi\n    lo = lo3 ^ (lo0 << 1 | hi0 >>> 31)\n    hi = hi3 ^ (hi0 << 1 | lo0 >>> 31)\n    const t1slo4 = s[8] ^ lo\n    const t1shi4 = s[9] ^ hi\n    const t1slo9 = s[18] ^ lo\n    const t1shi9 = s[19] ^ hi\n    const t1slo14 = s[28] ^ lo\n    const t1shi14 = s[29] ^ hi\n    const t1slo19 = s[38] ^ lo\n    const t1shi19 = s[39] ^ hi\n    const t1slo24 = s[48] ^ lo\n    const t1shi24 = s[49] ^ hi\n\n    // rho & pi\n    const t2slo0 = t1slo0\n    const t2shi0 = t1shi0\n    const t2slo16 = (t1shi5 << 4 | t1slo5 >>> 28)\n    const t2shi16 = (t1slo5 << 4 | t1shi5 >>> 28)\n    const t2slo7 = (t1slo10 << 3 | t1shi10 >>> 29)\n    const t2shi7 = (t1shi10 << 3 | t1slo10 >>> 29)\n    const t2slo23 = (t1shi15 << 9 | t1slo15 >>> 23)\n    const t2shi23 = (t1slo15 << 9 | t1shi15 >>> 23)\n    const t2slo14 = (t1slo20 << 18 | t1shi20 >>> 14)\n    const t2shi14 = (t1shi20 << 18 | t1slo20 >>> 14)\n    const t2slo10 = (t1slo1 << 1 | t1shi1 >>> 31)\n    const t2shi10 = (t1shi1 << 1 | t1slo1 >>> 31)\n    const t2slo1 = (t1shi6 << 12 | t1slo6 >>> 20)\n    const t2shi1 = (t1slo6 << 12 | t1shi6 >>> 20)\n    const t2slo17 = (t1slo11 << 10 | t1shi11 >>> 22)\n    const t2shi17 = (t1shi11 << 10 | t1slo11 >>> 22)\n    const t2slo8 = (t1shi16 << 13 | t1slo16 >>> 19)\n    const t2shi8 = (t1slo16 << 13 | t1shi16 >>> 19)\n    const t2slo24 = (t1slo21 << 2 | t1shi21 >>> 30)\n    const t2shi24 = (t1shi21 << 2 | t1slo21 >>> 30)\n    const t2slo20 = (t1shi2 << 30 | t1slo2 >>> 2)\n    const t2shi20 = (t1slo2 << 30 | t1shi2 >>> 2)\n    const t2slo11 = (t1slo7 << 6 | t1shi7 >>> 26)\n    const t2shi11 = (t1shi7 << 6 | t1slo7 >>> 26)\n    const t2slo2 = (t1shi12 << 11 | t1slo12 >>> 21)\n    const t2shi2 = (t1slo12 << 11 | t1shi12 >>> 21)\n    const t2slo18 = (t1slo17 << 15 | t1shi17 >>> 17)\n    const t2shi18 = (t1shi17 << 15 | t1slo17 >>> 17)\n    const t2slo9 = (t1shi22 << 29 | t1slo22 >>> 3)\n    const t2shi9 = (t1slo22 << 29 | t1shi22 >>> 3)\n    const t2slo5 = (t1slo3 << 28 | t1shi3 >>> 4)\n    const t2shi5 = (t1shi3 << 28 | t1slo3 >>> 4)\n    const t2slo21 = (t1shi8 << 23 | t1slo8 >>> 9)\n    const t2shi21 = (t1slo8 << 23 | t1shi8 >>> 9)\n    const t2slo12 = (t1slo13 << 25 | t1shi13 >>> 7)\n    const t2shi12 = (t1shi13 << 25 | t1slo13 >>> 7)\n    const t2slo3 = (t1slo18 << 21 | t1shi18 >>> 11)\n    const t2shi3 = (t1shi18 << 21 | t1slo18 >>> 11)\n    const t2slo19 = (t1shi23 << 24 | t1slo23 >>> 8)\n    const t2shi19 = (t1slo23 << 24 | t1shi23 >>> 8)\n    const t2slo15 = (t1slo4 << 27 | t1shi4 >>> 5)\n    const t2shi15 = (t1shi4 << 27 | t1slo4 >>> 5)\n    const t2slo6 = (t1slo9 << 20 | t1shi9 >>> 12)\n    const t2shi6 = (t1shi9 << 20 | t1slo9 >>> 12)\n    const t2slo22 = (t1shi14 << 7 | t1slo14 >>> 25)\n    const t2shi22 = (t1slo14 << 7 | t1shi14 >>> 25)\n    const t2slo13 = (t1slo19 << 8 | t1shi19 >>> 24)\n    const t2shi13 = (t1shi19 << 8 | t1slo19 >>> 24)\n    const t2slo4 = (t1slo24 << 14 | t1shi24 >>> 18)\n    const t2shi4 = (t1shi24 << 14 | t1slo24 >>> 18)\n\n    // chi\n    s[0] = t2slo0 ^ (~t2slo1 & t2slo2)\n    s[1] = t2shi0 ^ (~t2shi1 & t2shi2)\n    s[10] = t2slo5 ^ (~t2slo6 & t2slo7)\n    s[11] = t2shi5 ^ (~t2shi6 & t2shi7)\n    s[20] = t2slo10 ^ (~t2slo11 & t2slo12)\n    s[21] = t2shi10 ^ (~t2shi11 & t2shi12)\n    s[30] = t2slo15 ^ (~t2slo16 & t2slo17)\n    s[31] = t2shi15 ^ (~t2shi16 & t2shi17)\n    s[40] = t2slo20 ^ (~t2slo21 & t2slo22)\n    s[41] = t2shi20 ^ (~t2shi21 & t2shi22)\n    s[2] = t2slo1 ^ (~t2slo2 & t2slo3)\n    s[3] = t2shi1 ^ (~t2shi2 & t2shi3)\n    s[12] = t2slo6 ^ (~t2slo7 & t2slo8)\n    s[13] = t2shi6 ^ (~t2shi7 & t2shi8)\n    s[22] = t2slo11 ^ (~t2slo12 & t2slo13)\n    s[23] = t2shi11 ^ (~t2shi12 & t2shi13)\n    s[32] = t2slo16 ^ (~t2slo17 & t2slo18)\n    s[33] = t2shi16 ^ (~t2shi17 & t2shi18)\n    s[42] = t2slo21 ^ (~t2slo22 & t2slo23)\n    s[43] = t2shi21 ^ (~t2shi22 & t2shi23)\n    s[4] = t2slo2 ^ (~t2slo3 & t2slo4)\n    s[5] = t2shi2 ^ (~t2shi3 & t2shi4)\n    s[14] = t2slo7 ^ (~t2slo8 & t2slo9)\n    s[15] = t2shi7 ^ (~t2shi8 & t2shi9)\n    s[24] = t2slo12 ^ (~t2slo13 & t2slo14)\n    s[25] = t2shi12 ^ (~t2shi13 & t2shi14)\n    s[34] = t2slo17 ^ (~t2slo18 & t2slo19)\n    s[35] = t2shi17 ^ (~t2shi18 & t2shi19)\n    s[44] = t2slo22 ^ (~t2slo23 & t2slo24)\n    s[45] = t2shi22 ^ (~t2shi23 & t2shi24)\n    s[6] = t2slo3 ^ (~t2slo4 & t2slo0)\n    s[7] = t2shi3 ^ (~t2shi4 & t2shi0)\n    s[16] = t2slo8 ^ (~t2slo9 & t2slo5)\n    s[17] = t2shi8 ^ (~t2shi9 & t2shi5)\n    s[26] = t2slo13 ^ (~t2slo14 & t2slo10)\n    s[27] = t2shi13 ^ (~t2shi14 & t2shi10)\n    s[36] = t2slo18 ^ (~t2slo19 & t2slo15)\n    s[37] = t2shi18 ^ (~t2shi19 & t2shi15)\n    s[46] = t2slo23 ^ (~t2slo24 & t2slo20)\n    s[47] = t2shi23 ^ (~t2shi24 & t2shi20)\n    s[8] = t2slo4 ^ (~t2slo0 & t2slo1)\n    s[9] = t2shi4 ^ (~t2shi0 & t2shi1)\n    s[18] = t2slo9 ^ (~t2slo5 & t2slo6)\n    s[19] = t2shi9 ^ (~t2shi5 & t2shi6)\n    s[28] = t2slo14 ^ (~t2slo10 & t2slo11)\n    s[29] = t2shi14 ^ (~t2shi10 & t2shi11)\n    s[38] = t2slo19 ^ (~t2slo15 & t2slo16)\n    s[39] = t2shi19 ^ (~t2shi15 & t2shi16)\n    s[48] = t2slo24 ^ (~t2slo20 & t2slo21)\n    s[49] = t2shi24 ^ (~t2shi20 & t2shi21)\n\n    // iota\n    s[0] ^= P1600_ROUND_CONSTANTS[round * 2]\n    s[1] ^= P1600_ROUND_CONSTANTS[round * 2 + 1]\n  }\n}\n","const keccakState = require('./keccak-state-unroll')\n\nfunction Keccak () {\n  // much faster than `new Array(50)`\n  this.state = [\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0\n  ]\n\n  this.blockSize = null\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (let i = 0; i < 50; ++i) this.state[i] = 0\n  this.blockSize = rate / 8\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.absorb = function (data) {\n  for (let i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << (8 * (this.count % 4))\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n}\n\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << (8 * (this.count % 4))\n  if ((bits & 0x80) !== 0 && this.count === (this.blockSize - 1)) keccakState.p1600(this.state)\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << (8 * ((this.blockSize - 1) % 4))\n  keccakState.p1600(this.state)\n  this.count = 0\n  this.squeezing = true\n}\n\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01)\n\n  const output = Buffer.alloc(length)\n  for (let i = 0; i < length; ++i) {\n    output[i] = (this.state[~~(this.count / 4)] >>> (8 * (this.count % 4))) & 0xff\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n\n  return output\n}\n\nKeccak.prototype.copy = function (dest) {\n  for (let i = 0; i < 50; ++i) dest.state[i] = this.state[i]\n  dest.blockSize = this.blockSize\n  dest.count = this.count\n  dest.squeezing = this.squeezing\n}\n\nmodule.exports = Keccak\n","import BN from 'bn.js'\n\nimport { Decoded, Input, List } from './types'\n\n// Types exported outside of this package\nexport { Decoded, Input, List }\n\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * This function takes in a data, convert it to buffer if not, and a length for recursion\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\nexport function encode(input: Input): Buffer {\n  if (Array.isArray(input)) {\n    const output: Buffer[] = []\n    for (let i = 0; i < input.length; i++) {\n      output.push(encode(input[i]))\n    }\n    const buf = Buffer.concat(output)\n    return Buffer.concat([encodeLength(buf.length, 192), buf])\n  } else {\n    const inputBuf = toBuffer(input)\n    return inputBuf.length === 1 && inputBuf[0] < 128\n      ? inputBuf\n      : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf])\n  }\n}\n\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\nfunction safeParseInt(v: string, base: number): number {\n  if (v[0] === '0' && v[1] === '0') {\n    throw new Error('invalid RLP: extra zeros')\n  }\n\n  return parseInt(v, base)\n}\n\nfunction encodeLength(len: number, offset: number): Buffer {\n  if (len < 56) {\n    return Buffer.from([len + offset])\n  } else {\n    const hexLength = intToHex(len)\n    const lLength = hexLength.length / 2\n    const firstByte = intToHex(offset + 55 + lLength)\n    return Buffer.from(firstByte + hexLength, 'hex')\n  }\n}\n\n/**\n * RLP Decoding based on: {@link https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP|RLP}\n * @param input - will be converted to buffer\n * @param stream - Is the input a stream (false by default)\n * @returns - returns decode Array of Buffers containg the original message\n **/\nexport function decode(input: Buffer, stream?: boolean): Buffer\nexport function decode(input: Buffer[], stream?: boolean): Buffer[]\nexport function decode(input: Input, stream?: boolean): Buffer[] | Buffer | Decoded\nexport function decode(input: Input, stream: boolean = false): Buffer[] | Buffer | Decoded {\n  if (!input || (input as any).length === 0) {\n    return Buffer.from([])\n  }\n\n  const inputBuffer = toBuffer(input)\n  const decoded = _decode(inputBuffer)\n\n  if (stream) {\n    return decoded\n  }\n  if (decoded.remainder.length !== 0) {\n    throw new Error('invalid remainder')\n  }\n\n  return decoded.data\n}\n\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\nexport function getLength(input: Input): Buffer | number {\n  if (!input || (input as any).length === 0) {\n    return Buffer.from([])\n  }\n\n  const inputBuffer = toBuffer(input)\n  const firstByte = inputBuffer[0]\n\n  if (firstByte <= 0x7f) {\n    return inputBuffer.length\n  } else if (firstByte <= 0xb7) {\n    return firstByte - 0x7f\n  } else if (firstByte <= 0xbf) {\n    return firstByte - 0xb6\n  } else if (firstByte <= 0xf7) {\n    // a list between  0-55 bytes long\n    return firstByte - 0xbf\n  } else {\n    // a list  over 55 bytes long\n    const llength = firstByte - 0xf6\n    const length = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16)\n    return llength + length\n  }\n}\n\n/** Decode an input with RLP */\nfunction _decode(input: Buffer): Decoded {\n  let length, llength, data, innerRemainder, d\n  const decoded = []\n  const firstByte = input[0]\n\n  if (firstByte <= 0x7f) {\n    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n    return {\n      data: input.slice(0, 1),\n      remainder: input.slice(1),\n    }\n  } else if (firstByte <= 0xb7) {\n    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n    // The range of the first byte is [0x80, 0xb7]\n    length = firstByte - 0x7f\n\n    // set 0x80 null to 0\n    if (firstByte === 0x80) {\n      data = Buffer.from([])\n    } else {\n      data = input.slice(1, length)\n    }\n\n    if (length === 2 && data[0] < 0x80) {\n      throw new Error('invalid rlp encoding: byte must be less 0x80')\n    }\n\n    return {\n      data: data,\n      remainder: input.slice(length),\n    }\n  } else if (firstByte <= 0xbf) {\n    // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n    // followed by the length, followed by the string\n    llength = firstByte - 0xb6\n    if (input.length - 1 < llength) {\n      throw new Error('invalid RLP: not enough bytes for string length')\n    }\n    length = safeParseInt(input.slice(1, llength).toString('hex'), 16)\n    if (length <= 55) {\n      throw new Error('invalid RLP: expected string length to be greater than 55')\n    }\n    data = input.slice(llength, length + llength)\n    if (data.length < length) {\n      throw new Error('invalid RLP: not enough bytes for string')\n    }\n\n    return {\n      data: data,\n      remainder: input.slice(length + llength),\n    }\n  } else if (firstByte <= 0xf7) {\n    // a list between  0-55 bytes long\n    length = firstByte - 0xbf\n    innerRemainder = input.slice(1, length)\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data as Buffer)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(length),\n    }\n  } else {\n    // a list  over 55 bytes long\n    llength = firstByte - 0xf6\n    length = safeParseInt(input.slice(1, llength).toString('hex'), 16)\n    const totalLength = llength + length\n    if (totalLength > input.length) {\n      throw new Error('invalid rlp: total length is larger than the data')\n    }\n\n    innerRemainder = input.slice(llength, totalLength)\n    if (innerRemainder.length === 0) {\n      throw new Error('invalid rlp, List has a invalid length')\n    }\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data as Buffer)\n      innerRemainder = d.remainder\n    }\n    return {\n      data: decoded,\n      remainder: input.slice(totalLength),\n    }\n  }\n}\n\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str: string): boolean {\n  return str.slice(0, 2) === '0x'\n}\n\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/** Transform an integer into its hexadecimal value */\nfunction intToHex(integer: number | bigint): string {\n  if (integer < 0) {\n    throw new Error('Invalid integer as argument, must be unsigned!')\n  }\n  const hex = integer.toString(16)\n  return hex.length % 2 ? `0${hex}` : hex\n}\n\n/** Pad a string to be even */\nfunction padToEven(a: string): string {\n  return a.length % 2 ? `0${a}` : a\n}\n\n/** Transform an integer into a Buffer */\nfunction intToBuffer(integer: number | bigint): Buffer {\n  const hex = intToHex(integer)\n  return Buffer.from(hex, 'hex')\n}\n\n/** Transform anything into a Buffer */\nfunction toBuffer(v: Input): Buffer {\n  if (!Buffer.isBuffer(v)) {\n    if (typeof v === 'string') {\n      if (isHexPrefixed(v)) {\n        return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n      } else {\n        return Buffer.from(v)\n      }\n    } else if (typeof v === 'number' || typeof v === 'bigint') {\n      if (!v) {\n        return Buffer.from([])\n      } else {\n        return intToBuffer(v)\n      }\n    } else if (v === null || v === undefined) {\n      return Buffer.from([])\n    } else if (v instanceof Uint8Array) {\n      return Buffer.from(v as any)\n    } else if (BN.isBN(v)) {\n      // converts a BN to a Buffer\n      return Buffer.from(v.toArray())\n    } else {\n      throw new Error('invalid type')\n    }\n  }\n  return v\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"names":["exports","hashConstructor","msg","hash","update","Buffer","from","digest","createKeccakHash","require","hash_utils_1","randombytes","bytes","Promise","resolve","reject","err","resp","random_1","pk","_a","secp256k1_1","__export","nonce","balance","stateRoot","codeHash","externals_1","constants_1","this","_validate","Account","accountData","toBuffer","undefined","serialized","values","decode","Array","isArray","Error","fromValuesArray","lt","length","bnToUnpaddedBuffer","encode","raw","equals","isZero","hexAddress","assertIsString","e","test","eip1191ChainId","assertIsHexString","address","stripHexPrefix","toLowerCase","prefix","toType","types_1","BN","toString","keccakFromString","ret","i","parseInt","toUpperCase","isValidAddress","toChecksumAddress","assertIsBuffer","nonceBN","rlphash","slice","toArray","salt","initCode","keccak256","concat","privateKey","privateKeyVerify","publicKey","sanitize","publicKeyVerify","pubKey","publicKeyConvert","keccak","publicKeyCreate","publicToAddress","privateToPublic","addr","zeros","bufferToHex","zeroAddress","buf","Address","str","isBuffer","pubToAddress","privateToAddress","isBN","generateAddress","toArrayLike","generateAddress2","zero","addressBN","rangeMin","rangeMax","gte","lte","Number","isSafeInteger","hex","intToHex","padToEven","allocUnsafe","fill","setLength","right","copy","stripZeros","a","first","assertIsArray","v","Uint8Array","isHexString","intToBuffer","isNeg","toNumber","num","fromTwos","toTwos","isHexPrefixed","replace","ba","array","push","baToJSON","Object","entries","_c","k","arrToBufArr","arr","map","bufArrToArr","buffer_1","bn_js_1","createHash","bits","keccak224","keccak384","keccak512","_sha256","_ripemd160","padded","setLengthLeft","input","__exportStar","enumerable","get","getBinarySize","arrayContainsArray","toAscii","fromUtf8","fromAscii","getKeys","value","byteLength","superset","subset","some","indexOf","l","substring","code","substr","String","fromCharCode","stringValue","n","charCodeAt","params","key","allowEmpty","result","match","self","fields","data","_fields","toJSON","label","obj_1","forEach","field","serialize","getter","setter","allowZero","allowLess","unpadBuffer","name","defineProperty","configurable","set","default","alias","d","keys_1","keys","calculateSigRecovery","chainId","vBN","subn","chainIdBN","sub","muln","addn","isValidSigRecovery","recovery","rec","eqn","msgHash","ecdsaSign","signature","r","s","senderPubKey","ecdsaRecover","vn","ss","sig","bufferToInt","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","gt","cmp","message","TypeOutput","outputType","output","bn","max","MAX_SAFE_INTEGER","module","assert","val","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","number","base","endian","negative","words","red","_init","wordSize","window","parseHex4Bits","string","index","c","parseHexByte","lowerBound","parseBase","start","end","mul","b","len","Math","min","move","dest","src","left","_initNumber","_initArray","_parseHex","_parseBase","ceil","j","w","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","_move","clone","_expand","size","_normSign","Symbol","for","inspect","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","modrn","idivn","smallMulTo","lo","ncarry","rword","maxJ","ArrayType","reqLength","res","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","width","abs","inotn","iaddn","testn","notn","ineg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","sqr","isqr","toBitArray","q","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","ltn","lten","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","strip","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","createKeccak","createShake","KeccakState","Keccak","Shake","algorithm","options","Transform","rate","capacity","delimitedSuffix","hashBitLength","_rate","_capacity","_delimitedSuffix","_hashBitLength","_options","_state","initialize","_finalized","chunk","encoding","callback","error","TypeError","absorb","absorbLastFewBits","squeeze","_resetState","dataByteLength","P1600_ROUND_CONSTANTS","p1600","lo0","hi0","lo1","hi1","lo2","hi2","lo3","hi3","lo4","hi4","t1slo0","t1shi0","t1slo5","t1shi5","t1slo10","t1shi10","t1slo15","t1shi15","t1slo20","t1shi20","t1slo1","t1shi1","t1slo6","t1shi6","t1slo11","t1shi11","t1slo16","t1shi16","t1slo21","t1shi21","t1slo2","t1shi2","t1slo7","t1shi7","t1slo12","t1shi12","t1slo17","t1shi17","t1slo22","t1shi22","t1slo3","t1shi3","t1slo8","t1shi8","t1slo13","t1shi13","t1slo18","t1shi18","t1slo23","t1shi23","t1slo4","t1shi4","t1slo9","t1shi9","t1slo14","t1shi14","t1slo19","t1shi19","t1slo24","t1shi24","t2slo0","t2shi0","t2slo16","t2shi16","t2slo7","t2shi7","t2slo23","t2shi23","t2slo14","t2shi14","t2slo10","t2shi10","t2slo1","t2shi1","t2slo17","t2shi17","t2slo8","t2shi8","t2slo24","t2shi24","t2slo20","t2shi20","t2slo11","t2shi11","t2slo2","t2shi2","t2slo18","t2shi18","t2slo9","t2shi9","t2slo5","t2shi5","t2slo21","t2shi21","t2slo12","t2shi12","t2slo3","t2shi3","t2slo19","t2shi19","t2slo15","t2shi15","t2slo6","t2shi6","t2slo22","t2shi22","t2slo13","t2shi13","t2slo4","t2shi4","keccakState","state","blockSize","count","squeezing","alloc","safeParseInt","encodeLength","offset","hexLength","firstByte","_decode","llength","innerRemainder","decoded","remainder","totalLength","integer","inputBuf","stream","inputBuffer"],"sourceRoot":""}